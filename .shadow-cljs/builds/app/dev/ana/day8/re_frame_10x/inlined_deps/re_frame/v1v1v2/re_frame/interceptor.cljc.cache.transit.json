["^ ","~:output",["^ ","~:js","goog.provide('day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor');\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.mandatory_interceptor_keys = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"after\",\"after\",594996914),null,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),null,new cljs.core.Keyword(null,\"before\",\"before\",-1633692388),null], null), null);\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.interceptor_QMARK_ = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$interceptor$interceptor_QMARK_(m){\nreturn ((cljs.core.map_QMARK_(m)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.mandatory_interceptor_keys,cljs.core.set(cljs.core.keys(m)))));\n});\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.__GT_interceptor = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$interceptor$__GT_interceptor(var_args){\nvar args__4824__auto__ = [];\nvar len__4818__auto___37628 = arguments.length;\nvar i__4819__auto___37629 = (0);\nwhile(true){\nif((i__4819__auto___37629 < len__4818__auto___37628)){\nargs__4824__auto__.push((arguments[i__4819__auto___37629]));\n\nvar G__37630 = (i__4819__auto___37629 + (1));\ni__4819__auto___37629 = G__37630;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4825__auto__ = ((((0) < args__4824__auto__.length))?(new cljs.core.IndexedSeq(args__4824__auto__.slice((0)),(0),null)):null);\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(argseq__4825__auto__);\n});\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic = (function (p__37567){\nvar map__37568 = p__37567;\nvar map__37568__$1 = cljs.core.__destructure_map(map__37568);\nvar m = map__37568__$1;\nvar id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__37568__$1,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092));\nvar before = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__37568__$1,new cljs.core.Keyword(null,\"before\",\"before\",-1633692388));\nvar after = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__37568__$1,new cljs.core.Keyword(null,\"after\",\"after\",594996914));\nif(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interop.debug_enabled_QMARK_){\nvar temp__5751__auto___37634 = cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(cljs.core.set(cljs.core.keys(m)),day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.mandatory_interceptor_keys));\nif(temp__5751__auto___37634){\nvar unknown_keys_37635 = temp__5751__auto___37634;\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ->interceptor\",m,\"has unknown keys:\",unknown_keys_37635], 0));\n} else {\n}\n} else {\n}\n\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),(function (){var or__4212__auto__ = id;\nif(cljs.core.truth_(or__4212__auto__)){\nreturn or__4212__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"unnamed\",\"unnamed\",-26044928);\n}\n})(),new cljs.core.Keyword(null,\"before\",\"before\",-1633692388),before,new cljs.core.Keyword(null,\"after\",\"after\",594996914),after], null);\n}));\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.__GT_interceptor.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.__GT_interceptor.cljs$lang$applyTo = (function (seq37563){\nvar self__4806__auto__ = this;\nreturn self__4806__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq37563));\n}));\n\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_effect = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$interceptor$get_effect(var_args){\nvar G__37584 = arguments.length;\nswitch (G__37584) {\ncase 1:\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$1 = (function (context){\nreturn new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292).cljs$core$IFn$_invoke$arity$1(context);\n}));\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$2 = (function (context,key){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292),key], null));\n}));\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$3 = (function (context,key,not_found){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292),key], null),not_found);\n}));\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_effect.cljs$lang$maxFixedArity = 3);\n\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.assoc_effect = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$interceptor$assoc_effect(context,key,value){\nreturn cljs.core.assoc_in(context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292),key], null),value);\n});\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.update_effect = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$interceptor$update_effect(var_args){\nvar args__4824__auto__ = [];\nvar len__4818__auto___37637 = arguments.length;\nvar i__4819__auto___37638 = (0);\nwhile(true){\nif((i__4819__auto___37638 < len__4818__auto___37637)){\nargs__4824__auto__.push((arguments[i__4819__auto___37638]));\n\nvar G__37639 = (i__4819__auto___37638 + (1));\ni__4819__auto___37638 = G__37639;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4825__auto__ = ((((3) < args__4824__auto__.length))?(new cljs.core.IndexedSeq(args__4824__auto__.slice((3)),(0),null)):null);\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.update_effect.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4825__auto__);\n});\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.update_effect.cljs$core$IFn$_invoke$arity$variadic = (function (context,key,f,args){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$5(cljs.core.update_in,context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292),key], null),f,args);\n}));\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.update_effect.cljs$lang$maxFixedArity = (3));\n\n/** @this {Function} */\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.update_effect.cljs$lang$applyTo = (function (seq37599){\nvar G__37600 = cljs.core.first(seq37599);\nvar seq37599__$1 = cljs.core.next(seq37599);\nvar G__37601 = cljs.core.first(seq37599__$1);\nvar seq37599__$2 = cljs.core.next(seq37599__$1);\nvar G__37602 = cljs.core.first(seq37599__$2);\nvar seq37599__$3 = cljs.core.next(seq37599__$2);\nvar self__4805__auto__ = this;\nreturn self__4805__auto__.cljs$core$IFn$_invoke$arity$variadic(G__37600,G__37601,G__37602,seq37599__$3);\n}));\n\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$interceptor$get_coeffect(var_args){\nvar G__37613 = arguments.length;\nswitch (G__37613) {\ncase 1:\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$1 = (function (context){\nreturn new cljs.core.Keyword(null,\"coeffects\",\"coeffects\",497912985).cljs$core$IFn$_invoke$arity$1(context);\n}));\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2 = (function (context,key){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"coeffects\",\"coeffects\",497912985),key], null));\n}));\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$3 = (function (context,key,not_found){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"coeffects\",\"coeffects\",497912985),key], null),not_found);\n}));\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$lang$maxFixedArity = 3);\n\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.assoc_coeffect = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$interceptor$assoc_coeffect(context,key,value){\nreturn cljs.core.assoc_in(context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"coeffects\",\"coeffects\",497912985),key], null),value);\n});\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.update_coeffect = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$interceptor$update_coeffect(var_args){\nvar args__4824__auto__ = [];\nvar len__4818__auto___37644 = arguments.length;\nvar i__4819__auto___37645 = (0);\nwhile(true){\nif((i__4819__auto___37645 < len__4818__auto___37644)){\nargs__4824__auto__.push((arguments[i__4819__auto___37645]));\n\nvar G__37646 = (i__4819__auto___37645 + (1));\ni__4819__auto___37645 = G__37646;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4825__auto__ = ((((3) < args__4824__auto__.length))?(new cljs.core.IndexedSeq(args__4824__auto__.slice((3)),(0),null)):null);\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.update_coeffect.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4825__auto__);\n});\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.update_coeffect.cljs$core$IFn$_invoke$arity$variadic = (function (context,key,f,args){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$5(cljs.core.update_in,context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"coeffects\",\"coeffects\",497912985),key], null),f,args);\n}));\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.update_coeffect.cljs$lang$maxFixedArity = (3));\n\n/** @this {Function} */\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.update_coeffect.cljs$lang$applyTo = (function (seq37617){\nvar G__37618 = cljs.core.first(seq37617);\nvar seq37617__$1 = cljs.core.next(seq37617);\nvar G__37619 = cljs.core.first(seq37617__$1);\nvar seq37617__$2 = cljs.core.next(seq37617__$1);\nvar G__37620 = cljs.core.first(seq37617__$2);\nvar seq37617__$3 = cljs.core.next(seq37617__$2);\nvar self__4805__auto__ = this;\nreturn self__4805__auto__.cljs$core$IFn$_invoke$arity$variadic(G__37618,G__37619,G__37620,seq37617__$3);\n}));\n\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.invoke_interceptor_fn = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$interceptor$invoke_interceptor_fn(context,interceptor,direction){\nvar temp__5751__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(interceptor,direction);\nif(cljs.core.truth_(temp__5751__auto__)){\nvar f = temp__5751__auto__;\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(context) : f.call(null,context));\n} else {\nreturn context;\n}\n});\n/**\n * Loop over all interceptors, calling `direction` function on each,\n *   threading the value of `context` through every call.\n * \n *   `direction` is one of `:before` or `:after`.\n * \n *   Each iteration, the next interceptor to process is obtained from\n *   context's `:queue`. After they are processed, interceptors are popped\n *   from `:queue` and added to `:stack`.\n * \n *   After sufficient iteration, `:queue` will be empty, and `:stack` will\n *   contain all interceptors processed.\n * \n *   Returns updated `context`. Ie. the `context` which has been threaded\n *   through all interceptor functions.\n * \n *   Generally speaking, an interceptor's `:before` function will (if present)\n *   add to a `context's` `:coeffects`, while it's `:after` function\n *   will modify the `context`'s `:effects`.  Very approximately.\n * \n *   But because all interceptor functions are given `context`, and can\n *   return a modified version of it, the way is clear for an interceptor\n *   to introspect the stack or queue, or even modify the queue\n *   (add new interceptors via `enqueue`?). This is a very fluid arrangement.\n */\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.invoke_interceptors = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$interceptor$invoke_interceptors(context,direction){\nvar context__$1 = context;\nwhile(true){\nvar queue = new cljs.core.Keyword(null,\"queue\",\"queue\",1455835879).cljs$core$IFn$_invoke$arity$1(context__$1);\nif(cljs.core.empty_QMARK_(queue)){\nreturn context__$1;\n} else {\nvar interceptor = cljs.core.peek(queue);\nvar stack = new cljs.core.Keyword(null,\"stack\",\"stack\",-793405930).cljs$core$IFn$_invoke$arity$1(context__$1);\nvar G__37652 = day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.invoke_interceptor_fn(cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(context__$1,new cljs.core.Keyword(null,\"queue\",\"queue\",1455835879),cljs.core.pop(queue),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"stack\",\"stack\",-793405930),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,interceptor)], 0)),interceptor,direction);\ncontext__$1 = G__37652;\ncontinue;\n}\nbreak;\n}\n});\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.enqueue = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$interceptor$enqueue(context,interceptors){\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(context,new cljs.core.Keyword(null,\"queue\",\"queue\",1455835879),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.into,day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interop.empty_queue),interceptors);\n});\n/**\n * Create a fresh context\n */\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.context = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$interceptor$context(var_args){\nvar G__37625 = arguments.length;\nswitch (G__37625) {\ncase 2:\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.context.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.context.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.context.cljs$core$IFn$_invoke$arity$2 = (function (event,interceptors){\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.enqueue(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.assoc_coeffect(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.assoc_coeffect(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"event\",\"event\",301435442),event),new cljs.core.Keyword(null,\"original-event\",\"original-event\",2121330403),event),interceptors);\n}));\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.context.cljs$core$IFn$_invoke$arity$3 = (function (event,interceptors,db){\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.assoc_coeffect(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.context.cljs$core$IFn$_invoke$arity$2(event,interceptors),new cljs.core.Keyword(null,\"db\",\"db\",993250759),db);\n}));\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.context.cljs$lang$maxFixedArity = 3);\n\n/**\n * Called on completion of `:before` processing, this function prepares/modifies\n * `context` for the backwards sweep of processing in which an interceptor\n * chain's `:after` fns are called.\n * \n *   At this point in processing, the `:queue` is empty and `:stack` holds all\n *   the previously run interceptors. So this function enables the backwards walk\n *   by priming `:queue` with what's currently in `:stack`\n */\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.change_direction = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$interceptor$change_direction(context){\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.enqueue(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\"queue\",\"queue\",1455835879)),new cljs.core.Keyword(null,\"stack\",\"stack\",-793405930).cljs$core$IFn$_invoke$arity$1(context));\n});\n/**\n * Executes the given chain (coll) of interceptors.\n * \n * Each interceptor has this form:\n *     {:before  (fn [context] ...)     ;; returns possibly modified context\n *      :after   (fn [context] ...)}    ;; `identity` would be a noop\n * \n * Walks the queue of interceptors from beginning to end, calling the\n * `:before` fn on each, then reverse direction and walk backwards,\n * calling the `:after` fn on each.\n * \n * The last interceptor in the chain presumably wraps an event\n * handler fn. So the overall goal of the process is to \"handle\n * the given event\".\n * \n * Thread a `context` through all calls. `context` has this form:\n * \n *   {:coeffects {:event [:a-query-id :some-param]\n *                :db    <original contents of app-db>}\n *    :effects   {:db    <new value for app-db>\n *                :dispatch  [:an-event-id :param1]}\n *    :queue     <a collection of further interceptors>\n *    :stack     <a collection of interceptors already walked>}\n * \n * `context` has `:coeffects` and `:effects` which, if this was a web\n * server, would be somewhat analogous to `request` and `response`\n * respectively.\n * \n * `coeffects` will contain data like `event` and the initial\n * state of `db` -  the inputs required by the event handler\n * (sitting presumably on the end of the chain), while handler-returned\n * side effects are put into `:effects` including, but not limited to,\n * new values for `db`.\n * \n * The first few interceptors in a chain will likely have `:before`\n * functions which \"prime\" the `context` by adding the event, and\n * the current state of app-db into `:coeffects`. But interceptors can\n * add whatever they want to `:coeffects` - perhaps the event handler needs\n * some information from localstore, or a random number, or access to\n * a DataScript connection.\n * \n * Equally, some interceptors in the chain will have `:after` fn\n * which can process the side effects accumulated into `:effects`\n * including but, not limited to, updates to app-db.\n * \n * Through both stages (before and after), `context` contains a `:queue`\n * of interceptors yet to be processed, and a `:stack` of interceptors\n * already done.  In advanced cases, these values can be modified by the\n * functions through which the context is threaded.\n */\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.execute = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$interceptor$execute(event_v,interceptors){\nif(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__37509__auto___37654 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.merge,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"interceptors\",\"interceptors\",-1546782951),interceptors], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"interceptors\",\"interceptors\",-1546782951),interceptors], null)], null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977))], 0));\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace._STAR_current_trace_STAR_ = new_trace__37509__auto___37654);\n\n} else {\n}\n\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.invoke_interceptors(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.change_direction(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.invoke_interceptors(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.context.cljs$core$IFn$_invoke$arity$2(event_v,interceptors),new cljs.core.Keyword(null,\"before\",\"before\",-1633692388))),new cljs.core.Keyword(null,\"after\",\"after\",594996914));\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","~:line",1,"~:column",33,"~:end-line",1,"~:end-column",100,"~:mranderson/inlined",true],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index","~$highlight.js","~$module$node_modules$highlight_DOT_js$lib$index","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.repl","~$cljs.repl"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.loggers","^T","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interop","^U","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.trace","^V","~$trace","^V","~$clojure.set","^X","~$set","^X","~$cljs.core","^Z","~$goog","^["],"~:seen",["^M",["~:require"]],"~:uses",["^ ","~$console","^T","~$empty-queue","^U","~$debug-enabled?","^U"],"~:require-macros",["^ ","^V","^V","^W","^V","^Z","^Z"],"~:form",["~#list",["~$ns","^O",["^18",["^11",["^T","~:refer",["^13"]],["^U","^1:",["^14","^15"]],["^V","~:as","^W","~:include-macros",true],["^X","^1;","^Y"]]]]],"~:flags",["^ ","^11",["^M",[]]],"~:js-deps",["^ "],"~:deps",["^[","^Z","^T","^U","^V","^X"]],"^Q","^O","~:resource-id",["~:shadow.build.classpath/resource","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc"],"~:compiled-at",1638904276390,"~:resource-name","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","~:warnings",[],"~:source","(ns ^{:mranderson/inlined true} day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor\n  (:require\n    [day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.loggers :refer [console]]\n    [day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interop :refer [empty-queue debug-enabled?]]\n    [day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.trace :as trace :include-macros true]\n    [clojure.set :as set]))\n\n\n(def mandatory-interceptor-keys #{:id :after :before})\n\n(defn interceptor?\n  [m]\n  (and (map? m)\n       (= mandatory-interceptor-keys (-> m keys set))))\n\n\n(defn ->interceptor\n  [& {:as m :keys [id before after]}]\n  (when debug-enabled?\n    (if-let [unknown-keys (seq (set/difference\n                                (-> m keys set)\n                                mandatory-interceptor-keys))]\n      (console :error \"re-frame: ->interceptor\" m \"has unknown keys:\" unknown-keys)))\n  {:id     (or id :unnamed)\n   :before before\n   :after  after})\n\n;; -- Effect Helpers  -----------------------------------------------------------------------------\n\n(defn get-effect\n  ([context]\n   (:effects context))\n  ([context key]\n   (get-in context [:effects key]))\n  ([context key not-found]\n   (get-in context [:effects key] not-found)))\n\n(defn assoc-effect\n  [context key value]\n  (assoc-in context [:effects key] value))\n\n(defn update-effect\n  [context key f & args]\n  (apply update-in context [:effects key] f args))\n\n;; -- CoEffect Helpers  ---------------------------------------------------------------------------\n\n(defn get-coeffect\n  ([context]\n   (:coeffects context))\n  ([context key]\n   (get-in context [:coeffects key]))\n  ([context key not-found]\n   (get-in context [:coeffects key] not-found)))\n\n(defn assoc-coeffect\n  [context key value]\n  (assoc-in context [:coeffects key] value))\n\n(defn update-coeffect\n  [context key f & args]\n  (apply update-in context [:coeffects key] f args))\n\n;; -- Execute Interceptor Chain  ------------------------------------------------------------------\n\n\n(defn- invoke-interceptor-fn\n  [context interceptor direction]\n  (if-let [f (get interceptor direction)]\n    (f context)\n    context))\n\n\n(defn- invoke-interceptors\n  \"Loop over all interceptors, calling `direction` function on each,\n  threading the value of `context` through every call.\n\n  `direction` is one of `:before` or `:after`.\n\n  Each iteration, the next interceptor to process is obtained from\n  context's `:queue`. After they are processed, interceptors are popped\n  from `:queue` and added to `:stack`.\n\n  After sufficient iteration, `:queue` will be empty, and `:stack` will\n  contain all interceptors processed.\n\n  Returns updated `context`. Ie. the `context` which has been threaded\n  through all interceptor functions.\n\n  Generally speaking, an interceptor's `:before` function will (if present)\n  add to a `context's` `:coeffects`, while it's `:after` function\n  will modify the `context`'s `:effects`.  Very approximately.\n\n  But because all interceptor functions are given `context`, and can\n  return a modified version of it, the way is clear for an interceptor\n  to introspect the stack or queue, or even modify the queue\n  (add new interceptors via `enqueue`?). This is a very fluid arrangement.\"\n  ([context direction]\n   (loop [context context]\n     (let [queue (:queue context)]        ;; future interceptors\n       (if (empty? queue)\n         context\n         (let [interceptor (peek queue)   ;; next interceptor to call\n               stack (:stack context)]    ;; already completed interceptors\n           (recur (-> context\n                      (assoc :queue (pop queue)\n                             :stack (conj stack interceptor))\n                      (invoke-interceptor-fn interceptor direction)))))))))\n\n\n(defn enqueue\n  [context interceptors]\n  (update context :queue\n          (fnil into empty-queue)\n          interceptors))\n\n\n(defn- context\n  \"Create a fresh context\"\n  ([event interceptors]\n   (-> {}\n      (assoc-coeffect :event event)\n      ;; Some interceptors, like `trim-v` and `unwrap`, alter event so capture\n      ;; the original for use cases such as tracing.\n      (assoc-coeffect :original-event event)\n      (enqueue interceptors)))\n  ([event interceptors db]      ;; only used in tests, probably a hack, remove ?  XXX\n   (-> (context event interceptors)\n       (assoc-coeffect :db db))))\n\n\n(defn- change-direction\n  \"Called on completion of `:before` processing, this function prepares/modifies\n   `context` for the backwards sweep of processing in which an interceptor\n   chain's `:after` fns are called.\n\n  At this point in processing, the `:queue` is empty and `:stack` holds all\n  the previously run interceptors. So this function enables the backwards walk\n  by priming `:queue` with what's currently in `:stack`\"\n  [context]\n  (-> context\n      (dissoc :queue)\n      (enqueue (:stack context))))\n\n\n(defn execute\n  \"Executes the given chain (coll) of interceptors.\n\n   Each interceptor has this form:\n       {:before  (fn [context] ...)     ;; returns possibly modified context\n        :after   (fn [context] ...)}    ;; `identity` would be a noop\n\n   Walks the queue of interceptors from beginning to end, calling the\n   `:before` fn on each, then reverse direction and walk backwards,\n   calling the `:after` fn on each.\n\n   The last interceptor in the chain presumably wraps an event\n   handler fn. So the overall goal of the process is to \\\"handle\n   the given event\\\".\n\n   Thread a `context` through all calls. `context` has this form:\n\n     {:coeffects {:event [:a-query-id :some-param]\n                  :db    <original contents of app-db>}\n      :effects   {:db    <new value for app-db>\n                  :dispatch  [:an-event-id :param1]}\n      :queue     <a collection of further interceptors>\n      :stack     <a collection of interceptors already walked>}\n\n   `context` has `:coeffects` and `:effects` which, if this was a web\n   server, would be somewhat analogous to `request` and `response`\n   respectively.\n\n   `coeffects` will contain data like `event` and the initial\n   state of `db` -  the inputs required by the event handler\n   (sitting presumably on the end of the chain), while handler-returned\n   side effects are put into `:effects` including, but not limited to,\n   new values for `db`.\n\n   The first few interceptors in a chain will likely have `:before`\n   functions which \\\"prime\\\" the `context` by adding the event, and\n   the current state of app-db into `:coeffects`. But interceptors can\n   add whatever they want to `:coeffects` - perhaps the event handler needs\n   some information from localstore, or a random number, or access to\n   a DataScript connection.\n\n   Equally, some interceptors in the chain will have `:after` fn\n   which can process the side effects accumulated into `:effects`\n   including but, not limited to, updates to app-db.\n\n   Through both stages (before and after), `context` contains a `:queue`\n   of interceptors yet to be processed, and a `:stack` of interceptors\n   already done.  In advanced cases, these values can be modified by the\n   functions through which the context is threaded.\"\n  [event-v interceptors]\n  (trace/merge-trace!\n    {:tags {:interceptors interceptors}})\n  (-> (context event-v interceptors)\n      (invoke-interceptors :before)\n      change-direction\n      (invoke-interceptors :after)))\n","~:reader-features",["^M",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/mandatory-interceptor-keys","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/interceptor?","m","cljs.core/map?","cljs.core._EQ_","cljs.core/keys","cljs.core/set","var_args","args__4824__auto__","len__4818__auto__","i__4819__auto__","argseq__4825__auto__","cljs.core/IndexedSeq","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/->interceptor","p__37567","map__37568","cljs.core/--destructure-map","cljs.core.get","seq37563","self__4806__auto__","cljs.core/seq","id","before","after","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interop/debug-enabled?","temp__5751__auto__","unknown-keys","clojure.set.difference","day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.loggers.console","or__4212__auto__","G__37584","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/get-effect","js/Error","context","key","cljs.core.get_in","not-found","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/assoc-effect","value","cljs.core/assoc-in","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/update-effect","seq37599","G__37600","cljs.core/first","cljs.core/next","G__37601","G__37602","self__4805__auto__","f","args","cljs.core.apply","cljs.core/update-in","G__37613","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/get-coeffect","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/assoc-coeffect","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/update-coeffect","seq37617","G__37618","G__37619","G__37620","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/invoke-interceptor-fn","interceptor","direction","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/invoke-interceptors","queue","cljs.core/empty?","cljs.core/peek","stack","cljs.core.assoc","cljs.core/pop","cljs.core.conj","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/enqueue","interceptors","cljs.core.update","cljs.core.fnil","cljs.core/into","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interop/empty-queue","G__37625","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/context","event","db","day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.context","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/change-direction","cljs.core.dissoc","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/execute","event-v","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.trace/is-trace-enabled?","new-trace__37509__auto__","cljs.core.merge","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.trace/*current-trace*","cljs.core/merge"]],"~:used-vars",["^M",["~$cljs.core/--destructure-map","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/change-direction","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/invoke-interceptor-fn","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/get-coeffect","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interop/empty-queue","~$cljs.core/=","~$cljs.core/keys","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.trace/is-trace-enabled?","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/assoc-effect","~$cljs.core/IndexedSeq","~$cljs.core/seq","~$cljs.core/apply","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interop/debug-enabled?","~$cljs.core/dissoc","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/execute","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/mandatory-interceptor-keys","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.trace/*current-trace*","~$cljs.core/pop","~$cljs.core/set","~$cljs.core/empty?","~$cljs.core/fnil","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/interceptor?","~$cljs.core/into","~$cljs.core/map?","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/update-coeffect","~$cljs.core/conj","~$cljs.core/update","~$cljs.core/peek","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/assoc-coeffect","~$cljs.core/get-in","~$cljs.core/get","~$clojure.set/difference","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.loggers/console","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/context","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/get-effect","~$cljs.core/next","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/enqueue","~$cljs.core/assoc","~$cljs.core/assoc-in","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/->interceptor","~$cljs.core/first","~$cljs.core/merge","~$cljs.core/update-in","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/invoke-interceptors","~$js/Error","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/update-effect"]]],"~:cache-keys",["~#cmap",[["^1A","goog/dom/tagname.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^M",[]],"~:deps-syms",["^[","~$goog.dom.HtmlElement"]]],["^1A","goog/labs/useragent/platform.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","~$goog.labs.userAgent.util","~$goog.string"]]],["^1A","goog/math/math.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","~$goog.array","~$goog.asserts"]]],["^1A","goog/html/trustedtypes.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^["]]],["^1A","goog/events/eventtype.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","~$goog.events.BrowserFeature","~$goog.userAgent"]]],["^1A","goog/labs/useragent/browser.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^2X","^2V","~$goog.object","~$goog.string.internal"]]],["^1A","goog/html/safeurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^2Y","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^31"]]],["^1A","goog/array/array.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^2Y"]]],["^1A","goog/useragent/useragent.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^2V","~$goog.reflect","^2W"]]],["^1A","day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/ratom.cljs"],["b62e3632bcb12831abdceed273b41eefc80e66c4","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^Z","~$day8.re-frame-10x.inlined-deps.reagent.v1v0v0.reagent.impl.util","~$day8.re-frame-10x.inlined-deps.reagent.v1v0v0.reagent.debug","~$day8.re-frame-10x.inlined-deps.reagent.v1v0v0.reagent.impl.batching","^X","^30"]]],["^1A","goog/debug/error.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^["]]],["^1A","goog/events/events.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^2Y","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","^2Z","~$goog.events.Listenable","~$goog.events.ListenerMap","~$goog.debug.ErrorHandler","~$goog.events.EventId","~$goog.events.EventLike","~$goog.events.EventWrapper","~$goog.events.ListenableKey","~$goog.events.Listener"]]],["^1A","goog/events/browserfeature.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^2["]]],["^1A","goog/dom/nodetype.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^["]]],["^1A","day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/impl/protocols.cljs"],["b62e3632bcb12831abdceed273b41eefc80e66c4","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^Z"]]],["^1A","goog/events/eventtarget.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","~$goog.Disposable","^2Y","~$goog.events","~$goog.events.Event","^3A","^3B","^30","^3D","^3E","^3G"]]],["^1A","goog/disposable/disposable.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","~$goog.disposable.IDisposable"]]],["^1A","day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/impl/input.cljs"],["b62e3632bcb12831abdceed273b41eefc80e66c4","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^Z","~$day8.re-frame-10x.inlined-deps.reagent.v1v0v0.reagent.impl.component","^3>","~$day8.re-frame-10x.inlined-deps.reagent.v1v0v0.reagent.impl.protocols"]]],["^1A","goog/string/typedstring.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^["]]],["~:shadow.build.npm/resource","node_modules/react/index.js"],["e8091a4577ab6b32c9fa13d5dfc59db052218e1e","09b0094a68f7d718c1f13d0c2c5f0ebe2b3a092e","a69a7f3d4a4636bf9035bc53c05b2d99a7b8af7f","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["~$shadow.js","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1A","shadow/js.js"],["49660b9b24da1302d20c78ce1e0e39f1bbc6a2c5","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^["]]],["^1A","goog/object/object.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^["]]],["^1A","goog/dom/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^2Y"]]],"~:SHADOW-TIMESTAMP",[1628015068000,1628015068000,1628015038000],["^3O","node_modules/react/cjs/react.development.js"],["e8091a4577ab6b32c9fa13d5dfc59db052218e1e","09b0094a68f7d718c1f13d0c2c5f0ebe2b3a092e","754b7a48941975257c8955f6d5e511cb3a878737","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^3P","~$module$node_modules$object_assign$index"]]],["^1A","goog/math/long.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^2Y","^3;"]]],["^1A","goog/events/listener.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^3G","^3A"]]],["^1A","goog/html/trustedresourceurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^2Y","~$goog.fs.blob","^32","~$goog.html.SafeScript","~$goog.html.trustedtypes","^34","^35","^36","^37"]]],["^1A","goog/debug/tracer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^2X","^2Y","~$goog.debug","~$goog.debug.Logger","~$goog.iter","~$goog.log","~$goog.structs.Map","~$goog.structs.SimplePool"]]],["^1A","goog/events/listenermap.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^2X","^3H","^30","^3D","^3A","^3G"]]],["^1A","goog/events/eventid.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^["]]],["^1A","goog/string/internal.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^["]]],["^1A","goog/events/eventwrapper.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","~$goog.events.EventHandler","~$goog.events.ListenableType"]]],["^1A","day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/impl/template.cljs"],["b62e3632bcb12831abdceed273b41eefc80e66c4","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^Z","^@","~$clojure.string","^3<","^3M","^3>","~$day8.re-frame-10x.inlined-deps.reagent.v1v0v0.reagent.impl.input","^3N","~$day8.re-frame-10x.inlined-deps.reagent.v1v0v0.reagent.ratom","^3=","^30"]]],["^1A","goog/functions/functions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^["]]],["^1A","goog/html/safestyle.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^2X","^2Y","~$goog.html.SafeUrl","^36","^37","^31"]]],["^1A","goog/dom/safe.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^2Y","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^3V","~$goog.html.SafeStyle","^47","^33","~$goog.html.uncheckedconversions","^36","^31"]]],["^1A","clojure/walk.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^Z"]]],["^1A","goog/structs/map.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1A","goog/html/safehtml.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^2X","^2Y","~$goog.dom.TagName","~$goog.dom.tags","^3V","^4;","~$goog.html.SafeStyleSheet","^47","^33","^3W","^34","^35","^38","^30","^36","^37","^31"]]],["^1A","goog/dom/tags.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^30"]]],["^1A","goog/math/size.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^["]]],["^1A","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc"],["b62e3632bcb12831abdceed273b41eefc80e66c4","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^Z","^T","^U","^V","^X"]]],["^1A","goog/labs/useragent/engine.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^2X","^2V","^2W"]]],["^1A","goog/fs/blob.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^2X"]]],["^1A","goog/dom/dom.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^2X","^2Y","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^4?","~$goog.dom.safe","^4:","^4<","~$goog.math.Coordinate","~$goog.math.Size","^30","^2W","^36","~$goog.string.Unicode","^2["]]],["^1A","goog/asserts/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","~$goog.debug.Error","^4C"]]],["^1A","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/loggers.cljc"],["b62e3632bcb12831abdceed273b41eefc80e66c4","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^Z","^X"]]],["^1A","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interop.cljs"],["b62e3632bcb12831abdceed273b41eefc80e66c4","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^Z","~$goog.async.nextTick","^3J","~$day8.re-frame-10x.inlined-deps.reagent.v1v0v0.reagent.core","^46"]]],["^1A","goog/uri/uri.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^2X","^2Y","^2W","~$goog.structs","^40","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1A","day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/core.cljs"],["b62e3632bcb12831abdceed273b41eefc80e66c4","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^Z","^@","~$day8.re-frame-10x.inlined-deps.reagent.v1v0v0.reagent.impl.template","^3M","^3<","^3>","^3N","^46","^3="]]],["^1A","goog/i18n/bidi.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^["]]],["^3O","node_modules/object-assign/index.js"],["e8091a4577ab6b32c9fa13d5dfc59db052218e1e","09b0094a68f7d718c1f13d0c2c5f0ebe2b3a092e","519ffd5a4c91b67302cc9947b794966d629860cd","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^3P"]]],["^1A","goog/debug/errorhandler.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^3I","^2Y","^3X","~$goog.debug.EntryPointMonitor","^4H","~$goog.debug.Trace"]]],["^1A","goog/disposable/idisposable.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^["]]],["^1A","goog/fs/url.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^["]]],["^1A","goog/base.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",[]]],["^1A","goog/structs/structs.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^2X","^30"]]],["^1A","clojure/string.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^Z","^2W","~$goog.string.StringBuffer"]]],["^3O","node_modules/react/cjs/react.production.min.js"],["e8091a4577ab6b32c9fa13d5dfc59db052218e1e","09b0094a68f7d718c1f13d0c2c5f0ebe2b3a092e","0a81b45abe33f0ad39b726512604018f94261db9","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^3P","^3T"]]],["^1A","goog/debug/entrypointregistry.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^2Y"]]],["^1A","goog/string/string.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^4D","^4<","^36","^31"]]],["^1A","goog/reflect/reflect.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^["]]],["^1A","goog/labs/useragent/util.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^31"]]],["^1A","goog/debug/debug.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^2X","~$goog.debug.errorcontext","^2["]]],["^1A","goog/string/stringbuffer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^["]]],["^1A","goog/math/coordinate.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","~$goog.math"]]],["^1A","goog/debug/errorcontext.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^["]]],["^1A","goog/iter/iter.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^2X","^2Y","^49","^4T"]]],["^1A","goog/async/nexttick.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^3?","~$goog.dom","^4?","^49","^38","^39"]]],["^1A","goog/html/uncheckedconversions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^2Y","^4:","^3V","^4;","^4A","^47","^33","^36","^31","^34"]]],["^1A","goog/debug/logger.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^3X","^3[","~$goog.log.Level","~$goog.log.LogRecord","~$goog.log.Logger"]]],["^1A","goog/events/event.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^3I","^3D"]]],["^1A","day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/debug.cljs"],["b62e3632bcb12831abdceed273b41eefc80e66c4","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^Z"]]],["^1A","goog/events/eventhandler.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^3I","^3J","^30","^3K","^3D","~$goog.events.EventTarget","^3F"]]],["^1A","goog/dom/htmlelement.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^["]]],["^1A","cljs/core.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","~$goog.math.Long","~$goog.math.Integer","^2W","^30","^2X","~$goog.Uri","^4R"]]],["^1A","goog/html/safescript.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^36","^37","^3W","^2Y"]]],["^1A","goog/log/log.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^2Y","^3X"]]],["^1A","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/trace.cljc"],["b62e3632bcb12831abdceed273b41eefc80e66c4","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^Z","^U","^T","^49"]]],["^1A","day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/impl/component.cljs"],["b62e3632bcb12831abdceed273b41eefc80e66c4","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^Z","^30","^@","^3<","^3>","^3N","^46","^3="]]],["^1A","goog/html/safestylesheet.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^36","^4;","^37","^2X","^30","^2Y","^31"]]],["^1A","goog/events/browserevent.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^3X","^2Z","^3K","~$goog.events.EventType","^3;","^2["]]],["^1A","goog/math/integer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^3;"]]],["^1A","goog/structs/simplepool.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^3I"]]],["^1A","goog/dom/browserfeature.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^2["]]],["^1A","day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/impl/batching.cljs"],["b62e3632bcb12831abdceed273b41eefc80e66c4","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^Z","^3=","^3<"]]],["^1A","clojure/set.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^Z"]]],["^1A","goog/uri/utils.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^2Y","^2W"]]],["^1A","goog/string/const.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^2Y","^37"]]],["^1A","day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/impl/util.cljs"],["b62e3632bcb12831abdceed273b41eefc80e66c4","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^Z","^44","~$clojure.walk","^30","^3="]]],["^1A","goog/events/listenable.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2Q",["^ ","^2R",null,"^2S",["^M",[]],"^2T",["^[","^3D","^3E"]]]]],"~:clj-info",["^ ","jar:file:/Users/hagenek/.m2/repository/binaryage/devtools/1.0.3/devtools-1.0.3.jar!/devtools/defaults.clj",1638904136000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1628015039000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1628015039000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/passes.cljc",1628015038000,"jar:file:/Users/hagenek/.m2/repository/net/cgrand/macrovich/0.2.1/macrovich-0.2.1.jar!/net/cgrand/macrovich.cljc",1628015064000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/data.json/2.4.0/data.json-2.4.0.jar!/clojure/data/json.clj",1628015036000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/instant.clj",1628015038000,"jar:file:/Users/hagenek/.m2/repository/day8/re-frame/re-frame-10x/1.2.0/re-frame-10x-1.2.0.jar!/day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/trace.cljc",1638904136000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1628015039000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/externs.clj",1628015038000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map/base64.clj",1628015038000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1628015039000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader.clj",1628015036000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map.clj",1628015038000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1628015039000,"jar:file:/Users/hagenek/.m2/repository/day8/re-frame/re-frame-10x/1.2.0/re-frame-10x-1.2.0.jar!/day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interop.clj",1638904136000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/util.cljc",1628015038000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/js_deps.cljc",1628015038000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map/base64_vlq.clj",1628015038000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/default_data_readers.clj",1628015036000,"jar:file:/Users/hagenek/.m2/repository/day8/re-frame/re-frame-10x/1.2.0/re-frame-10x-1.2.0.jar!/day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/core.clj",1638904136000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/core.cljc",1628015038000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/reader_types.clj",1628015036000,"jar:file:/Users/hagenek/.m2/repository/day8/re-frame/re-frame-10x/1.2.0/re-frame-10x-1.2.0.jar!/day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/interop.clj",1638904136000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/tagged_literals.cljc",1628015038000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/errors.clj",1628015036000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/impl.cljc",1628015038000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/inspect.clj",1628015036000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/env.cljc",1628015038000,"jar:file:/Users/hagenek/.m2/repository/day8/re-frame/re-frame-10x/1.2.0/re-frame-10x-1.2.0.jar!/day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/debug.clj",1638904136000,"jar:file:/Users/hagenek/.m2/repository/day8/re-frame/re-frame-10x/1.2.0/re-frame-10x-1.2.0.jar!/day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/ratom.clj",1638904136000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer.cljc",1628015038000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1628015039000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/compiler.cljc",1628015038000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1628015039000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/passes/and_or.cljc",1628015038000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",1,"^8",33,"^9",1,"^:",100,"^;",true],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I","^J"],"^K",null,"^L",["^M",[]],"^N","^O","^R",null,"^S",["^ ","^T","^T","^U","^U","^V","^V","^W","^V","^X","^X","^Y","^X","^Z","^Z","^[","^["],"^10",["^M",["^11"]],"~:shadow/js-access-global",["^M",["Error"]],"^12",["^ ","^13","^T","^14","^U","^15","^U"],"~:defs",["^ ","~$update-effect",["^ ","~:protocol-inline",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",42,"^8",7,"^9",42,"^:",20,"~:arglists",["^18",["~$quote",["^18",[["~$context","~$key","~$f","~$&","~$args"]]]]],"~:top-fn",["^ ","~:variadic?",true,"~:fixed-arity",3,"~:max-fixed-arity",3,"~:method-params",[["^18",["^63","^64","~$f","^65"]]],"^61",["^18",[["^63","^64","~$f","~$&","^65"]]],"~:arglists-meta",["^18",[null]]]],"^N","^2N","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^:",20,"^66",["^ ","^67",true,"^68",3,"^69",3,"^6:",[["^18",["^63","^64","~$f","^65"]]],"^61",["^18",[["^63","^64","~$f","~$&","^65"]]],"^6;",["^18",[null]]],"^6:",[["^18",["^63","^64","~$f","^65"]]],"~:protocol-impl",null,"^68",3,"^6;",["^18",[null]],"^8",1,"^67",true,"~:methods",[["^ ","^68",3,"^67",true,"~:tag","~$any"]],"^7",42,"~:ret-tag","^6?","^9",42,"^69",3,"~:fn-var",true,"^61",["^18",[["^63","^64","~$f","~$&","^65"]]]],"~$invoke-interceptors",["^ ","^60",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",74,"^8",8,"^9",74,"^:",27,"~:private",true,"^61",["^18",["^62",["^18",[["^63","~$direction"]]]]],"~:doc","Loop over all interceptors, calling `direction` function on each,\n  threading the value of `context` through every call.\n\n  `direction` is one of `:before` or `:after`.\n\n  Each iteration, the next interceptor to process is obtained from\n  context's `:queue`. After they are processed, interceptors are popped\n  from `:queue` and added to `:stack`.\n\n  After sufficient iteration, `:queue` will be empty, and `:stack` will\n  contain all interceptors processed.\n\n  Returns updated `context`. Ie. the `context` which has been threaded\n  through all interceptor functions.\n\n  Generally speaking, an interceptor's `:before` function will (if present)\n  add to a `context's` `:coeffects`, while it's `:after` function\n  will modify the `context`'s `:effects`.  Very approximately.\n\n  But because all interceptor functions are given `context`, and can\n  return a modified version of it, the way is clear for an interceptor\n  to introspect the stack or queue, or even modify the queue\n  (add new interceptors via `enqueue`?). This is a very fluid arrangement."],"^6C",true,"^N","^2L","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^:",27,"^6:",["^18",[["^63","^6D"]]],"^6<",null,"^6;",["^18",[null,null]],"^8",1,"^67",false,"^7",74,"^9",74,"^69",2,"^6A",true,"^61",["^18",["^62",["^18",[["^63","^6D"]]]]],"^6E","Loop over all interceptors, calling `direction` function on each,\n  threading the value of `context` through every call.\n\n  `direction` is one of `:before` or `:after`.\n\n  Each iteration, the next interceptor to process is obtained from\n  context's `:queue`. After they are processed, interceptors are popped\n  from `:queue` and added to `:stack`.\n\n  After sufficient iteration, `:queue` will be empty, and `:stack` will\n  contain all interceptors processed.\n\n  Returns updated `context`. Ie. the `context` which has been threaded\n  through all interceptor functions.\n\n  Generally speaking, an interceptor's `:before` function will (if present)\n  add to a `context's` `:coeffects`, while it's `:after` function\n  will modify the `context`'s `:effects`.  Very approximately.\n\n  But because all interceptor functions are given `context`, and can\n  return a modified version of it, the way is clear for an interceptor\n  to introspect the stack or queue, or even modify the queue\n  (add new interceptors via `enqueue`?). This is a very fluid arrangement."],"~$assoc-coeffect",["^ ","^60",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",56,"^8",7,"^9",56,"^:",21,"^61",["^18",["^62",["^18",[["^63","^64","~$value"]]]]]],"^N","^2=","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^:",21,"^6:",["^18",[["^63","^64","^6G"]]],"^6<",null,"^6;",["^18",[null,null]],"^8",1,"^67",false,"^7",56,"^6@",["^M",["~$clj","^6?"]],"^9",56,"^69",3,"^6A",true,"^61",["^18",["^62",["^18",[["^63","^64","^6G"]]]]]],"~$update-coeffect",["^ ","^60",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",60,"^8",7,"^9",60,"^:",22,"^61",["^18",["^62",["^18",[["^63","^64","~$f","~$&","^65"]]]]],"^66",["^ ","^67",true,"^68",3,"^69",3,"^6:",[["^18",["^63","^64","~$f","^65"]]],"^61",["^18",[["^63","^64","~$f","~$&","^65"]]],"^6;",["^18",[null]]]],"^N","^29","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^:",22,"^66",["^ ","^67",true,"^68",3,"^69",3,"^6:",[["^18",["^63","^64","~$f","^65"]]],"^61",["^18",[["^63","^64","~$f","~$&","^65"]]],"^6;",["^18",[null]]],"^6:",[["^18",["^63","^64","~$f","^65"]]],"^6<",null,"^68",3,"^6;",["^18",[null]],"^8",1,"^67",true,"^6=",[["^ ","^68",3,"^67",true,"^6>","^6?"]],"^7",60,"^6@","^6?","^9",60,"^69",3,"^6A",true,"^61",["^18",[["^63","^64","~$f","~$&","^65"]]]],"~$invoke-interceptor-fn",["^ ","^60",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",67,"^8",8,"^9",67,"^:",29,"^6C",true,"^61",["^18",["^62",["^18",[["^63","~$interceptor","^6D"]]]]]],"^6C",true,"^N","^1O","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^:",29,"^6:",["^18",[["^63","^6K","^6D"]]],"^6<",null,"^6;",["^18",[null,null]],"^8",1,"^67",false,"^7",67,"^6@",["^M",[null,"^6?"]],"^9",67,"^69",3,"^6A",true,"^61",["^18",["^62",["^18",[["^63","^6K","^6D"]]]]]],"~$get-effect",["^ ","^60",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",30,"^8",7,"^9",30,"^:",17,"^61",["^18",["^62",["^18",[["^63"],["^63","^64"],["^63","^64","~$not-found"]]]]],"^66",["^ ","^67",false,"^68",3,"^69",3,"^6:",[["^63"],["^63","^64"],["^63","^64","^6M"]],"^61",["^18",[["^63"],["^63","^64"],["^63","^64","^6M"]]],"^6;",["^18",[null,null,null]]]],"^N","^2C","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^:",17,"^66",["^ ","^67",false,"^68",3,"^69",3,"^6:",[["^63"],["^63","^64"],["^63","^64","^6M"]],"^61",["^18",[["^63"],["^63","^64"],["^63","^64","^6M"]]],"^6;",["^18",[null,null,null]]],"^6:",[["^63"],["^63","^64"],["^63","^64","^6M"]],"^6<",null,"^68",3,"^6;",["^18",[null,null,null]],"^8",1,"^67",false,"^6=",[["^ ","^68",1,"^67",false,"^6>","^6?"],["^ ","^68",2,"^67",false,"^6>",["^M",[null,"^6?"]]],["^ ","^68",3,"^67",false,"^6>",["^M",[null,"^6?"]]]],"^7",30,"^9",30,"^69",3,"^6A",true,"^61",["^18",[["^63"],["^63","^64"],["^63","^64","^6M"]]]],"~$->interceptor",["^ ","^60",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",17,"^8",7,"^9",17,"^:",20,"^61",["^18",["^62",["^18",[["~$&",["^ ","^1;","~$m","~:keys",["~$id","~$before","~$after"]]]]]]],"^66",["^ ","^67",true,"^68",0,"^69",0,"^6:",[["^18",[["^ ","^1;","~$m","^6O",["^6P","^6Q","^6R"]]]]],"^61",["^18",[["~$&",["^ ","^1;","~$m","^6O",["^6P","^6Q","^6R"]]]]],"^6;",["^18",[null]]]],"^N","^2H","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^:",20,"^66",["^ ","^67",true,"^68",0,"^69",0,"^6:",[["^18",[["^ ","^1;","~$m","^6O",["^6P","^6Q","^6R"]]]]],"^61",["^18",[["~$&",["^ ","^1;","~$m","^6O",["^6P","^6Q","^6R"]]]]],"^6;",["^18",[null]]],"^6:",[["^18",[["^ ","^1;","~$m","^6O",["^6P","^6Q","^6R"]]]]],"^6<",null,"^68",0,"^6;",["^18",[null]],"^8",1,"^67",true,"^6=",[["^ ","^68",0,"^67",true,"^6>","~$cljs.core/IMap"]],"^7",17,"^6@","^6?","^9",17,"^69",0,"^6A",true,"^61",["^18",[["~$&",["^ ","^1;","~$m","^6O",["^6P","^6Q","^6R"]]]]]],"~$get-coeffect",["^ ","^60",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",48,"^8",7,"^9",48,"^:",19,"^61",["^18",["^62",["^18",[["^63"],["^63","^64"],["^63","^64","^6M"]]]]],"^66",["^ ","^67",false,"^68",3,"^69",3,"^6:",[["^63"],["^63","^64"],["^63","^64","^6M"]],"^61",["^18",[["^63"],["^63","^64"],["^63","^64","^6M"]]],"^6;",["^18",[null,null,null]]]],"^N","^1P","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^:",19,"^66",["^ ","^67",false,"^68",3,"^69",3,"^6:",[["^63"],["^63","^64"],["^63","^64","^6M"]],"^61",["^18",[["^63"],["^63","^64"],["^63","^64","^6M"]]],"^6;",["^18",[null,null,null]]],"^6:",[["^63"],["^63","^64"],["^63","^64","^6M"]],"^6<",null,"^68",3,"^6;",["^18",[null,null,null]],"^8",1,"^67",false,"^6=",[["^ ","^68",1,"^67",false,"^6>","^6?"],["^ ","^68",2,"^67",false,"^6>",["^M",[null,"^6?"]]],["^ ","^68",3,"^67",false,"^6>",["^M",[null,"^6?"]]]],"^7",48,"^9",48,"^69",3,"^6A",true,"^61",["^18",[["^63"],["^63","^64"],["^63","^64","^6M"]]]],"~$execute",["^ ","^60",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",146,"^8",7,"^9",146,"^:",14,"^61",["^18",["^62",["^18",[["~$event-v","~$interceptors"]]]]],"^6E","Executes the given chain (coll) of interceptors.\n\n   Each interceptor has this form:\n       {:before  (fn [context] ...)     ;; returns possibly modified context\n        :after   (fn [context] ...)}    ;; `identity` would be a noop\n\n   Walks the queue of interceptors from beginning to end, calling the\n   `:before` fn on each, then reverse direction and walk backwards,\n   calling the `:after` fn on each.\n\n   The last interceptor in the chain presumably wraps an event\n   handler fn. So the overall goal of the process is to \"handle\n   the given event\".\n\n   Thread a `context` through all calls. `context` has this form:\n\n     {:coeffects {:event [:a-query-id :some-param]\n                  :db    <original contents of app-db>}\n      :effects   {:db    <new value for app-db>\n                  :dispatch  [:an-event-id :param1]}\n      :queue     <a collection of further interceptors>\n      :stack     <a collection of interceptors already walked>}\n\n   `context` has `:coeffects` and `:effects` which, if this was a web\n   server, would be somewhat analogous to `request` and `response`\n   respectively.\n\n   `coeffects` will contain data like `event` and the initial\n   state of `db` -  the inputs required by the event handler\n   (sitting presumably on the end of the chain), while handler-returned\n   side effects are put into `:effects` including, but not limited to,\n   new values for `db`.\n\n   The first few interceptors in a chain will likely have `:before`\n   functions which \"prime\" the `context` by adding the event, and\n   the current state of app-db into `:coeffects`. But interceptors can\n   add whatever they want to `:coeffects` - perhaps the event handler needs\n   some information from localstore, or a random number, or access to\n   a DataScript connection.\n\n   Equally, some interceptors in the chain will have `:after` fn\n   which can process the side effects accumulated into `:effects`\n   including but, not limited to, updates to app-db.\n\n   Through both stages (before and after), `context` contains a `:queue`\n   of interceptors yet to be processed, and a `:stack` of interceptors\n   already done.  In advanced cases, these values can be modified by the\n   functions through which the context is threaded."],"^N","^1[","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^:",14,"^6:",["^18",[["^6V","^6W"]]],"^6<",null,"^6;",["^18",[null,null]],"^8",1,"^67",false,"^7",146,"^6@","^6?","^9",146,"^69",2,"^6A",true,"^61",["^18",["^62",["^18",[["^6V","^6W"]]]]],"^6E","Executes the given chain (coll) of interceptors.\n\n   Each interceptor has this form:\n       {:before  (fn [context] ...)     ;; returns possibly modified context\n        :after   (fn [context] ...)}    ;; `identity` would be a noop\n\n   Walks the queue of interceptors from beginning to end, calling the\n   `:before` fn on each, then reverse direction and walk backwards,\n   calling the `:after` fn on each.\n\n   The last interceptor in the chain presumably wraps an event\n   handler fn. So the overall goal of the process is to \"handle\n   the given event\".\n\n   Thread a `context` through all calls. `context` has this form:\n\n     {:coeffects {:event [:a-query-id :some-param]\n                  :db    <original contents of app-db>}\n      :effects   {:db    <new value for app-db>\n                  :dispatch  [:an-event-id :param1]}\n      :queue     <a collection of further interceptors>\n      :stack     <a collection of interceptors already walked>}\n\n   `context` has `:coeffects` and `:effects` which, if this was a web\n   server, would be somewhat analogous to `request` and `response`\n   respectively.\n\n   `coeffects` will contain data like `event` and the initial\n   state of `db` -  the inputs required by the event handler\n   (sitting presumably on the end of the chain), while handler-returned\n   side effects are put into `:effects` including, but not limited to,\n   new values for `db`.\n\n   The first few interceptors in a chain will likely have `:before`\n   functions which \"prime\" the `context` by adding the event, and\n   the current state of app-db into `:coeffects`. But interceptors can\n   add whatever they want to `:coeffects` - perhaps the event handler needs\n   some information from localstore, or a random number, or access to\n   a DataScript connection.\n\n   Equally, some interceptors in the chain will have `:after` fn\n   which can process the side effects accumulated into `:effects`\n   including but, not limited to, updates to app-db.\n\n   Through both stages (before and after), `context` contains a `:queue`\n   of interceptors yet to be processed, and a `:stack` of interceptors\n   already done.  In advanced cases, these values can be modified by the\n   functions through which the context is threaded."],"~$assoc-effect",["^ ","^60",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",38,"^8",7,"^9",38,"^:",19,"^61",["^18",["^62",["^18",[["^63","^64","^6G"]]]]]],"^N","^1U","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^:",19,"^6:",["^18",[["^63","^64","^6G"]]],"^6<",null,"^6;",["^18",[null,null]],"^8",1,"^67",false,"^7",38,"^6@",["^M",["^6H","^6?"]],"^9",38,"^69",3,"^6A",true,"^61",["^18",["^62",["^18",[["^63","^64","^6G"]]]]]],"~$enqueue",["^ ","^60",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",111,"^8",7,"^9",111,"^:",14,"^61",["^18",["^62",["^18",[["^63","^6W"]]]]]],"^N","^2E","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^:",14,"^6:",["^18",[["^63","^6W"]]],"^6<",null,"^6;",["^18",[null,null]],"^8",1,"^67",false,"^7",111,"^6@",["^M",["^6H","^6?"]],"^9",111,"^69",2,"^6A",true,"^61",["^18",["^62",["^18",[["^63","^6W"]]]]]],"~$mandatory-interceptor-keys",["^ ","^N","^20","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",9,"^8",1,"^9",9,"^:",32,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",9,"^8",6,"^9",9,"^:",32],"^6>","~$cljs.core/ISet"],"~$interceptor?",["^ ","^60",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",11,"^8",7,"^9",11,"^:",19,"^61",["^18",["^62",["^18",[["~$m"]]]]]],"^N","^26","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^:",19,"^6:",["^18",[["~$m"]]],"^6<",null,"^6;",["^18",[null,null]],"^8",1,"^67",false,"^7",11,"^6@","~$boolean","^9",11,"^69",1,"^6A",true,"^61",["^18",["^62",["^18",[["~$m"]]]]]],"~$change-direction",["^ ","^60",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",132,"^8",8,"^9",132,"^:",24,"^6C",true,"^61",["^18",["^62",["^18",[["^63"]]]]],"^6E","Called on completion of `:before` processing, this function prepares/modifies\n   `context` for the backwards sweep of processing in which an interceptor\n   chain's `:after` fns are called.\n\n  At this point in processing, the `:queue` is empty and `:stack` holds all\n  the previously run interceptors. So this function enables the backwards walk\n  by priming `:queue` with what's currently in `:stack`"],"^6C",true,"^N","^1N","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^:",24,"^6:",["^18",[["^63"]]],"^6<",null,"^6;",["^18",[null,null]],"^8",1,"^67",false,"^7",132,"^6@",["^M",["^6H","^6?"]],"^9",132,"^69",1,"^6A",true,"^61",["^18",["^62",["^18",[["^63"]]]]],"^6E","Called on completion of `:before` processing, this function prepares/modifies\n   `context` for the backwards sweep of processing in which an interceptor\n   chain's `:after` fns are called.\n\n  At this point in processing, the `:queue` is empty and `:stack` holds all\n  the previously run interceptors. So this function enables the backwards walk\n  by priming `:queue` with what's currently in `:stack`"],"^63",["^ ","^60",null,"^5",["^ ","^6C",true,"^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^:",15,"^66",["^ ","^67",false,"^68",3,"^69",3,"^6:",[["~$event","^6W"],["^73","^6W","~$db"]],"^61",["^18",[["^73","^6W"],["^73","^6W","^74"]]],"^6;",["^18",[null,null]]],"^8",8,"^7",118,"^9",118,"^61",["^18",["^62",["^18",[["^73","^6W"],["^73","^6W","^74"]]]]],"^6E","Create a fresh context"],"^6C",true,"^N","^2B","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^:",15,"^66",["^ ","^67",false,"^68",3,"^69",3,"^6:",[["^73","^6W"],["^73","^6W","^74"]],"^61",["^18",[["^73","^6W"],["^73","^6W","^74"]]],"^6;",["^18",[null,null]]],"^6:",[["^73","^6W"],["^73","^6W","^74"]],"^6<",null,"^68",3,"^6;",["^18",[null,null]],"^8",1,"^67",false,"^6=",[["^ ","^68",2,"^67",false,"^6>",["^M",["^6H","^6?"]]],["^ ","^68",3,"^67",false,"^6>",["^M",["^6H","^6?"]]]],"^7",118,"^9",118,"^69",3,"^6A",true,"^61",["^18",[["^73","^6W"],["^73","^6W","^74"]]],"^6E","Create a fresh context"]],"^16",["^ ","^V","^V","^W","^V","^Z","^Z"],"~:cljs.analyzer/constants",["^ ","^10",["^M",["~:unnamed","~:tags","~:original-event","~:db","~:queue","~:event","~:after","~:id","~:effects","~:stack","~:error","~:coeffects","~:interceptors","~:before"]],"~:order",["^7<","^7=","^7C","^7@","^76","^7>","^7A","^7:","^7?","^7;","^78","^79","^77","^7B"]],"^1=",["^ ","^11",["^M",[]]],"^1>",["^ "],"^1?",["^[","^Z","^T","^U","^V","^X"]],"^Q","^O","~:ns-specs",["^ "],"~:ns-spec-vars",["^M",[]],"~:compiler-options",["^2P",[["^7G","~:static-fns"],true,["^7G","~:shadow-tweaks"],null,["^7G","~:source-map-inline"],null,["^7G","~:elide-asserts"],false,["^7G","~:optimize-constants"],null,["^7G","^1D"],null,["^7G","~:external-config"],null,["^7G","~:tooling-config"],null,["^7G","~:emit-constants"],null,["^7G","~:load-tests"],null,["^7G","~:form-size-threshold"],null,["^7G","~:data-readers"],null,["^7G","~:infer-externs"],"~:auto",["^7G","^1F"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^7G","~:fn-invoke-direct"],null,["^7G","~:source-map"],"/dev/null"]]]