["^ ","~:output",["^ ","~:js","goog.provide('rewrite_clj.node.quote');\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {rewrite_clj.node.protocols.InnerNode}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {rewrite_clj.node.protocols.Node}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\nrewrite_clj.node.quote.QuoteNode = (function (tag,prefix,sym,children,__meta,__extmap,__hash){\nthis.tag = tag;\nthis.prefix = prefix;\nthis.sym = sym;\nthis.children = children;\nthis.__meta = __meta;\nthis.__extmap = __extmap;\nthis.__hash = __hash;\nthis.cljs$lang$protocol_mask$partition0$ = 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\n});\n(rewrite_clj.node.quote.QuoteNode.prototype.toString = (function (){\nvar self__ = this;\nvar this$ = this;\nreturn this$.rewrite_clj$node$protocols$Node$string$arity$1(null);\n}));\n\n(rewrite_clj.node.quote.QuoteNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__4461__auto__,k__4462__auto__){\nvar self__ = this;\nvar this__4461__auto____$1 = this;\nreturn this__4461__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4462__auto__,null);\n}));\n\n(rewrite_clj.node.quote.QuoteNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__4463__auto__,k43528,else__4464__auto__){\nvar self__ = this;\nvar this__4463__auto____$1 = this;\nvar G__43537 = k43528;\nvar G__43537__$1 = (((G__43537 instanceof cljs.core.Keyword))?G__43537.fqn:null);\nswitch (G__43537__$1) {\ncase \"tag\":\nreturn self__.tag;\n\nbreak;\ncase \"prefix\":\nreturn self__.prefix;\n\nbreak;\ncase \"sym\":\nreturn self__.sym;\n\nbreak;\ncase \"children\":\nreturn self__.children;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k43528,else__4464__auto__);\n\n}\n}));\n\n(rewrite_clj.node.quote.QuoteNode.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (this__4481__auto__,f__4482__auto__,init__4483__auto__){\nvar self__ = this;\nvar this__4481__auto____$1 = this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__4484__auto__,p__43538){\nvar vec__43539 = p__43538;\nvar k__4485__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43539,(0),null);\nvar v__4486__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43539,(1),null);\nreturn (f__4482__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4482__auto__.cljs$core$IFn$_invoke$arity$3(ret__4484__auto__,k__4485__auto__,v__4486__auto__) : f__4482__auto__.call(null,ret__4484__auto__,k__4485__auto__,v__4486__auto__));\n}),init__4483__auto__,this__4481__auto____$1);\n}));\n\n(rewrite_clj.node.quote.QuoteNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__4476__auto__,writer__4477__auto__,opts__4478__auto__){\nvar self__ = this;\nvar this__4476__auto____$1 = this;\nvar pr_pair__4479__auto__ = (function (keyval__4480__auto__){\nreturn cljs.core.pr_sequential_writer(writer__4477__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__4478__auto__,keyval__4480__auto__);\n});\nreturn cljs.core.pr_sequential_writer(writer__4477__auto__,pr_pair__4479__auto__,\"#rewrite-clj.node.quote.QuoteNode{\",\", \",\"}\",opts__4478__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),self__.tag],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),self__.prefix],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),self__.sym],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"children\",\"children\",-940561982),self__.children],null))], null),self__.__extmap));\n}));\n\n(rewrite_clj.node.quote.QuoteNode.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__43527){\nvar self__ = this;\nvar G__43527__$1 = this;\nreturn (new cljs.core.RecordIter((0),G__43527__$1,4,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),new cljs.core.Keyword(null,\"children\",\"children\",-940561982)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n}));\n\n(rewrite_clj.node.quote.QuoteNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__4459__auto__){\nvar self__ = this;\nvar this__4459__auto____$1 = this;\nreturn self__.__meta;\n}));\n\n(rewrite_clj.node.quote.QuoteNode.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__4456__auto__){\nvar self__ = this;\nvar this__4456__auto____$1 = this;\nreturn (new rewrite_clj.node.quote.QuoteNode(self__.tag,self__.prefix,self__.sym,self__.children,self__.__meta,self__.__extmap,self__.__hash));\n}));\n\n(rewrite_clj.node.quote.QuoteNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__4465__auto__){\nvar self__ = this;\nvar this__4465__auto____$1 = this;\nreturn (4 + cljs.core.count(self__.__extmap));\n}));\n\n(rewrite_clj.node.quote.QuoteNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__4457__auto__){\nvar self__ = this;\nvar this__4457__auto____$1 = this;\nvar h__4319__auto__ = self__.__hash;\nif((!((h__4319__auto__ == null)))){\nreturn h__4319__auto__;\n} else {\nvar h__4319__auto____$1 = (function (coll__4458__auto__){\nreturn (1712251858 ^ cljs.core.hash_unordered_coll(coll__4458__auto__));\n})(this__4457__auto____$1);\n(self__.__hash = h__4319__auto____$1);\n\nreturn h__4319__auto____$1;\n}\n}));\n\n(rewrite_clj.node.quote.QuoteNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this43529,other43530){\nvar self__ = this;\nvar this43529__$1 = this;\nreturn (((!((other43530 == null)))) && ((((this43529__$1.constructor === other43530.constructor)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43529__$1.tag,other43530.tag)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43529__$1.prefix,other43530.prefix)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43529__$1.sym,other43530.sym)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43529__$1.children,other43530.children)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this43529__$1.__extmap,other43530.__extmap)))))))))))));\n}));\n\n(rewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$Node$ = cljs.core.PROTOCOL_SENTINEL);\n\n(rewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$Node$tag$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn self__.tag;\n}));\n\n(rewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$Node$printable_only_QMARK_$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn false;\n}));\n\n(rewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$Node$sexpr$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn (new cljs.core.List(null,self__.sym,(new cljs.core.List(null,cljs.core.first(rewrite_clj.node.protocols.sexprs(self__.children)),null,(1),null)),(2),null));\n}));\n\n(rewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$Node$length$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn (cljs.core.count(self__.prefix) + rewrite_clj.node.protocols.sum_lengths(self__.children));\n}));\n\n(rewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$Node$string$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.prefix),cljs.core.str.cljs$core$IFn$_invoke$arity$1(rewrite_clj.node.protocols.concat_strings(self__.children))].join('');\n}));\n\n(rewrite_clj.node.quote.QuoteNode.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__4471__auto__,k__4472__auto__){\nvar self__ = this;\nvar this__4471__auto____$1 = this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"children\",\"children\",-940561982),null,new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),null,new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),null,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),null], null), null),k__4472__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4471__auto____$1),self__.__meta),k__4472__auto__);\n} else {\nreturn (new rewrite_clj.node.quote.QuoteNode(self__.tag,self__.prefix,self__.sym,self__.children,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4472__auto__)),null));\n}\n}));\n\n(rewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$InnerNode$ = cljs.core.PROTOCOL_SENTINEL);\n\n(rewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$InnerNode$inner_QMARK_$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn true;\n}));\n\n(rewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$InnerNode$children$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn self__.children;\n}));\n\n(rewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$InnerNode$replace_children$arity$2 = (function (this$,children_SINGLEQUOTE_){\nvar self__ = this;\nvar this$__$1 = this;\nrewrite_clj.node.protocols.assert_single_sexpr(children_SINGLEQUOTE_);\n\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(this$__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),children_SINGLEQUOTE_);\n}));\n\n(rewrite_clj.node.quote.QuoteNode.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (this__4468__auto__,k43528){\nvar self__ = this;\nvar this__4468__auto____$1 = this;\nvar G__43562 = k43528;\nvar G__43562__$1 = (((G__43562 instanceof cljs.core.Keyword))?G__43562.fqn:null);\nswitch (G__43562__$1) {\ncase \"tag\":\ncase \"prefix\":\ncase \"sym\":\ncase \"children\":\nreturn true;\n\nbreak;\ndefault:\nreturn cljs.core.contains_QMARK_(self__.__extmap,k43528);\n\n}\n}));\n\n(rewrite_clj.node.quote.QuoteNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__4469__auto__,k__4470__auto__,G__43527){\nvar self__ = this;\nvar this__4469__auto____$1 = this;\nvar pred__43563 = cljs.core.keyword_identical_QMARK_;\nvar expr__43564 = k__4470__auto__;\nif(cljs.core.truth_((pred__43563.cljs$core$IFn$_invoke$arity$2 ? pred__43563.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),expr__43564) : pred__43563.call(null,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),expr__43564)))){\nreturn (new rewrite_clj.node.quote.QuoteNode(G__43527,self__.prefix,self__.sym,self__.children,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__43563.cljs$core$IFn$_invoke$arity$2 ? pred__43563.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),expr__43564) : pred__43563.call(null,new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),expr__43564)))){\nreturn (new rewrite_clj.node.quote.QuoteNode(self__.tag,G__43527,self__.sym,self__.children,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__43563.cljs$core$IFn$_invoke$arity$2 ? pred__43563.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),expr__43564) : pred__43563.call(null,new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),expr__43564)))){\nreturn (new rewrite_clj.node.quote.QuoteNode(self__.tag,self__.prefix,G__43527,self__.children,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__43563.cljs$core$IFn$_invoke$arity$2 ? pred__43563.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"children\",\"children\",-940561982),expr__43564) : pred__43563.call(null,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),expr__43564)))){\nreturn (new rewrite_clj.node.quote.QuoteNode(self__.tag,self__.prefix,self__.sym,G__43527,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new rewrite_clj.node.quote.QuoteNode(self__.tag,self__.prefix,self__.sym,self__.children,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4470__auto__,G__43527),null));\n}\n}\n}\n}\n}));\n\n(rewrite_clj.node.quote.QuoteNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__4474__auto__){\nvar self__ = this;\nvar this__4474__auto____$1 = this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),self__.tag,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),self__.prefix,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),self__.sym,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"children\",\"children\",-940561982),self__.children,null))], null),self__.__extmap));\n}));\n\n(rewrite_clj.node.quote.QuoteNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__4460__auto__,G__43527){\nvar self__ = this;\nvar this__4460__auto____$1 = this;\nreturn (new rewrite_clj.node.quote.QuoteNode(self__.tag,self__.prefix,self__.sym,self__.children,G__43527,self__.__extmap,self__.__hash));\n}));\n\n(rewrite_clj.node.quote.QuoteNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__4466__auto__,entry__4467__auto__){\nvar self__ = this;\nvar this__4466__auto____$1 = this;\nif(cljs.core.vector_QMARK_(entry__4467__auto__)){\nreturn this__4466__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__4467__auto__,(0)),cljs.core._nth(entry__4467__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4466__auto____$1,entry__4467__auto__);\n}\n}));\n\n(rewrite_clj.node.quote.QuoteNode.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"tag\",\"tag\",350170304,null),new cljs.core.Symbol(null,\"prefix\",\"prefix\",1374623062,null),new cljs.core.Symbol(null,\"sym\",\"sym\",195671222,null),new cljs.core.Symbol(null,\"children\",\"children\",699969545,null)], null);\n}));\n\n(rewrite_clj.node.quote.QuoteNode.cljs$lang$type = true);\n\n(rewrite_clj.node.quote.QuoteNode.cljs$lang$ctorPrSeq = (function (this__4505__auto__){\nreturn (new cljs.core.List(null,\"rewrite-clj.node.quote/QuoteNode\",null,(1),null));\n}));\n\n(rewrite_clj.node.quote.QuoteNode.cljs$lang$ctorPrWriter = (function (this__4505__auto__,writer__4506__auto__){\nreturn cljs.core._write(writer__4506__auto__,\"rewrite-clj.node.quote/QuoteNode\");\n}));\n\n/**\n * Positional factory function for rewrite-clj.node.quote/QuoteNode.\n */\nrewrite_clj.node.quote.__GT_QuoteNode = (function rewrite_clj$node$quote$__GT_QuoteNode(tag,prefix,sym,children){\nreturn (new rewrite_clj.node.quote.QuoteNode(tag,prefix,sym,children,null,null,null));\n});\n\n/**\n * Factory function for rewrite-clj.node.quote/QuoteNode, taking a map of keywords to field values.\n */\nrewrite_clj.node.quote.map__GT_QuoteNode = (function rewrite_clj$node$quote$map__GT_QuoteNode(G__43533){\nvar extmap__4501__auto__ = (function (){var G__43571 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__43533,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),new cljs.core.Keyword(null,\"children\",\"children\",-940561982)], 0));\nif(cljs.core.record_QMARK_(G__43533)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__43571);\n} else {\nreturn G__43571;\n}\n})();\nreturn (new rewrite_clj.node.quote.QuoteNode(new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(G__43533),new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465).cljs$core$IFn$_invoke$arity$1(G__43533),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(G__43533),new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(G__43533),null,cljs.core.not_empty(extmap__4501__auto__),null));\n});\n\nrewrite_clj.node.quote.__GT_node = (function rewrite_clj$node$quote$__GT_node(t,prefix,sym,children){\nrewrite_clj.node.protocols.assert_single_sexpr(children);\n\nreturn rewrite_clj.node.quote.__GT_QuoteNode(t,prefix,sym,children);\n});\n/**\n * Create node representing a quoted form.\n * Takes either a seq of nodes or a single one.\n */\nrewrite_clj.node.quote.quote_node = (function rewrite_clj$node$quote$quote_node(children){\nwhile(true){\nif(cljs.core.sequential_QMARK_(children)){\nreturn rewrite_clj.node.quote.__GT_node(new cljs.core.Keyword(null,\"quote\",\"quote\",-262615245),\"'\",new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),children);\n} else {\nvar G__43582 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [children], null);\nchildren = G__43582;\ncontinue;\n}\nbreak;\n}\n});\n/**\n * Create node representing a syntax-quoted form.\n * Takes either a seq of nodes or a single one.\n */\nrewrite_clj.node.quote.syntax_quote_node = (function rewrite_clj$node$quote$syntax_quote_node(children){\nwhile(true){\nif(cljs.core.sequential_QMARK_(children)){\nreturn rewrite_clj.node.quote.__GT_node(new cljs.core.Keyword(null,\"syntax-quote\",\"syntax-quote\",-1233164847),\"`\",new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),children);\n} else {\nvar G__43603 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [children], null);\nchildren = G__43603;\ncontinue;\n}\nbreak;\n}\n});\n/**\n * Create node representing an unquoted form. (`~...`)\n * Takes either a seq of nodes or a single one.\n */\nrewrite_clj.node.quote.unquote_node = (function rewrite_clj$node$quote$unquote_node(children){\nwhile(true){\nif(cljs.core.sequential_QMARK_(children)){\nreturn rewrite_clj.node.quote.__GT_node(new cljs.core.Keyword(null,\"unquote\",\"unquote\",1649741032),\"~\",new cljs.core.Symbol(null,\"unquote\",\"unquote\",-1004694737,null),children);\n} else {\nvar G__43604 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [children], null);\nchildren = G__43604;\ncontinue;\n}\nbreak;\n}\n});\n/**\n * Create node representing an unquote-spliced form. (`~@...`)\n * Takes either a seq of nodes or a single one.\n */\nrewrite_clj.node.quote.unquote_splicing_node = (function rewrite_clj$node$quote$unquote_splicing_node(children){\nwhile(true){\nif(cljs.core.sequential_QMARK_(children)){\nreturn rewrite_clj.node.quote.__GT_node(new cljs.core.Keyword(null,\"unquote-splicing\",\"unquote-splicing\",1295267556),\"~@\",new cljs.core.Symbol(null,\"unquote-splicing\",\"unquote-splicing\",-1359168213,null),children);\n} else {\nvar G__43605 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [children], null);\nchildren = G__43605;\ncontinue;\n}\nbreak;\n}\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","rewrite_clj/node/quote.cljs","~:line",1,"~:column",14,"~:end-line",1,"~:end-column",36,"~:no-doc",true],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index","~$highlight.js","~$module$node_modules$highlight_DOT_js$lib$index","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.repl","~$cljs.repl"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$rewrite-clj.node.quote","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$rewrite-clj.node.protocols","^T","~$node","^T","~$cljs.core","^V","~$goog","^W"],"~:seen",["^M",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^V","^V"],"~:form",["~#list",["~$ns","^O",["^11",["^Y",["^T","~:as","^U"]]]]],"~:flags",["^ ","^Y",["^M",[]]],"~:js-deps",["^ "],"~:deps",["^W","^V","^T"]],"^Q","^O","~:resource-id",["~:shadow.build.classpath/resource","rewrite_clj/node/quote.cljs"],"~:compiled-at",1638904284586,"~:resource-name","rewrite_clj/node/quote.cljs","~:warnings",[],"~:source","(ns ^:no-doc rewrite-clj.node.quote\n  (:require [rewrite-clj.node.protocols :as node]))\n\n;; ## Node\n\n(defrecord QuoteNode [tag prefix sym children]\n  node/Node\n  (tag [_] tag)\n  (printable-only? [_] false)\n  (sexpr [_]\n    (list sym (first (node/sexprs children))))\n  (length [_]\n    (+ (count prefix) (node/sum-lengths children)))\n  (string [_]\n    (str prefix (node/concat-strings children)))\n\n  node/InnerNode\n  (inner? [_] true)\n  (children [_] children)\n  (replace-children [this children']\n    (node/assert-single-sexpr children')\n    (assoc this :children children'))\n\n  Object\n  (toString [this]\n    (node/string this)))\n\n;(node/make-printable! QuoteNode)\n\n;; ## Constructors\n\n(defn- ->node\n  [t prefix sym children]\n  (node/assert-single-sexpr children)\n  (->QuoteNode t prefix sym children))\n\n(defn quote-node\n  \"Create node representing a quoted form.\n   Takes either a seq of nodes or a single one.\"\n  [children]\n  (if (sequential? children)\n    (->node\n      :quote \"'\" 'quote\n      children)\n    (recur [children])))\n\n(defn syntax-quote-node\n  \"Create node representing a syntax-quoted form.\n   Takes either a seq of nodes or a single one.\"\n  [children]\n  (if (sequential? children)\n    (->node\n      :syntax-quote \"`\" 'quote\n      children)\n    (recur [children])))\n\n(defn unquote-node\n  \"Create node representing an unquoted form. (`~...`)\n   Takes either a seq of nodes or a single one.\"\n  [children]\n  (if (sequential? children)\n    (->node\n      :unquote \"~\" 'unquote\n      children)\n    (recur [children])))\n\n(defn unquote-splicing-node\n  \"Create node representing an unquote-spliced form. (`~@...`)\n   Takes either a seq of nodes or a single one.\"\n  [children]\n  (if (sequential? children)\n    (->node\n      :unquote-splicing \"~@\" 'unquote-splicing\n      children)\n    (recur [children])))\n","~:reader-features",["^M",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["this__4461__auto__","k__4462__auto__","this__4463__auto__","k43528","else__4464__auto__","G__43537","cljs.core/Keyword","tag","prefix","sym","children","cljs.core.get","__extmap","this__4481__auto__","f__4482__auto__","init__4483__auto__","cljs.core.reduce","ret__4484__auto__","p__43538","vec__43539","k__4485__auto__","cljs.core.nth","v__4486__auto__","this__4476__auto__","writer__4477__auto__","opts__4478__auto__","pr-pair__4479__auto__","keyval__4480__auto__","cljs.core/pr-sequential-writer","cljs.core.concat","cljs.core/PersistentVector","G__43527","cljs.core/RecordIter","cljs.core/-iterator","cljs.core/nil-iter","this__4459__auto__","__meta","this__4456__auto__","__hash","this__4465__auto__","cljs.core/count","this__4457__auto__","h__4319__auto__","coll__4458__auto__","cljs.core/hash-unordered-coll","this43529","other43530","cljs.core._EQ_","cljs.core/PROTOCOL_SENTINEL","this__4471__auto__","k__4472__auto__","cljs.core/contains?","cljs.core.dissoc","cljs.core/-with-meta","cljs.core.into","cljs.core/not-empty","this__4468__auto__","G__43562","this__4469__auto__","k__4470__auto__","pred__43563","cljs.core/keyword-identical?","expr__43564","cljs.core.assoc","this__4474__auto__","cljs.core/seq","cljs.core/MapEntry","this__4460__auto__","this__4466__auto__","entry__4467__auto__","cljs.core/vector?","cljs.core/-nth","cljs.core/-conj","rewrite-clj.node.quote/QuoteNode","this__4505__auto__","cljs.core/List","writer__4506__auto__","cljs.core/-write","G__43533","extmap__4501__auto__","G__43571","cljs.core/record?","rewrite-clj.node.quote/->QuoteNode","rewrite-clj.node.quote/map->QuoteNode","_","cljs.core/first","rewrite-clj.node.protocols/sexprs","rewrite-clj.node.protocols/sum-lengths","rewrite-clj.node.protocols/concat-strings","this","children'","rewrite-clj.node.protocols/assert-single-sexpr","rewrite-clj.node.quote/->node","t","rewrite-clj.node.quote/quote-node","cljs.core/sequential?","rewrite-clj.node.quote/syntax-quote-node","rewrite-clj.node.quote/unquote-node","rewrite-clj.node.quote/unquote-splicing-node"]],"~:used-vars",["^M",["~$cljs.core/PROTOCOL_SENTINEL","~$rewrite-clj.node.quote/->node","~$cljs.core/sequential?","~$cljs.core/pr-sequential-writer","~$cljs.core/vector?","~$cljs.core/=","~$cljs.core/-assoc","~$cljs.core/-write","~$cljs.core/-iterator","~$cljs.core/count","~$cljs.core/reduce","~$cljs.core/seq","~$cljs.core/Keyword","~$rewrite-clj.node.protocols/concat-strings","~$cljs.core/MapEntry","~$cljs.core/dissoc","~$cljs.core/keyword-identical?","~$cljs.core/-with-meta","~$cljs.core/concat","~$rewrite-clj.node.protocols/sexprs","~$cljs.core/contains?","~$cljs.core/into","~$cljs.core/-conj","~$cljs.core/PersistentVector","~$cljs.core/List","~$rewrite-clj.node.quote/->QuoteNode","~$cljs.core/get","~$rewrite-clj.node.quote/syntax-quote-node","~$cljs.core/-nth","~$cljs.core/not-empty","~$cljs.core/record?","~$cljs.core/-lookup","~$cljs.core/nth","~$cljs.core/nil-iter","~$rewrite-clj.node.protocols/assert-single-sexpr","~$cljs.core/RecordIter","~$rewrite-clj.node.protocols/string","~$cljs.core/not","~$cljs.core/assoc","~$rewrite-clj.node.quote/unquote-splicing-node","~$rewrite-clj.node.protocols/sum-lengths","~$cljs.core/hash-unordered-coll","~$cljs.core/first","~$rewrite-clj.node.quote/QuoteNode","~$rewrite-clj.node.quote/map->QuoteNode","~$rewrite-clj.node.quote/unquote-node","~$rewrite-clj.node.quote/quote-node"]]],"~:cache-keys",["~#cmap",[["^18","goog/dom/tagname.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^M",[]],"~:deps-syms",["^W","~$goog.dom.HtmlElement"]]],["^18","goog/math/math.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2I",["^ ","^2J",null,"^2K",["^M",[]],"^2L",["^W","~$goog.array","~$goog.asserts"]]],["^18","goog/html/trustedtypes.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2I",["^ ","^2J",null,"^2K",["^M",[]],"^2L",["^W"]]],["^18","goog/labs/useragent/browser.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2I",["^ ","^2J",null,"^2K",["^M",[]],"^2L",["^W","^2N","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^18","goog/html/safeurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2I",["^ ","^2J",null,"^2K",["^M",[]],"^2L",["^W","^2O","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2R"]]],["^18","goog/array/array.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2I",["^ ","^2J",null,"^2K",["^M",[]],"^2L",["^W","^2O"]]],["^18","goog/debug/error.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2I",["^ ","^2J",null,"^2K",["^M",[]],"^2L",["^W"]]],["^18","goog/dom/nodetype.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2I",["^ ","^2J",null,"^2K",["^M",[]],"^2L",["^W"]]],["^18","goog/string/typedstring.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2I",["^ ","^2J",null,"^2K",["^M",[]],"^2L",["^W"]]],["^18","goog/object/object.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2I",["^ ","^2J",null,"^2K",["^M",[]],"^2L",["^W"]]],["^18","goog/dom/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2I",["^ ","^2J",null,"^2K",["^M",[]],"^2L",["^W","^2O"]]],"~:SHADOW-TIMESTAMP",[1628015068000,1628015068000,1628015038000],["^18","goog/math/long.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2I",["^ ","^2J",null,"^2K",["^M",[]],"^2L",["^W","^2O","~$goog.reflect"]]],["^18","goog/html/trustedresourceurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2I",["^ ","^2J",null,"^2K",["^M",[]],"^2L",["^W","^2O","~$goog.fs.blob","^2S","~$goog.html.SafeScript","~$goog.html.trustedtypes","^2U","^2V","^2W","^2X"]]],["^18","goog/string/internal.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2I",["^ ","^2J",null,"^2K",["^M",[]],"^2L",["^W"]]],["^18","goog/functions/functions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2I",["^ ","^2J",null,"^2K",["^M",[]],"^2L",["^W"]]],["^18","goog/html/safestyle.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2I",["^ ","^2J",null,"^2K",["^M",[]],"^2L",["^W","^2N","^2O","~$goog.html.SafeUrl","^2W","^2X","^2R"]]],["^18","goog/dom/safe.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2I",["^ ","^2J",null,"^2K",["^M",[]],"^2L",["^W","^2O","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^30","~$goog.html.SafeStyle","^32","^2T","~$goog.html.uncheckedconversions","^2W","^2R"]]],["^18","goog/structs/map.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2I",["^ ","^2J",null,"^2K",["^M",[]],"^2L",["^W","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^18","goog/html/safehtml.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2I",["^ ","^2J",null,"^2K",["^M",[]],"^2L",["^W","^2N","^2O","~$goog.dom.TagName","~$goog.dom.tags","^30","^36","~$goog.html.SafeStyleSheet","^32","^2T","^31","^2U","^2V","~$goog.labs.userAgent.browser","^2Q","^2W","^2X","^2R"]]],["^18","goog/dom/tags.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2I",["^ ","^2J",null,"^2K",["^M",[]],"^2L",["^W","^2Q"]]],["^18","goog/fs/blob.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2I",["^ ","^2J",null,"^2K",["^M",[]],"^2L",["^W","^2N"]]],["^18","goog/asserts/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2I",["^ ","^2J",null,"^2K",["^M",[]],"^2L",["^W","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^18","goog/uri/uri.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2I",["^ ","^2J",null,"^2K",["^M",[]],"^2L",["^W","^2N","^2O","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^18","goog/i18n/bidi.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2I",["^ ","^2J",null,"^2K",["^M",[]],"^2L",["^W"]]],["^18","rewrite_clj/node/protocols.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^2I",["^ ","^2J",null,"^2K",["^M",[]],"^2L",["^W","^V","~$clojure.string"]]],["^18","goog/fs/url.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2I",["^ ","^2J",null,"^2K",["^M",[]],"^2L",["^W"]]],["^18","goog/base.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2I",["^ ","^2J",null,"^2K",["^M",[]],"^2L",[]]],["^18","goog/structs/structs.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2I",["^ ","^2J",null,"^2K",["^M",[]],"^2L",["^W","^2N","^2Q"]]],["^18","clojure/string.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^2I",["^ ","^2J",null,"^2K",["^M",[]],"^2L",["^W","^V","^3@","~$goog.string.StringBuffer"]]],["^18","goog/string/string.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2I",["^ ","^2J",null,"^2K",["^M",[]],"^2L",["^W","~$goog.dom.safe","^37","^2W","^2R"]]],["^18","goog/reflect/reflect.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2I",["^ ","^2J",null,"^2K",["^M",[]],"^2L",["^W"]]],["^18","goog/labs/useragent/util.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2I",["^ ","^2J",null,"^2K",["^M",[]],"^2L",["^W","^2R"]]],["^18","goog/string/stringbuffer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2I",["^ ","^2J",null,"^2K",["^M",[]],"^2L",["^W"]]],["^18","goog/iter/iter.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2I",["^ ","^2J",null,"^2K",["^M",[]],"^2L",["^W","^2N","^2O","^34","~$goog.math"]]],["^18","goog/html/uncheckedconversions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2I",["^ ","^2J",null,"^2K",["^M",[]],"^2L",["^W","^2O","^35","^30","^36","^3<","^32","^2T","^2W","^2R","^2U"]]],["^18","rewrite_clj/node/quote.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^2I",["^ ","^2J",null,"^2K",["^M",[]],"^2L",["^W","^V","^T"]]],["^18","goog/dom/htmlelement.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2I",["^ ","^2J",null,"^2K",["^M",[]],"^2L",["^W"]]],["^18","cljs/core.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^2I",["^ ","^2J",null,"^2K",["^M",[]],"^2L",["^W","~$goog.math.Long","~$goog.math.Integer","^3@","^2Q","^2N","~$goog.Uri","^3G"]]],["^18","goog/html/safescript.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2I",["^ ","^2J",null,"^2K",["^M",[]],"^2L",["^W","^2W","^2X","^31","^2O"]]],["^18","goog/html/safestylesheet.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2I",["^ ","^2J",null,"^2K",["^M",[]],"^2L",["^W","^2W","^36","^2X","^2N","^2Q","^2O","^2R"]]],["^18","goog/math/integer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2I",["^ ","^2J",null,"^2K",["^M",[]],"^2L",["^W","^2Z"]]],["^18","goog/uri/utils.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2I",["^ ","^2J",null,"^2K",["^M",[]],"^2L",["^W","^2O","^3@"]]],["^18","goog/string/const.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2I",["^ ","^2J",null,"^2K",["^M",[]],"^2L",["^W","^2O","^2X"]]]]],"~:clj-info",["^ ","jar:file:/Users/hagenek/.m2/repository/binaryage/devtools/1.0.3/devtools-1.0.3.jar!/devtools/defaults.clj",1638904136000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1628015039000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1628015039000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/passes.cljc",1628015038000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/data.json/2.4.0/data.json-2.4.0.jar!/clojure/data/json.clj",1628015036000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/instant.clj",1628015038000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1628015039000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/externs.clj",1628015038000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map/base64.clj",1628015038000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1628015039000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader.clj",1628015036000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map.clj",1628015038000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1628015039000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/util.cljc",1628015038000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/js_deps.cljc",1628015038000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map/base64_vlq.clj",1628015038000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/default_data_readers.clj",1628015036000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/core.cljc",1628015038000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/reader_types.clj",1628015036000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/tagged_literals.cljc",1628015038000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/errors.clj",1628015036000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/impl.cljc",1628015038000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/inspect.clj",1628015036000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/env.cljc",1628015038000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer.cljc",1628015038000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1628015039000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/compiler.cljc",1628015038000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1628015039000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/passes/and_or.cljc",1628015038000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","rewrite_clj/node/quote.cljs","^7",1,"^8",14,"^9",1,"^:",36,"^;",true],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I","^J"],"^K",null,"^L",["^M",[]],"^N","^O","^R",null,"^S",["^ ","^T","^T","^U","^T","^V","^V","^W","^W"],"^X",["^M",["^Y"]],"^Z",null,"~:defs",["^ ","~$QuoteNode",["^ ","~:num-fields",4,"~:protocols",["^M",["~$cljs.core/IRecord","~$cljs.core/IKVReduce","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$cljs.core/Object","~$cljs.core/ICounted","~$rewrite-clj.node.protocols/InnerNode","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$rewrite-clj.node.protocols/Node","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","~$cljs.core/IMap","~$cljs.core/ILookup"]],"^N","^2C","^6","rewrite_clj/node/quote.cljs","^:",21,"~:type",true,"^8",12,"~:internal-ctor",true,"^7",6,"~:record",true,"^9",6,"~:tag","~$function","~:skip-protocol-flag",["^M",["^4D","^4E","^4F","^4G","^4H","^4J","^4L","^4M","^4N","^4O","^4P","^4R","^4S","^4T","^4U"]]],"~$->QuoteNode",["^ ","~:protocol-inline",null,"^5",["^ ","^6","rewrite_clj/node/quote.cljs","^:",21,"^8",12,"^4W",true,"~:factory","~:positional","^7",6,"^9",6,"~:arglists",["^11",["~$quote",["^11",[["~$tag","~$prefix","~$sym","~$children"]]]]],"~:doc","Positional factory function for rewrite-clj.node.quote/QuoteNode."],"^N","^21","^6","rewrite_clj/node/quote.cljs","^:",21,"~:method-params",["^11",[["^56","^57","^58","^59"]]],"~:protocol-impl",null,"~:arglists-meta",["^11",[null,null]],"^8",1,"^4W",true,"~:variadic?",false,"^52","^53","^7",6,"~:ret-tag","^2C","^9",6,"~:max-fixed-arity",4,"~:fn-var",true,"^54",["^11",["^55",["^11",[["^56","^57","^58","^59"]]]]],"^5:","Positional factory function for rewrite-clj.node.quote/QuoteNode."],"~$map->QuoteNode",["^ ","^51",null,"^5",["^ ","^6","rewrite_clj/node/quote.cljs","^:",21,"^8",12,"^4W",true,"^52","~:map","^7",6,"^9",6,"^54",["^11",["^55",["^11",[["~$G__43533"]]]]],"^5:","Factory function for rewrite-clj.node.quote/QuoteNode, taking a map of keywords to field values."],"^N","^2D","^6","rewrite_clj/node/quote.cljs","^:",21,"^5;",["^11",[["^5D"]]],"^5<",null,"^5=",["^11",[null,null]],"^8",1,"^4W",true,"^5>",false,"^52","^5C","^7",6,"^5?","^2C","^9",6,"^5@",1,"^5A",true,"^54",["^11",["^55",["^11",[["^5D"]]]]],"^5:","Factory function for rewrite-clj.node.quote/QuoteNode, taking a map of keywords to field values."],"~$->node",["^ ","^51",null,"^5",["^ ","^6","rewrite_clj/node/quote.cljs","^7",32,"^8",8,"^9",32,"^:",14,"~:private",true,"^54",["^11",["^55",["^11",[["~$t","^57","^58","^59"]]]]]],"^5F",true,"^N","^1E","^6","rewrite_clj/node/quote.cljs","^:",14,"^5;",["^11",[["~$t","^57","^58","^59"]]],"^5<",null,"^5=",["^11",[null,null]],"^8",1,"^5>",false,"^7",32,"^5?","^2C","^9",32,"^5@",4,"^5A",true,"^54",["^11",["^55",["^11",[["~$t","^57","^58","^59"]]]]]],"~$quote-node",["^ ","^51",null,"^5",["^ ","^6","rewrite_clj/node/quote.cljs","^7",37,"^8",7,"^9",37,"^:",17,"^54",["^11",["^55",["^11",[["^59"]]]]],"^5:","Create node representing a quoted form.\n   Takes either a seq of nodes or a single one."],"^N","^2F","^6","rewrite_clj/node/quote.cljs","^:",17,"^5;",["^11",[["^59"]]],"^5<",null,"^5=",["^11",[null,null]],"^8",1,"^5>",false,"^7",37,"^5?","^2C","^9",37,"^5@",1,"^5A",true,"^54",["^11",["^55",["^11",[["^59"]]]]],"^5:","Create node representing a quoted form.\n   Takes either a seq of nodes or a single one."],"~$syntax-quote-node",["^ ","^51",null,"^5",["^ ","^6","rewrite_clj/node/quote.cljs","^7",47,"^8",7,"^9",47,"^:",24,"^54",["^11",["^55",["^11",[["^59"]]]]],"^5:","Create node representing a syntax-quoted form.\n   Takes either a seq of nodes or a single one."],"^N","^23","^6","rewrite_clj/node/quote.cljs","^:",24,"^5;",["^11",[["^59"]]],"^5<",null,"^5=",["^11",[null,null]],"^8",1,"^5>",false,"^7",47,"^5?","^2C","^9",47,"^5@",1,"^5A",true,"^54",["^11",["^55",["^11",[["^59"]]]]],"^5:","Create node representing a syntax-quoted form.\n   Takes either a seq of nodes or a single one."],"~$unquote-node",["^ ","^51",null,"^5",["^ ","^6","rewrite_clj/node/quote.cljs","^7",57,"^8",7,"^9",57,"^:",19,"^54",["^11",["^55",["^11",[["^59"]]]]],"^5:","Create node representing an unquoted form. (`~...`)\n   Takes either a seq of nodes or a single one."],"^N","^2E","^6","rewrite_clj/node/quote.cljs","^:",19,"^5;",["^11",[["^59"]]],"^5<",null,"^5=",["^11",[null,null]],"^8",1,"^5>",false,"^7",57,"^5?","^2C","^9",57,"^5@",1,"^5A",true,"^54",["^11",["^55",["^11",[["^59"]]]]],"^5:","Create node representing an unquoted form. (`~...`)\n   Takes either a seq of nodes or a single one."],"~$unquote-splicing-node",["^ ","^51",null,"^5",["^ ","^6","rewrite_clj/node/quote.cljs","^7",67,"^8",7,"^9",67,"^:",28,"^54",["^11",["^55",["^11",[["^59"]]]]],"^5:","Create node representing an unquote-spliced form. (`~@...`)\n   Takes either a seq of nodes or a single one."],"^N","^2?","^6","rewrite_clj/node/quote.cljs","^:",28,"^5;",["^11",[["^59"]]],"^5<",null,"^5=",["^11",[null,null]],"^8",1,"^5>",false,"^7",67,"^5?","^2C","^9",67,"^5@",1,"^5A",true,"^54",["^11",["^55",["^11",[["^59"]]]]],"^5:","Create node representing an unquote-spliced form. (`~@...`)\n   Takes either a seq of nodes or a single one."]],"^[",["^ ","^V","^V"],"~:cljs.analyzer/constants",["^ ","^X",["^M",["^56","~:children","~:unquote-splicing","~:unquote","^59","~$unquote-splicing","~:sym","~:prefix","~$unquote","~:syntax-quote","~:quote","^58","^57","^4Y","^55"]],"~:order",["^4Y","^5Q","^5P","^5L","^56","^57","^58","^59","^5T","^55","^5S","^5N","^5R","^5M","^5O"]],"^14",["^ ","^Y",["^M",[]]],"^15",["^ "],"^16",["^W","^V","^T"]],"^Q","^O","~:ns-specs",["^ "],"~:ns-spec-vars",["^M",[]],"~:compiler-options",["^2H",[["^5X","~:static-fns"],true,["^5X","~:shadow-tweaks"],null,["^5X","~:source-map-inline"],null,["^5X","~:elide-asserts"],false,["^5X","~:optimize-constants"],null,["^5X","^1;"],null,["^5X","~:external-config"],null,["^5X","~:tooling-config"],null,["^5X","~:emit-constants"],null,["^5X","~:load-tests"],null,["^5X","~:form-size-threshold"],null,["^5X","~:data-readers"],null,["^5X","~:infer-externs"],"~:auto",["^5X","^1="],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^5X","~:fn-invoke-direct"],null,["^5X","~:source-map"],"/dev/null"]]]