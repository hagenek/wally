["^ ","~:output",["^ ","~:js","goog.provide('rewrite_clj.zip.whitespace');\nrewrite_clj.zip.whitespace.whitespace_QMARK_ = (function rewrite_clj$zip$whitespace$whitespace_QMARK_(zloc){\nvar G__44560 = zloc;\nvar G__44560__$1 = (((G__44560 == null))?null:clojure.zip.node(G__44560));\nif((G__44560__$1 == null)){\nreturn null;\n} else {\nreturn (rewrite_clj.node.whitespace_QMARK_.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.whitespace_QMARK_.cljs$core$IFn$_invoke$arity$1(G__44560__$1) : rewrite_clj.node.whitespace_QMARK_.call(null,G__44560__$1));\n}\n});\nrewrite_clj.zip.whitespace.linebreak_QMARK_ = (function rewrite_clj$zip$whitespace$linebreak_QMARK_(zloc){\nvar G__44561 = zloc;\nvar G__44561__$1 = (((G__44561 == null))?null:clojure.zip.node(G__44561));\nif((G__44561__$1 == null)){\nreturn null;\n} else {\nreturn (rewrite_clj.node.linebreak_QMARK_.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.linebreak_QMARK_.cljs$core$IFn$_invoke$arity$1(G__44561__$1) : rewrite_clj.node.linebreak_QMARK_.call(null,G__44561__$1));\n}\n});\nrewrite_clj.zip.whitespace.comment_QMARK_ = (function rewrite_clj$zip$whitespace$comment_QMARK_(zloc){\nvar G__44562 = zloc;\nvar G__44562__$1 = (((G__44562 == null))?null:clojure.zip.node(G__44562));\nif((G__44562__$1 == null)){\nreturn null;\n} else {\nreturn (rewrite_clj.node.comment_QMARK_.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.comment_QMARK_.cljs$core$IFn$_invoke$arity$1(G__44562__$1) : rewrite_clj.node.comment_QMARK_.call(null,G__44562__$1));\n}\n});\nrewrite_clj.zip.whitespace.whitespace_not_linebreak_QMARK_ = (function rewrite_clj$zip$whitespace$whitespace_not_linebreak_QMARK_(zloc){\nvar and__4210__auto__ = rewrite_clj.zip.whitespace.whitespace_QMARK_(zloc);\nif(cljs.core.truth_(and__4210__auto__)){\nreturn cljs.core.not(rewrite_clj.zip.whitespace.linebreak_QMARK_(zloc));\n} else {\nreturn and__4210__auto__;\n}\n});\nrewrite_clj.zip.whitespace.whitespace_or_comment_QMARK_ = (function rewrite_clj$zip$whitespace$whitespace_or_comment_QMARK_(zloc){\nvar G__44563 = zloc;\nvar G__44563__$1 = (((G__44563 == null))?null:clojure.zip.node(G__44563));\nif((G__44563__$1 == null)){\nreturn null;\n} else {\nreturn rewrite_clj.node.whitespace_or_comment_QMARK_(G__44563__$1);\n}\n});\n/**\n * Perform the given movement while the given predicate returns true.\n */\nrewrite_clj.zip.whitespace.skip = (function rewrite_clj$zip$whitespace$skip(f,p_QMARK_,zloc){\nreturn cljs.core.first(cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(p_QMARK_,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(clojure.zip.end_QMARK_),cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.identity,cljs.core.iterate(f,zloc)))));\n});\n/**\n * Perform the given movement (default: `z/right`) until a non-whitespace/\n * non-comment node is encountered.\n */\nrewrite_clj.zip.whitespace.skip_whitespace = (function rewrite_clj$zip$whitespace$skip_whitespace(var_args){\nvar G__44568 = arguments.length;\nswitch (G__44568) {\ncase 1:\nreturn rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$1 = (function (zloc){\nreturn rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$2(clojure.zip.right,zloc);\n}));\n\n(rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$2 = (function (f,zloc){\nreturn rewrite_clj.zip.whitespace.skip(f,rewrite_clj.zip.whitespace.whitespace_or_comment_QMARK_,zloc);\n}));\n\n(rewrite_clj.zip.whitespace.skip_whitespace.cljs$lang$maxFixedArity = 2);\n\n/**\n * Move left until a non-whitespace/non-comment node is encountered.\n */\nrewrite_clj.zip.whitespace.skip_whitespace_left = (function rewrite_clj$zip$whitespace$skip_whitespace_left(zloc){\nreturn rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$2(clojure.zip.left,zloc);\n});\n/**\n * Prepend a whitespace node representing the given number of spaces (default: 1).\n */\nrewrite_clj.zip.whitespace.prepend_space = (function rewrite_clj$zip$whitespace$prepend_space(var_args){\nvar G__44570 = arguments.length;\nswitch (G__44570) {\ncase 1:\nreturn rewrite_clj.zip.whitespace.prepend_space.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rewrite_clj.zip.whitespace.prepend_space.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rewrite_clj.zip.whitespace.prepend_space.cljs$core$IFn$_invoke$arity$1 = (function (zloc){\nreturn rewrite_clj.zip.whitespace.prepend_space.cljs$core$IFn$_invoke$arity$2(zloc,(1));\n}));\n\n(rewrite_clj.zip.whitespace.prepend_space.cljs$core$IFn$_invoke$arity$2 = (function (zloc,n){\nreturn clojure.zip.insert_left(zloc,(rewrite_clj.node.spaces.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.spaces.cljs$core$IFn$_invoke$arity$1(n) : rewrite_clj.node.spaces.call(null,n)));\n}));\n\n(rewrite_clj.zip.whitespace.prepend_space.cljs$lang$maxFixedArity = 2);\n\n/**\n * Append a whitespace node representing the given number of spaces (default: 1).\n */\nrewrite_clj.zip.whitespace.append_space = (function rewrite_clj$zip$whitespace$append_space(var_args){\nvar G__44572 = arguments.length;\nswitch (G__44572) {\ncase 1:\nreturn rewrite_clj.zip.whitespace.append_space.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rewrite_clj.zip.whitespace.append_space.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rewrite_clj.zip.whitespace.append_space.cljs$core$IFn$_invoke$arity$1 = (function (zloc){\nreturn rewrite_clj.zip.whitespace.append_space.cljs$core$IFn$_invoke$arity$2(zloc,(1));\n}));\n\n(rewrite_clj.zip.whitespace.append_space.cljs$core$IFn$_invoke$arity$2 = (function (zloc,n){\nreturn clojure.zip.insert_right(zloc,(rewrite_clj.node.spaces.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.spaces.cljs$core$IFn$_invoke$arity$1(n) : rewrite_clj.node.spaces.call(null,n)));\n}));\n\n(rewrite_clj.zip.whitespace.append_space.cljs$lang$maxFixedArity = 2);\n\n/**\n * Prepend a newlines node representing the given number of newlines (default: 1).\n */\nrewrite_clj.zip.whitespace.prepend_newline = (function rewrite_clj$zip$whitespace$prepend_newline(var_args){\nvar G__44576 = arguments.length;\nswitch (G__44576) {\ncase 1:\nreturn rewrite_clj.zip.whitespace.prepend_newline.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rewrite_clj.zip.whitespace.prepend_newline.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rewrite_clj.zip.whitespace.prepend_newline.cljs$core$IFn$_invoke$arity$1 = (function (zloc){\nreturn rewrite_clj.zip.whitespace.prepend_newline.cljs$core$IFn$_invoke$arity$2(zloc,(1));\n}));\n\n(rewrite_clj.zip.whitespace.prepend_newline.cljs$core$IFn$_invoke$arity$2 = (function (zloc,n){\nreturn clojure.zip.insert_left(zloc,(rewrite_clj.node.newlines.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.newlines.cljs$core$IFn$_invoke$arity$1(n) : rewrite_clj.node.newlines.call(null,n)));\n}));\n\n(rewrite_clj.zip.whitespace.prepend_newline.cljs$lang$maxFixedArity = 2);\n\n/**\n * Append a newline node representing the given number of newlines (default: 1).\n */\nrewrite_clj.zip.whitespace.append_newline = (function rewrite_clj$zip$whitespace$append_newline(var_args){\nvar G__44579 = arguments.length;\nswitch (G__44579) {\ncase 1:\nreturn rewrite_clj.zip.whitespace.append_newline.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rewrite_clj.zip.whitespace.append_newline.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rewrite_clj.zip.whitespace.append_newline.cljs$core$IFn$_invoke$arity$1 = (function (zloc){\nreturn rewrite_clj.zip.whitespace.append_newline.cljs$core$IFn$_invoke$arity$2(zloc,(1));\n}));\n\n(rewrite_clj.zip.whitespace.append_newline.cljs$core$IFn$_invoke$arity$2 = (function (zloc,n){\nreturn clojure.zip.insert_right(zloc,(rewrite_clj.node.newlines.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.newlines.cljs$core$IFn$_invoke$arity$1(n) : rewrite_clj.node.newlines.call(null,n)));\n}));\n\n(rewrite_clj.zip.whitespace.append_newline.cljs$lang$maxFixedArity = 2);\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","rewrite_clj/zip/whitespace.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",31],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index","~$highlight.js","~$module$node_modules$highlight_DOT_js$lib$index","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.repl","~$cljs.repl"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$rewrite-clj.zip.whitespace","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$rewrite-clj.node","^S","~$node","^S","~$clojure.zip","^U","~$z","^U","~$cljs.core","^V","~$goog","^W"],"~:seen",["^L",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^V","^V"],"~:form",["~#list",["~$ns","^N",["^11",["^Y",["^S","~:as","^T"],["^U","^13","~$z"]]]]],"~:flags",["^ ","^Y",["^L",[]]],"~:js-deps",["^ "],"~:deps",["^W","^V","^S","^U"]],"^P","^N","~:resource-id",["~:shadow.build.classpath/resource","rewrite_clj/zip/whitespace.cljs"],"~:compiled-at",1638904285574,"~:resource-name","rewrite_clj/zip/whitespace.cljs","~:warnings",[],"~:source","(ns rewrite-clj.zip.whitespace\n  (:require [rewrite-clj.node :as node]\n            [clojure.zip :as z]))\n\n;; ## Predicates\n\n(defn whitespace?\n  [zloc]\n  (some-> zloc z/node node/whitespace?))\n\n(defn linebreak?\n  [zloc]\n  (some-> zloc z/node node/linebreak?))\n\n(defn comment?\n  [zloc]\n  (some-> zloc z/node node/comment?))\n\n(defn whitespace-not-linebreak?\n  [zloc]\n  (and\n   (whitespace? zloc)\n   (not (linebreak? zloc))))\n\n(defn whitespace-or-comment?\n  [zloc]\n  (some-> zloc z/node node/whitespace-or-comment?))\n\n\n;; ## Movement\n\n(defn skip\n  \"Perform the given movement while the given predicate returns true.\"\n  [f p? zloc]\n  (->> (iterate f zloc)\n       (take-while identity)\n       (take-while (complement z/end?))\n       (drop-while p?)\n       (first)))\n\n(defn skip-whitespace\n  \"Perform the given movement (default: `z/right`) until a non-whitespace/\n   non-comment node is encountered.\"\n  ([zloc] (skip-whitespace z/right zloc))\n  ([f zloc] (skip f whitespace-or-comment? zloc)))\n\n(defn skip-whitespace-left\n  \"Move left until a non-whitespace/non-comment node is encountered.\"\n  [zloc]\n  (skip-whitespace z/left zloc))\n\n;; ## Insertion\n\n(defn prepend-space\n  \"Prepend a whitespace node representing the given number of spaces (default: 1).\"\n  ([zloc] (prepend-space zloc 1))\n  ([zloc n]\n   (z/insert-left zloc (node/spaces n))))\n\n(defn append-space\n  \"Append a whitespace node representing the given number of spaces (default: 1).\"\n  ([zloc] (append-space zloc 1))\n  ([zloc n]\n   (z/insert-right zloc (node/spaces n))))\n\n(defn prepend-newline\n  \"Prepend a newlines node representing the given number of newlines (default: 1).\"\n  ([zloc] (prepend-newline zloc 1))\n  ([zloc n]\n   (z/insert-left zloc (node/newlines n))))\n\n(defn append-newline\n  \"Append a newline node representing the given number of newlines (default: 1).\"\n  ([zloc] (append-newline zloc 1))\n  ([zloc n]\n   (z/insert-right zloc (node/newlines n))))\n","~:reader-features",["^L",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["rewrite-clj.zip.whitespace/whitespace?","zloc","G__44560","clojure.zip/node","rewrite-clj.node/whitespace?","rewrite-clj.zip.whitespace/linebreak?","G__44561","rewrite-clj.node/linebreak?","rewrite-clj.zip.whitespace/comment?","G__44562","rewrite-clj.node/comment?","rewrite-clj.zip.whitespace/whitespace-not-linebreak?","and__4210__auto__","cljs.core/not","rewrite-clj.zip.whitespace/whitespace-or-comment?","G__44563","rewrite-clj.node/whitespace-or-comment?","rewrite-clj.zip.whitespace/skip","f","p?","cljs.core/iterate","cljs.core.take_while","cljs.core/identity","cljs.core/complement","clojure.zip/end?","cljs.core.drop_while","cljs.core/first","var_args","G__44568","rewrite-clj.zip.whitespace/skip-whitespace","js/Error","rewrite_clj.zip.whitespace.skip_whitespace","clojure.zip/right","rewrite-clj.zip.whitespace/skip-whitespace-left","clojure.zip/left","G__44570","rewrite-clj.zip.whitespace/prepend-space","rewrite_clj.zip.whitespace.prepend_space","n","clojure.zip/insert-left","rewrite-clj.node/spaces","G__44572","rewrite-clj.zip.whitespace/append-space","rewrite_clj.zip.whitespace.append_space","clojure.zip/insert-right","G__44576","rewrite-clj.zip.whitespace/prepend-newline","rewrite_clj.zip.whitespace.prepend_newline","rewrite-clj.node/newlines","G__44579","rewrite-clj.zip.whitespace/append-newline","rewrite_clj.zip.whitespace.append_newline"]],"~:used-vars",["^L",["~$rewrite-clj.zip.whitespace/prepend-space","~$rewrite-clj.zip.whitespace/comment?","~$rewrite-clj.zip.whitespace/whitespace-not-linebreak?","~$clojure.zip/node","~$rewrite-clj.zip.whitespace/append-newline","~$clojure.zip/end?","~$rewrite-clj.zip.whitespace/prepend-newline","~$cljs.core/take-while","~$cljs.core/drop-while","~$rewrite-clj.zip.whitespace/append-space","~$rewrite-clj.zip.whitespace/whitespace-or-comment?","~$cljs.core/identity","~$rewrite-clj.node/comment?","~$cljs.core/iterate","~$rewrite-clj.zip.whitespace/whitespace?","~$rewrite-clj.node/spaces","~$rewrite-clj.zip.whitespace/skip-whitespace-left","~$clojure.zip/insert-right","~$rewrite-clj.zip.whitespace/skip","~$rewrite-clj.node/whitespace-or-comment?","~$rewrite-clj.node/whitespace?","~$clojure.zip/insert-left","~$rewrite-clj.node/linebreak?","~$clojure.zip/right","~$cljs.core/not","~$cljs.core/complement","~$rewrite-clj.node/newlines","~$rewrite-clj.zip.whitespace/linebreak?","~$cljs.core/first","~$js/Error","~$clojure.zip/left","~$rewrite-clj.zip.whitespace/skip-whitespace"]]],"~:cache-keys",["~#cmap",[["^18","goog/dom/tagname.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^L",[]],"~:deps-syms",["^W","~$goog.dom.HtmlElement"]]],["^18","rewrite_clj/node/token.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^V","~$rewrite-clj.node.protocols"]]],["^18","cljs/tools/reader/impl/utils.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^V","~$clojure.string","~$goog.string"]]],["^18","goog/math/math.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","~$goog.array","~$goog.asserts"]]],["^18","goog/html/trustedtypes.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W"]]],["^18","goog/labs/useragent/browser.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^2B","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^18","goog/html/safeurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^2C","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2F"]]],["^18","goog/array/array.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^2C"]]],["^18","goog/debug/error.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W"]]],["^18","goog/dom/nodetype.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W"]]],["^18","cljs/tools/reader/impl/inspect.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^V"]]],["^18","cljs/tools/reader.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^V","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader.impl.errors","^2B","^2A","~$goog.string.StringBuffer"]]],["^18","rewrite_clj/node/forms.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^V","^2?"]]],["^18","goog/string/typedstring.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W"]]],["^18","goog/object/object.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W"]]],["^18","goog/dom/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^2C"]]],"~:SHADOW-TIMESTAMP",[1628015068000,1628015068000,1628015038000],["^18","goog/math/long.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^2C","~$goog.reflect"]]],["^18","rewrite_clj/node/reader_macro.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^V","^2?","~$rewrite-clj.node.whitespace"]]],["^18","goog/html/trustedresourceurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^2C","~$goog.fs.blob","^2G","~$goog.html.SafeScript","~$goog.html.trustedtypes","^2I","^2J","^2K","^2L"]]],["^18","goog/string/internal.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W"]]],["^18","goog/functions/functions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W"]]],["^18","goog/html/safestyle.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^2B","^2C","~$goog.html.SafeUrl","^2K","^2L","^2F"]]],["^18","goog/dom/safe.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^2C","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^2V","~$goog.html.SafeStyle","^2X","^2H","~$goog.html.uncheckedconversions","^2K","^2F"]]],["^18","clojure/walk.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^V"]]],["^18","goog/structs/map.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^18","rewrite_clj/node/meta.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^V","^2?","^2T"]]],["^18","goog/html/safehtml.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^2B","^2C","~$goog.dom.TagName","~$goog.dom.tags","^2V","^30","~$goog.html.SafeStyleSheet","^2X","^2H","^2W","^2I","^2J","~$goog.labs.userAgent.browser","^2E","^2K","^2L","^2F"]]],["^18","goog/dom/tags.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^2E"]]],["^18","rewrite_clj/node/stringz.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^V","^2?","~$cljs.tools.reader","^2@"]]],["^18","rewrite_clj/node/comment.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^V","^2?"]]],["^18","goog/fs/blob.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^2B"]]],["^18","rewrite_clj/node/keyword.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^V","^2?"]]],["^18","goog/asserts/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^18","goog/uri/uri.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^2B","^2C","^2A","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^18","goog/i18n/bidi.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W"]]],["^18","rewrite_clj/node/protocols.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^V","^2@"]]],["^18","rewrite_clj/node/seq.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^V","^2?"]]],["^18","rewrite_clj/node/uneval.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^V","^2?"]]],["^18","goog/fs/url.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W"]]],["^18","goog/base.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",[]]],["^18","goog/structs/structs.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^2B","^2E"]]],["^18","cljs/tools/reader/impl/errors.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^V","^2M","^2@","~$cljs.tools.reader.impl.inspect"]]],["^18","rewrite_clj/node/whitespace.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^V","^2?"]]],["^18","rewrite_clj/node/coercer.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^V","~$rewrite-clj.node.comment","~$rewrite-clj.node.forms","~$rewrite-clj.node.keyword","~$rewrite-clj.node.quote","~$rewrite-clj.node.stringz","~$rewrite-clj.node.uneval","~$rewrite-clj.node.meta","~$rewrite-clj.node.fn","^2?","~$rewrite-clj.node.reader-macro","~$rewrite-clj.node.seq","~$rewrite-clj.node.token","^2T"]]],["^18","clojure/string.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^V","^2A","^2Q"]]],["^18","goog/string/string.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","~$goog.dom.safe","^31","^2K","^2F"]]],["^18","goog/reflect/reflect.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W"]]],["^18","rewrite_clj/node/fn.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^V","^2?","~$clojure.walk"]]],["^18","goog/labs/useragent/util.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^2F"]]],["^18","rewrite_clj/node.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^V","~$rewrite-clj.node.coercer","^2?","^3C","^3J","^2T","^3K","^3A","^3B","^3G","^3E","^3I","^3D","^3F","^3H"]]],["^18","clojure/zip.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^V"]]],["^18","goog/string/stringbuffer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W"]]],["^18","cljs/tools/reader/reader_types.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^V","^2N","^2A","^2Q"]]],["^18","goog/iter/iter.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^2B","^2C","^2Z","~$goog.math"]]],["^18","goog/html/uncheckedconversions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^2C","^2[","^2V","^30","^36","^2X","^2H","^2K","^2F","^2I"]]],["^18","rewrite_clj/node/quote.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^V","^2?"]]],["^18","cljs/tools/reader/impl/commons.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^V","^2P","^2M","^2N"]]],["^18","goog/dom/htmlelement.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W"]]],["^18","cljs/core.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","~$goog.math.Long","~$goog.math.Integer","^2A","^2E","^2B","~$goog.Uri","^2Q"]]],["^18","goog/html/safescript.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^2K","^2L","^2W","^2C"]]],["^18","goog/html/safestylesheet.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^2K","^30","^2L","^2B","^2E","^2C","^2F"]]],["^18","goog/math/integer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^2S"]]],["^18","goog/uri/utils.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^2C","^2A"]]],["^18","goog/string/const.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^2C","^2L"]]],["^18","rewrite_clj/zip/whitespace.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^2:",["^ ","^2;",null,"^2<",["^L",[]],"^2=",["^W","^V","^S","^U"]]]]],"~:clj-info",["^ ","jar:file:/Users/hagenek/.m2/repository/binaryage/devtools/1.0.3/devtools-1.0.3.jar!/devtools/defaults.clj",1638904136000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1628015039000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1628015039000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/passes.cljc",1628015038000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/data.json/2.4.0/data.json-2.4.0.jar!/clojure/data/json.clj",1628015036000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/instant.clj",1628015038000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1628015039000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/externs.clj",1628015038000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map/base64.clj",1628015038000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1628015039000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader.clj",1628015036000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map.clj",1628015038000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1628015039000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/cljs/tools/reader/reader_types.clj",1628015036000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/util.cljc",1628015038000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/js_deps.cljc",1628015038000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map/base64_vlq.clj",1628015038000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/default_data_readers.clj",1628015036000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/core.cljc",1628015038000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/reader_types.clj",1628015036000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/tagged_literals.cljc",1628015038000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/errors.clj",1628015036000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/impl.cljc",1628015038000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/inspect.clj",1628015036000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/env.cljc",1628015038000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer.cljc",1628015038000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1628015039000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/compiler.cljc",1628015038000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1628015039000,"jar:file:/Users/hagenek/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/passes/and_or.cljc",1628015038000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",1,"^8",5,"^9",1,"^:",31],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I"],"^J",null,"^K",["^L",[]],"^M","^N","^Q",null,"^R",["^ ","^S","^S","^T","^S","^U","^U","~$z","^U","^V","^V","^W","^W"],"^X",["^L",["^Y"]],"~:shadow/js-access-global",["^L",["Error"]],"^Z",null,"~:defs",["^ ","~$whitespace?",["^ ","~:protocol-inline",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",7,"^8",7,"^9",7,"^:",18,"~:arglists",["^11",["~$quote",["^11",[["~$zloc"]]]]]],"^M","^1R","^6","rewrite_clj/zip/whitespace.cljs","^:",18,"~:method-params",["^11",[["^4M"]]],"~:protocol-impl",null,"~:arglists-meta",["^11",[null,null]],"^8",1,"~:variadic?",false,"^7",7,"~:ret-tag",["^L",["~$any","~$clj-nil"]],"^9",7,"~:max-fixed-arity",1,"~:fn-var",true,"^4K",["^11",["^4L",["^11",[["^4M"]]]]]],"~$linebreak?",["^ ","^4J",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",11,"^8",7,"^9",11,"^:",17,"^4K",["^11",["^4L",["^11",[["^4M"]]]]]],"^M","^23","^6","rewrite_clj/zip/whitespace.cljs","^:",17,"^4N",["^11",[["^4M"]]],"^4O",null,"^4P",["^11",[null,null]],"^8",1,"^4Q",false,"^7",11,"^4R",["^L",["^4S","^4T"]],"^9",11,"^4U",1,"^4V",true,"^4K",["^11",["^4L",["^11",[["^4M"]]]]]],"~$skip",["^ ","^4J",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",32,"^8",7,"^9",32,"^:",11,"^4K",["^11",["^4L",["^11",[["~$f","~$p?","^4M"]]]]],"~:doc","Perform the given movement while the given predicate returns true."],"^M","^1V","^6","rewrite_clj/zip/whitespace.cljs","^:",11,"^4N",["^11",[["~$f","^4Y","^4M"]]],"^4O",null,"^4P",["^11",[null,null]],"^8",1,"^4Q",false,"^7",32,"^4R",["^L",["^4S","^4T"]],"^9",32,"^4U",3,"^4V",true,"^4K",["^11",["^4L",["^11",[["~$f","^4Y","^4M"]]]]],"^4Z","Perform the given movement while the given predicate returns true."],"~$prepend-space",["^ ","^4J",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",54,"^8",7,"^9",54,"^:",20,"^4K",["^11",["^4L",["^11",[["^4M"],["^4M","~$n"]]]]],"^4Z","Prepend a whitespace node representing the given number of spaces (default: 1).","~:top-fn",["^ ","^4Q",false,"~:fixed-arity",2,"^4U",2,"^4N",[["^4M"],["^4M","~$n"]],"^4K",["^11",[["^4M"],["^4M","~$n"]]],"^4P",["^11",[null,null]]]],"^M","^1D","^6","rewrite_clj/zip/whitespace.cljs","^:",20,"^50",["^ ","^4Q",false,"^51",2,"^4U",2,"^4N",[["^4M"],["^4M","~$n"]],"^4K",["^11",[["^4M"],["^4M","~$n"]]],"^4P",["^11",[null,null]]],"^4N",[["^4M"],["^4M","~$n"]],"^4O",null,"^51",2,"^4P",["^11",[null,null]],"^8",1,"^4Q",false,"~:methods",[["^ ","^51",1,"^4Q",false,"~:tag","^4S"],["^ ","^51",2,"^4Q",false,"^53",["^L",["~$clj","~$cljs.core/MetaFn","^4T"]]]],"^7",54,"^9",54,"^4U",2,"^4V",true,"^4K",["^11",[["^4M"],["^4M","~$n"]]],"^4Z","Prepend a whitespace node representing the given number of spaces (default: 1)."],"~$append-newline",["^ ","^4J",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",72,"^8",7,"^9",72,"^:",21,"^4K",["^11",["^4L",["^11",[["^4M"],["^4M","~$n"]]]]],"^4Z","Append a newline node representing the given number of newlines (default: 1).","^50",["^ ","^4Q",false,"^51",2,"^4U",2,"^4N",[["^4M"],["^4M","~$n"]],"^4K",["^11",[["^4M"],["^4M","~$n"]]],"^4P",["^11",[null,null]]]],"^M","^1H","^6","rewrite_clj/zip/whitespace.cljs","^:",21,"^50",["^ ","^4Q",false,"^51",2,"^4U",2,"^4N",[["^4M"],["^4M","~$n"]],"^4K",["^11",[["^4M"],["^4M","~$n"]]],"^4P",["^11",[null,null]]],"^4N",[["^4M"],["^4M","~$n"]],"^4O",null,"^51",2,"^4P",["^11",[null,null]],"^8",1,"^4Q",false,"^52",[["^ ","^51",1,"^4Q",false,"^53","^4S"],["^ ","^51",2,"^4Q",false,"^53",["^L",["^54","^55","^4T"]]]],"^7",72,"^9",72,"^4U",2,"^4V",true,"^4K",["^11",[["^4M"],["^4M","~$n"]]],"^4Z","Append a newline node representing the given number of newlines (default: 1)."],"~$prepend-newline",["^ ","^4J",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",66,"^8",7,"^9",66,"^:",22,"^4K",["^11",["^4L",["^11",[["^4M"],["^4M","~$n"]]]]],"^4Z","Prepend a newlines node representing the given number of newlines (default: 1).","^50",["^ ","^4Q",false,"^51",2,"^4U",2,"^4N",[["^4M"],["^4M","~$n"]],"^4K",["^11",[["^4M"],["^4M","~$n"]]],"^4P",["^11",[null,null]]]],"^M","^1J","^6","rewrite_clj/zip/whitespace.cljs","^:",22,"^50",["^ ","^4Q",false,"^51",2,"^4U",2,"^4N",[["^4M"],["^4M","~$n"]],"^4K",["^11",[["^4M"],["^4M","~$n"]]],"^4P",["^11",[null,null]]],"^4N",[["^4M"],["^4M","~$n"]],"^4O",null,"^51",2,"^4P",["^11",[null,null]],"^8",1,"^4Q",false,"^52",[["^ ","^51",1,"^4Q",false,"^53","^4S"],["^ ","^51",2,"^4Q",false,"^53",["^L",["^54","^55","^4T"]]]],"^7",66,"^9",66,"^4U",2,"^4V",true,"^4K",["^11",[["^4M"],["^4M","~$n"]]],"^4Z","Prepend a newlines node representing the given number of newlines (default: 1)."],"~$append-space",["^ ","^4J",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",60,"^8",7,"^9",60,"^:",19,"^4K",["^11",["^4L",["^11",[["^4M"],["^4M","~$n"]]]]],"^4Z","Append a whitespace node representing the given number of spaces (default: 1).","^50",["^ ","^4Q",false,"^51",2,"^4U",2,"^4N",[["^4M"],["^4M","~$n"]],"^4K",["^11",[["^4M"],["^4M","~$n"]]],"^4P",["^11",[null,null]]]],"^M","^1M","^6","rewrite_clj/zip/whitespace.cljs","^:",19,"^50",["^ ","^4Q",false,"^51",2,"^4U",2,"^4N",[["^4M"],["^4M","~$n"]],"^4K",["^11",[["^4M"],["^4M","~$n"]]],"^4P",["^11",[null,null]]],"^4N",[["^4M"],["^4M","~$n"]],"^4O",null,"^51",2,"^4P",["^11",[null,null]],"^8",1,"^4Q",false,"^52",[["^ ","^51",1,"^4Q",false,"^53","^4S"],["^ ","^51",2,"^4Q",false,"^53",["^L",["^54","^55","^4T"]]]],"^7",60,"^9",60,"^4U",2,"^4V",true,"^4K",["^11",[["^4M"],["^4M","~$n"]]],"^4Z","Append a whitespace node representing the given number of spaces (default: 1)."],"~$skip-whitespace-left",["^ ","^4J",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",47,"^8",7,"^9",47,"^:",27,"^4K",["^11",["^4L",["^11",[["^4M"]]]]],"^4Z","Move left until a non-whitespace/non-comment node is encountered."],"^M","^1T","^6","rewrite_clj/zip/whitespace.cljs","^:",27,"^4N",["^11",[["^4M"]]],"^4O",null,"^4P",["^11",[null,null]],"^8",1,"^4Q",false,"^7",47,"^4R",["^L",["^4S","^4T"]],"^9",47,"^4U",1,"^4V",true,"^4K",["^11",["^4L",["^11",[["^4M"]]]]],"^4Z","Move left until a non-whitespace/non-comment node is encountered."],"~$skip-whitespace",["^ ","^4J",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",41,"^8",7,"^9",41,"^:",22,"^4K",["^11",["^4L",["^11",[["^4M"],["~$f","^4M"]]]]],"^4Z","Perform the given movement (default: `z/right`) until a non-whitespace/\n   non-comment node is encountered.","^50",["^ ","^4Q",false,"^51",2,"^4U",2,"^4N",[["^4M"],["~$f","^4M"]],"^4K",["^11",[["^4M"],["~$f","^4M"]]],"^4P",["^11",[null,null]]]],"^M","^27","^6","rewrite_clj/zip/whitespace.cljs","^:",22,"^50",["^ ","^4Q",false,"^51",2,"^4U",2,"^4N",[["^4M"],["~$f","^4M"]],"^4K",["^11",[["^4M"],["~$f","^4M"]]],"^4P",["^11",[null,null]]],"^4N",[["^4M"],["~$f","^4M"]],"^4O",null,"^51",2,"^4P",["^11",[null,null]],"^8",1,"^4Q",false,"^52",[["^ ","^51",1,"^4Q",false,"^53","^4S"],["^ ","^51",2,"^4Q",false,"^53",["^L",["^4S","^4T"]]]],"^7",41,"^9",41,"^4U",2,"^4V",true,"^4K",["^11",[["^4M"],["~$f","^4M"]]],"^4Z","Perform the given movement (default: `z/right`) until a non-whitespace/\n   non-comment node is encountered."],"~$comment?",["^ ","^4J",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",15,"^8",7,"^9",15,"^:",15,"^4K",["^11",["^4L",["^11",[["^4M"]]]]]],"^M","^1E","^6","rewrite_clj/zip/whitespace.cljs","^:",15,"^4N",["^11",[["^4M"]]],"^4O",null,"^4P",["^11",[null,null]],"^8",1,"^4Q",false,"^7",15,"^4R",["^L",["^4S","^4T"]],"^9",15,"^4U",1,"^4V",true,"^4K",["^11",["^4L",["^11",[["^4M"]]]]]],"~$whitespace-not-linebreak?",["^ ","^4J",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",19,"^8",7,"^9",19,"^:",32,"^4K",["^11",["^4L",["^11",[["^4M"]]]]]],"^M","^1F","^6","rewrite_clj/zip/whitespace.cljs","^:",32,"^4N",["^11",[["^4M"]]],"^4O",null,"^4P",["^11",[null,null]],"^8",1,"^4Q",false,"^7",19,"^4R",["^L",["~$boolean","^4S","^4T"]],"^9",19,"^4U",1,"^4V",true,"^4K",["^11",["^4L",["^11",[["^4M"]]]]]],"~$whitespace-or-comment?",["^ ","^4J",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",25,"^8",7,"^9",25,"^:",29,"^4K",["^11",["^4L",["^11",[["^4M"]]]]]],"^M","^1N","^6","rewrite_clj/zip/whitespace.cljs","^:",29,"^4N",["^11",[["^4M"]]],"^4O",null,"^4P",["^11",[null,null]],"^8",1,"^4Q",false,"^7",25,"^4R",["^L",["^4S","^4T"]],"^9",25,"^4U",1,"^4V",true,"^4K",["^11",["^4L",["^11",[["^4M"]]]]]]],"^[",["^ ","^V","^V"],"^14",["^ ","^Y",["^L",[]]],"^15",["^ "],"^16",["^W","^V","^S","^U"]],"^P","^N","~:ns-specs",["^ "],"~:ns-spec-vars",["^L",[]],"~:compiler-options",["^29",[["^5A","~:static-fns"],true,["^5A","~:shadow-tweaks"],null,["^5A","~:source-map-inline"],null,["^5A","~:elide-asserts"],false,["^5A","~:optimize-constants"],null,["^5A","^1;"],null,["^5A","~:external-config"],null,["^5A","~:tooling-config"],null,["^5A","~:emit-constants"],null,["^5A","~:load-tests"],null,["^5A","~:form-size-threshold"],null,["^5A","~:data-readers"],null,["^5A","~:infer-externs"],"~:auto",["^5A","^1="],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^5A","~:fn-invoke-direct"],null,["^5A","~:source-map"],"/dev/null"]]]