["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/polished/lib/color/hsla.js"],"~:js","shadow$provide.module$node_modules$polished$lib$color$hsla=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}exports.__esModule=!0;exports.default=void 0;var _hslToHex=_interopRequireDefault(require(\"module$node_modules$polished$lib$internalHelpers$_hslToHex\")),_hslToRgb=_interopRequireDefault(require(\"module$node_modules$polished$lib$internalHelpers$_hslToRgb\"));exports.default=function(value,saturation,lightness,alpha){if(\"number\"===\ntypeof value&&\"number\"===typeof saturation&&\"number\"===typeof lightness&&\"number\"===typeof alpha)return 1<=alpha?(0,_hslToHex.default)(value,saturation,lightness):\"rgba(\"+(0,_hslToRgb.default)(value,saturation,lightness)+\",\"+alpha+\")\";if(\"object\"===typeof value&&void 0===saturation&&void 0===lightness&&void 0===alpha)return 1<=value.alpha?(0,_hslToHex.default)(value.hue,value.saturation,value.lightness):\"rgba(\"+(0,_hslToRgb.default)(value.hue,value.saturation,value.lightness)+\",\"+value.alpha+\")\";\nthrow Error(\"Passed invalid arguments to hsla, please pass multiple numbers e.g. hsl(360, 0.75, 0.4, 0.7) or an object e.g. rgb({ hue: 255, saturation: 0.4, lightness: 0.75, alpha: 0.7 }).\");};module.exports=exports.default}","~:source","shadow$provide[\"module$node_modules$polished$lib$color$hsla\"] = function(global,require,module,exports) {\n\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _hslToHex =\n/*#__PURE__*/\n_interopRequireDefault(\n/*#__PURE__*/\nrequire(\"../internalHelpers/_hslToHex\"));\n\nvar _hslToRgb =\n/*#__PURE__*/\n_interopRequireDefault(\n/*#__PURE__*/\nrequire(\"../internalHelpers/_hslToRgb\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns a string value for the color. The returned result is the smallest possible rgba or hex notation.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: hsla(359, 0.75, 0.4, 0.7),\n *   background: hsla({ hue: 360, saturation: 0.75, lightness: 0.4, alpha: 0,7 }),\n *   background: hsla(359, 0.75, 0.4, 1),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${hsla(359, 0.75, 0.4, 0.7)};\n *   background: ${hsla({ hue: 360, saturation: 0.75, lightness: 0.4, alpha: 0,7 })};\n *   background: ${hsla(359, 0.75, 0.4, 1)};\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   background: \"rgba(179,25,28,0.7)\";\n *   background: \"rgba(179,25,28,0.7)\";\n *   background: \"#b3191c\";\n * }\n */\nfunction hsla(value, saturation, lightness, alpha) {\n  if (typeof value === 'number' && typeof saturation === 'number' && typeof lightness === 'number' && typeof alpha === 'number') {\n    return alpha >= 1 ? (0, _hslToHex.default)(value, saturation, lightness) : \"rgba(\" + (0, _hslToRgb.default)(value, saturation, lightness) + \",\" + alpha + \")\";\n  } else if (typeof value === 'object' && saturation === undefined && lightness === undefined && alpha === undefined) {\n    return value.alpha >= 1 ? (0, _hslToHex.default)(value.hue, value.saturation, value.lightness) : \"rgba(\" + (0, _hslToRgb.default)(value.hue, value.saturation, value.lightness) + \",\" + value.alpha + \")\";\n  }\n\n  throw new Error('Passed invalid arguments to hsla, please pass multiple numbers e.g. hsl(360, 0.75, 0.4, 0.7) or an object e.g. rgb({ hue: 255, saturation: 0.4, lightness: 0.75, alpha: 0.7 }).');\n}\n\nvar _default = hsla;\nexports.default = _default;\nmodule.exports = exports.default;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$polished$lib$internalHelpers$_hslToRgb","~$module$node_modules$polished$lib$internalHelpers$_hslToHex"]],"~:properties",["^5",["__esModule","default"]],"~:compiled-at",1638904261834,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$polished$lib$color$hsla.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,2CAAA,CAAgE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAkBxGC,QAASA,uBAAsB,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAEE,QAASF,GAAX,CAAvC,CAfrCF,OAAQG,CAAAA,UAAR,CAAqB,CAAA,CACrBH,QAAQI,CAAAA,OAAR,CAAkB,IAAK,EAEvB,KAAIC,UAEJJ,sBAAA,CAEAH,OAAA,CAAQ,4DAAR,CAFA,CAFA,CAMIQ,UAEJL,sBAAA,CAEAH,OAAA,CAAQ,4DAAR,CAFA,CA2CAE,QAAQI,CAAAA,OAAR,CAXAG,QAAa,CAACC,KAAD,CAAQC,UAAR,CAAoBC,SAApB,CAA+BC,KAA/B,CAAsC,CACjD,GAAqB,QAArB;AAAI,MAAOH,MAAX,EAAuD,QAAvD,GAAiC,MAAOC,WAAxC,EAAwF,QAAxF,GAAmE,MAAOC,UAA1E,EAAqH,QAArH,GAAoG,MAAOC,MAA3G,CACE,MAAgB,EAAT,EAAAA,KAAA,CAAa,CAAC,CAAA,CAAGN,SAAUD,CAAAA,OAAd,EAAuBI,KAAvB,CAA8BC,UAA9B,CAA0CC,SAA1C,CAAb,CAAoE,OAApE,CAA8E,CAAC,CAAA,CAAGJ,SAAUF,CAAAA,OAAd,EAAuBI,KAAvB,CAA8BC,UAA9B,CAA0CC,SAA1C,CAA9E,CAAqI,GAArI,CAA2IC,KAA3I,CAAmJ,GACrJ,IAAqB,QAArB,GAAI,MAAOH,MAAX,EAAgDI,IAAAA,EAAhD,GAAiCH,UAAjC,EAA2EG,IAAAA,EAA3E,GAA6DF,SAA7D,EAAkGE,IAAAA,EAAlG,GAAwFD,KAAxF,CACL,MAAsB,EAAf,EAAAH,KAAMG,CAAAA,KAAN,CAAmB,CAAC,CAAA,CAAGN,SAAUD,CAAAA,OAAd,EAAuBI,KAAMK,CAAAA,GAA7B,CAAkCL,KAAMC,CAAAA,UAAxC,CAAoDD,KAAME,CAAAA,SAA1D,CAAnB,CAA0F,OAA1F,CAAoG,CAAC,CAAA,CAAGJ,SAAUF,CAAAA,OAAd,EAAuBI,KAAMK,CAAAA,GAA7B,CAAkCL,KAAMC,CAAAA,UAAxC,CAAoDD,KAAME,CAAAA,SAA1D,CAApG,CAA2K,GAA3K,CAAiLF,KAAMG,CAAAA,KAAvL,CAA+L,GAGxM;KAAUG,MAAJ,CAAU,iLAAV,CAAN,CAPiD,CAYnDf,OAAOC,CAAAA,OAAP,CAAiBA,OAAQI,CAAAA,OA1D+E;\",\n\"sources\":[\"node_modules/polished/lib/color/hsla.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$polished$lib$color$hsla\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nexports.__esModule = true;\\nexports.default = void 0;\\n\\nvar _hslToHex =\\n/*#__PURE__*/\\n_interopRequireDefault(\\n/*#__PURE__*/\\nrequire(\\\"../internalHelpers/_hslToHex\\\"));\\n\\nvar _hslToRgb =\\n/*#__PURE__*/\\n_interopRequireDefault(\\n/*#__PURE__*/\\nrequire(\\\"../internalHelpers/_hslToRgb\\\"));\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n/**\\n * Returns a string value for the color. The returned result is the smallest possible rgba or hex notation.\\n *\\n * @example\\n * // Styles as object usage\\n * const styles = {\\n *   background: hsla(359, 0.75, 0.4, 0.7),\\n *   background: hsla({ hue: 360, saturation: 0.75, lightness: 0.4, alpha: 0,7 }),\\n *   background: hsla(359, 0.75, 0.4, 1),\\n * }\\n *\\n * // styled-components usage\\n * const div = styled.div`\\n *   background: ${hsla(359, 0.75, 0.4, 0.7)};\\n *   background: ${hsla({ hue: 360, saturation: 0.75, lightness: 0.4, alpha: 0,7 })};\\n *   background: ${hsla(359, 0.75, 0.4, 1)};\\n * `\\n *\\n * // CSS in JS Output\\n *\\n * element {\\n *   background: \\\"rgba(179,25,28,0.7)\\\";\\n *   background: \\\"rgba(179,25,28,0.7)\\\";\\n *   background: \\\"#b3191c\\\";\\n * }\\n */\\nfunction hsla(value, saturation, lightness, alpha) {\\n  if (typeof value === 'number' && typeof saturation === 'number' && typeof lightness === 'number' && typeof alpha === 'number') {\\n    return alpha >= 1 ? (0, _hslToHex.default)(value, saturation, lightness) : \\\"rgba(\\\" + (0, _hslToRgb.default)(value, saturation, lightness) + \\\",\\\" + alpha + \\\")\\\";\\n  } else if (typeof value === 'object' && saturation === undefined && lightness === undefined && alpha === undefined) {\\n    return value.alpha >= 1 ? (0, _hslToHex.default)(value.hue, value.saturation, value.lightness) : \\\"rgba(\\\" + (0, _hslToRgb.default)(value.hue, value.saturation, value.lightness) + \\\",\\\" + value.alpha + \\\")\\\";\\n  }\\n\\n  throw new Error('Passed invalid arguments to hsla, please pass multiple numbers e.g. hsl(360, 0.75, 0.4, 0.7) or an object e.g. rgb({ hue: 255, saturation: 0.4, lightness: 0.75, alpha: 0.7 }).');\\n}\\n\\nvar _default = hsla;\\nexports.default = _default;\\nmodule.exports = exports.default;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"default\",\"_hslToHex\",\"_hslToRgb\",\"hsla\",\"value\",\"saturation\",\"lightness\",\"alpha\",\"undefined\",\"hue\",\"Error\"]\n}\n"]