["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/highlight_DOT_js/lib/languages/capnproto.js"],"~:js","shadow$provide.module$node_modules$highlight_DOT_js$lib$languages$capnproto=function(global,require,module,exports){module.exports=function(hljs){return{name:\"Cap’n Proto\",aliases:[\"capnp\"],keywords:{keyword:\"struct enum interface union group import using const annotation extends in of on as with from fixed\".split(\" \"),built_in:\"Void Bool Int8 Int16 Int32 Int64 UInt8 UInt16 UInt32 UInt64 Float32 Float64 Text Data AnyPointer AnyStruct Capability List\".split(\" \"),literal:[\"true\",\"false\"]},contains:[hljs.QUOTE_STRING_MODE,\nhljs.NUMBER_MODE,hljs.HASH_COMMENT_MODE,{className:\"meta\",begin:/@0x[\\w\\d]{16};/,illegal:/\\n/},{className:\"symbol\",begin:/@\\d+\\b/},{className:\"class\",beginKeywords:\"struct enum\",end:/\\{/,illegal:/\\n/,contains:[hljs.inherit(hljs.TITLE_MODE,{starts:{endsWithParent:!0,excludeEnd:!0}})]},{className:\"class\",beginKeywords:\"interface\",end:/\\{/,illegal:/\\n/,contains:[hljs.inherit(hljs.TITLE_MODE,{starts:{endsWithParent:!0,excludeEnd:!0}})]}]}}}","~:source","shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$capnproto\"] = function(global,require,module,exports) {\n/*\nLanguage: Cap’n Proto\nAuthor: Oleg Efimov <efimovov@gmail.com>\nDescription: Cap’n Proto message definition format\nWebsite: https://capnproto.org/capnp-tool.html\nCategory: protocols\n*/\n\n/** @type LanguageFn */\nfunction capnproto(hljs) {\n  const KEYWORDS = [\n    \"struct\",\n    \"enum\",\n    \"interface\",\n    \"union\",\n    \"group\",\n    \"import\",\n    \"using\",\n    \"const\",\n    \"annotation\",\n    \"extends\",\n    \"in\",\n    \"of\",\n    \"on\",\n    \"as\",\n    \"with\",\n    \"from\",\n    \"fixed\"\n  ];\n  const BUILT_INS = [\n    \"Void\",\n    \"Bool\",\n    \"Int8\",\n    \"Int16\",\n    \"Int32\",\n    \"Int64\",\n    \"UInt8\",\n    \"UInt16\",\n    \"UInt32\",\n    \"UInt64\",\n    \"Float32\",\n    \"Float64\",\n    \"Text\",\n    \"Data\",\n    \"AnyPointer\",\n    \"AnyStruct\",\n    \"Capability\",\n    \"List\"\n  ];\n  const LITERALS = [\n    \"true\",\n    \"false\"\n  ];\n  return {\n    name: 'Cap’n Proto',\n    aliases: ['capnp'],\n    keywords: {\n      keyword: KEYWORDS,\n      built_in: BUILT_INS,\n      literal: LITERALS\n    },\n    contains: [\n      hljs.QUOTE_STRING_MODE,\n      hljs.NUMBER_MODE,\n      hljs.HASH_COMMENT_MODE,\n      {\n        className: 'meta',\n        begin: /@0x[\\w\\d]{16};/,\n        illegal: /\\n/\n      },\n      {\n        className: 'symbol',\n        begin: /@\\d+\\b/\n      },\n      {\n        className: 'class',\n        beginKeywords: 'struct enum',\n        end: /\\{/,\n        illegal: /\\n/,\n        contains: [hljs.inherit(hljs.TITLE_MODE, {\n          starts: {\n            endsWithParent: true,\n            excludeEnd: true\n          } // hack: eating everything after the first title\n        })]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'interface',\n        end: /\\{/,\n        illegal: /\\n/,\n        contains: [hljs.inherit(hljs.TITLE_MODE, {\n          starts: {\n            endsWithParent: true,\n            excludeEnd: true\n          } // hack: eating everything after the first title\n        })]\n      }\n    ]\n  };\n}\n\nmodule.exports = capnproto;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["begin","aliases","className","contains","name","built_in","keyword","keywords","beginKeywords","starts","excludeEnd","illegal","endsWithParent","literal","end"]],"~:compiled-at",1638904261479,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$highlight_DOT_js$lib$languages$capnproto.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,4DAAA,CAAiF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAuGzHD,MAAOC,CAAAA,OAAP,CA7FAC,QAAkB,CAACC,IAAD,CAAO,CA4CvB,MAAO,CACLC,KAAM,aADD,CAELC,QAAS,CAAC,OAAD,CAFJ,CAGLC,SAAU,CACRC,QA/CaC,qGAAAA,CAAAA,KAAAA,CAAAA,GAAAA,CA8CL,CAERC,SA7BcC,4HAAAA,CAAAA,KAAAA,CAAAA,GAAAA,CA2BN,CAGRC,QAVaC,CACf,MADeA,CAEf,OAFeA,CAOL,CAHL,CAQLC,SAAU,CACRV,IAAKW,CAAAA,iBADG;AAERX,IAAKY,CAAAA,WAFG,CAGRZ,IAAKa,CAAAA,iBAHG,CAIR,CACEC,UAAW,MADb,CAEEC,MAAO,gBAFT,CAGEC,QAAS,IAHX,CAJQ,CASR,CACEF,UAAW,QADb,CAEEC,MAAO,QAFT,CATQ,CAaR,CACED,UAAW,OADb,CAEEG,cAAe,aAFjB,CAGEC,IAAK,IAHP,CAIEF,QAAS,IAJX,CAKEN,SAAU,CAACV,IAAKmB,CAAAA,OAAL,CAAanB,IAAKoB,CAAAA,UAAlB,CAA8B,CACvCC,OAAQ,CACNC,eAAgB,CAAA,CADV,CAENC,WAAY,CAAA,CAFN,CAD+B,CAA9B,CAAD,CALZ,CAbQ,CAyBR,CACET,UAAW,OADb,CAEEG,cAAe,WAFjB,CAGEC,IAAK,IAHP,CAIEF,QAAS,IAJX,CAKEN,SAAU,CAACV,IAAKmB,CAAAA,OAAL,CAAanB,IAAKoB,CAAAA,UAAlB,CAA8B,CACvCC,OAAQ,CACNC,eAAgB,CAAA,CADV,CAENC,WAAY,CAAA,CAFN,CAD+B,CAA9B,CAAD,CALZ,CAzBQ,CARL,CA5CgB,CAVgG;\",\n\"sources\":[\"node_modules/highlight_DOT_js/lib/languages/capnproto.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$highlight_DOT_js$lib$languages$capnproto\\\"] = function(global,require,module,exports) {\\n/*\\nLanguage: Cap\\u2019n Proto\\nAuthor: Oleg Efimov <efimovov@gmail.com>\\nDescription: Cap\\u2019n Proto message definition format\\nWebsite: https://capnproto.org/capnp-tool.html\\nCategory: protocols\\n*/\\n\\n/** @type LanguageFn */\\nfunction capnproto(hljs) {\\n  const KEYWORDS = [\\n    \\\"struct\\\",\\n    \\\"enum\\\",\\n    \\\"interface\\\",\\n    \\\"union\\\",\\n    \\\"group\\\",\\n    \\\"import\\\",\\n    \\\"using\\\",\\n    \\\"const\\\",\\n    \\\"annotation\\\",\\n    \\\"extends\\\",\\n    \\\"in\\\",\\n    \\\"of\\\",\\n    \\\"on\\\",\\n    \\\"as\\\",\\n    \\\"with\\\",\\n    \\\"from\\\",\\n    \\\"fixed\\\"\\n  ];\\n  const BUILT_INS = [\\n    \\\"Void\\\",\\n    \\\"Bool\\\",\\n    \\\"Int8\\\",\\n    \\\"Int16\\\",\\n    \\\"Int32\\\",\\n    \\\"Int64\\\",\\n    \\\"UInt8\\\",\\n    \\\"UInt16\\\",\\n    \\\"UInt32\\\",\\n    \\\"UInt64\\\",\\n    \\\"Float32\\\",\\n    \\\"Float64\\\",\\n    \\\"Text\\\",\\n    \\\"Data\\\",\\n    \\\"AnyPointer\\\",\\n    \\\"AnyStruct\\\",\\n    \\\"Capability\\\",\\n    \\\"List\\\"\\n  ];\\n  const LITERALS = [\\n    \\\"true\\\",\\n    \\\"false\\\"\\n  ];\\n  return {\\n    name: 'Cap\\u2019n Proto',\\n    aliases: ['capnp'],\\n    keywords: {\\n      keyword: KEYWORDS,\\n      built_in: BUILT_INS,\\n      literal: LITERALS\\n    },\\n    contains: [\\n      hljs.QUOTE_STRING_MODE,\\n      hljs.NUMBER_MODE,\\n      hljs.HASH_COMMENT_MODE,\\n      {\\n        className: 'meta',\\n        begin: /@0x[\\\\w\\\\d]{16};/,\\n        illegal: /\\\\n/\\n      },\\n      {\\n        className: 'symbol',\\n        begin: /@\\\\d+\\\\b/\\n      },\\n      {\\n        className: 'class',\\n        beginKeywords: 'struct enum',\\n        end: /\\\\{/,\\n        illegal: /\\\\n/,\\n        contains: [hljs.inherit(hljs.TITLE_MODE, {\\n          starts: {\\n            endsWithParent: true,\\n            excludeEnd: true\\n          } // hack: eating everything after the first title\\n        })]\\n      },\\n      {\\n        className: 'class',\\n        beginKeywords: 'interface',\\n        end: /\\\\{/,\\n        illegal: /\\\\n/,\\n        contains: [hljs.inherit(hljs.TITLE_MODE, {\\n          starts: {\\n            endsWithParent: true,\\n            excludeEnd: true\\n          } // hack: eating everything after the first title\\n        })]\\n      }\\n    ]\\n  };\\n}\\n\\nmodule.exports = capnproto;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"capnproto\",\"hljs\",\"name\",\"aliases\",\"keywords\",\"keyword\",\"KEYWORDS\",\"built_in\",\"BUILT_INS\",\"literal\",\"LITERALS\",\"contains\",\"QUOTE_STRING_MODE\",\"NUMBER_MODE\",\"HASH_COMMENT_MODE\",\"className\",\"begin\",\"illegal\",\"beginKeywords\",\"end\",\"inherit\",\"TITLE_MODE\",\"starts\",\"endsWithParent\",\"excludeEnd\"]\n}\n"]