["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/highlight_DOT_js/lib/languages/java.js"],"~:js","shadow$provide.module$node_modules$highlight_DOT_js$lib$languages$java=function(global,require,module,exports){function recurRegex(re,substitution,depth){return-1===depth?\"\":re.replace(substitution,_=>recurRegex(re,substitution,depth-1))}var NUMERIC={className:\"number\",variants:[{begin:\"(\\\\b([0-9](_*[0-9])*)((\\\\.([0-9](_*[0-9])*))|\\\\.)?|(\\\\.([0-9](_*[0-9])*)))[eE][+-]?([0-9](_*[0-9])*)[fFdD]?\\\\b\"},{begin:\"\\\\b([0-9](_*[0-9])*)((\\\\.([0-9](_*[0-9])*))[fFdD]?\\\\b|\\\\.([fFdD]\\\\b)?)\"},{begin:\"(\\\\.([0-9](_*[0-9])*))[fFdD]?\\\\b\"},\n{begin:\"\\\\b([0-9](_*[0-9])*)[fFdD]\\\\b\"},{begin:\"\\\\b0[xX](([0-9a-fA-F](_*[0-9a-fA-F])*)\\\\.?|([0-9a-fA-F](_*[0-9a-fA-F])*)?\\\\.([0-9a-fA-F](_*[0-9a-fA-F])*))[pP][+-]?([0-9](_*[0-9])*)[fFdD]?\\\\b\"},{begin:\"\\\\b(0|[1-9](_*[0-9])*)[lL]?\\\\b\"},{begin:\"\\\\b0[xX]([0-9a-fA-F](_*[0-9a-fA-F])*)[lL]?\\\\b\"},{begin:\"\\\\b0(_*[0-7])*[lL]?\\\\b\"},{begin:\"\\\\b0[bB][01](_*[01])*[lL]?\\\\b\"}],relevance:0};module.exports=function(hljs){const GENERIC_IDENT_RE=\"[À-ʸa-zA-Z_$][À-ʸa-zA-Z_$0-9]*\"+recurRegex(\"(?:\\x3c[À-ʸa-zA-Z_$][À-ʸa-zA-Z_$0-9]*~~~(?:\\\\s*,\\\\s*[À-ʸa-zA-Z_$][À-ʸa-zA-Z_$0-9]*~~~)*\\x3e)?\",\n/~~~/g,2),KEYWORDS={keyword:\"synchronized;abstract;private;var;static;if;const ;for;while;strictfp;finally;protected;import;native;final;void;enum;else;break;transient;catch;instanceof;volatile;case;assert;package;default;public;try;switch;continue;throws;protected;public;private;module;requires;exports;do\".split(\";\"),literal:[\"false\",\"true\",\"null\"],type:\"char boolean long float int byte short double\".split(\" \"),built_in:[\"super\",\"this\"]},ANNOTATION={className:\"meta\",begin:\"@[À-ʸa-zA-Z_$][À-ʸa-zA-Z_$0-9]*\",\ncontains:[{begin:/\\(/,end:/\\)/,contains:[\"self\"]}]},PARAMS={className:\"params\",begin:/\\(/,end:/\\)/,keywords:KEYWORDS,relevance:0,contains:[hljs.C_BLOCK_COMMENT_MODE],endsParent:!0};return{name:\"Java\",aliases:[\"jsp\"],keywords:KEYWORDS,illegal:/<\\/|#/,contains:[hljs.COMMENT(\"/\\\\*\\\\*\",\"\\\\*/\",{relevance:0,contains:[{begin:/\\w+@/,relevance:0},{className:\"doctag\",begin:\"@[A-Za-z]+\"}]}),{begin:/import java\\.[a-z]+\\./,keywords:\"import\",relevance:2},hljs.C_LINE_COMMENT_MODE,hljs.C_BLOCK_COMMENT_MODE,hljs.APOS_STRING_MODE,\nhljs.QUOTE_STRING_MODE,{match:[/\\b(?:class|interface|enum|extends|implements|new)/,/\\s+/,\"[À-ʸa-zA-Z_$][À-ʸa-zA-Z_$0-9]*\"],className:{1:\"keyword\",3:\"title.class\"}},{begin:[\"[À-ʸa-zA-Z_$][À-ʸa-zA-Z_$0-9]*\",/\\s+/,\"[À-ʸa-zA-Z_$][À-ʸa-zA-Z_$0-9]*\",/\\s+/,/=/],className:{1:\"type\",3:\"variable\",5:\"operator\"}},{begin:[/record/,/\\s+/,\"[À-ʸa-zA-Z_$][À-ʸa-zA-Z_$0-9]*\"],className:{1:\"keyword\",3:\"title.class\"},contains:[PARAMS,hljs.C_LINE_COMMENT_MODE,hljs.C_BLOCK_COMMENT_MODE]},{beginKeywords:\"new throw return else\",\nrelevance:0},{begin:[\"(?:\"+GENERIC_IDENT_RE+\"\\\\s+)\",hljs.UNDERSCORE_IDENT_RE,/\\s*(?=\\()/],className:{2:\"title.function\"},keywords:KEYWORDS,contains:[{className:\"params\",begin:/\\(/,end:/\\)/,keywords:KEYWORDS,relevance:0,contains:[ANNOTATION,hljs.APOS_STRING_MODE,hljs.QUOTE_STRING_MODE,NUMERIC,hljs.C_BLOCK_COMMENT_MODE]},hljs.C_LINE_COMMENT_MODE,hljs.C_BLOCK_COMMENT_MODE]},NUMERIC,ANNOTATION]}}}","~:source","shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$java\"] = function(global,require,module,exports) {\n// https://docs.oracle.com/javase/specs/jls/se15/html/jls-3.html#jls-3.10\nvar decimalDigits = '[0-9](_*[0-9])*';\nvar frac = `\\\\.(${decimalDigits})`;\nvar hexDigits = '[0-9a-fA-F](_*[0-9a-fA-F])*';\nvar NUMERIC = {\n  className: 'number',\n  variants: [\n    // DecimalFloatingPointLiteral\n    // including ExponentPart\n    { begin: `(\\\\b(${decimalDigits})((${frac})|\\\\.)?|(${frac}))` +\n      `[eE][+-]?(${decimalDigits})[fFdD]?\\\\b` },\n    // excluding ExponentPart\n    { begin: `\\\\b(${decimalDigits})((${frac})[fFdD]?\\\\b|\\\\.([fFdD]\\\\b)?)` },\n    { begin: `(${frac})[fFdD]?\\\\b` },\n    { begin: `\\\\b(${decimalDigits})[fFdD]\\\\b` },\n\n    // HexadecimalFloatingPointLiteral\n    { begin: `\\\\b0[xX]((${hexDigits})\\\\.?|(${hexDigits})?\\\\.(${hexDigits}))` +\n      `[pP][+-]?(${decimalDigits})[fFdD]?\\\\b` },\n\n    // DecimalIntegerLiteral\n    { begin: '\\\\b(0|[1-9](_*[0-9])*)[lL]?\\\\b' },\n\n    // HexIntegerLiteral\n    { begin: `\\\\b0[xX](${hexDigits})[lL]?\\\\b` },\n\n    // OctalIntegerLiteral\n    { begin: '\\\\b0(_*[0-7])*[lL]?\\\\b' },\n\n    // BinaryIntegerLiteral\n    { begin: '\\\\b0[bB][01](_*[01])*[lL]?\\\\b' },\n  ],\n  relevance: 0\n};\n\n/*\nLanguage: Java\nAuthor: Vsevolod Solovyov <vsevolod.solovyov@gmail.com>\nCategory: common, enterprise\nWebsite: https://www.java.com/\n*/\n\n/**\n * Allows recursive regex expressions to a given depth\n *\n * ie: recurRegex(\"(abc~~~)\", /~~~/g, 2) becomes:\n * (abc(abc(abc)))\n *\n * @param {string} re\n * @param {RegExp} substitution (should be a g mode regex)\n * @param {number} depth\n * @returns {string}``\n */\nfunction recurRegex(re, substitution, depth) {\n  if (depth === -1) return \"\";\n\n  return re.replace(substitution, _ => {\n    return recurRegex(re, substitution, depth - 1);\n  });\n}\n\n/** @type LanguageFn */\nfunction java(hljs) {\n  const JAVA_IDENT_RE = '[\\u00C0-\\u02B8a-zA-Z_$][\\u00C0-\\u02B8a-zA-Z_$0-9]*';\n  const GENERIC_IDENT_RE = JAVA_IDENT_RE +\n    recurRegex('(?:<' + JAVA_IDENT_RE + '~~~(?:\\\\s*,\\\\s*' + JAVA_IDENT_RE + '~~~)*>)?', /~~~/g, 2);\n  const MAIN_KEYWORDS = [\n    'synchronized',\n    'abstract',\n    'private',\n    'var',\n    'static',\n    'if',\n    'const ',\n    'for',\n    'while',\n    'strictfp',\n    'finally',\n    'protected',\n    'import',\n    'native',\n    'final',\n    'void',\n    'enum',\n    'else',\n    'break',\n    'transient',\n    'catch',\n    'instanceof',\n    'volatile',\n    'case',\n    'assert',\n    'package',\n    'default',\n    'public',\n    'try',\n    'switch',\n    'continue',\n    'throws',\n    'protected',\n    'public',\n    'private',\n    'module',\n    'requires',\n    'exports',\n    'do'\n  ];\n\n  const BUILT_INS = [\n    'super',\n    'this'\n  ];\n\n  const LITERALS = [\n    'false',\n    'true',\n    'null'\n  ];\n\n  const TYPES = [\n    'char',\n    'boolean',\n    'long',\n    'float',\n    'int',\n    'byte',\n    'short',\n    'double'\n  ];\n\n  const KEYWORDS = {\n    keyword: MAIN_KEYWORDS,\n    literal: LITERALS,\n    type: TYPES,\n    built_in: BUILT_INS\n  };\n\n  const ANNOTATION = {\n    className: 'meta',\n    begin: '@' + JAVA_IDENT_RE,\n    contains: [\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        contains: [ \"self\" ] // allow nested () inside our annotation\n      }\n    ]\n  };\n  const PARAMS = {\n    className: 'params',\n    begin: /\\(/,\n    end: /\\)/,\n    keywords: KEYWORDS,\n    relevance: 0,\n    contains: [\n      hljs.C_BLOCK_COMMENT_MODE\n    ],\n    endsParent: true\n  };\n\n  return {\n    name: 'Java',\n    aliases: [ 'jsp' ],\n    keywords: KEYWORDS,\n    illegal: /<\\/|#/,\n    contains: [\n      hljs.COMMENT(\n        '/\\\\*\\\\*',\n        '\\\\*/',\n        {\n          relevance: 0,\n          contains: [\n            {\n              // eat up @'s in emails to prevent them to be recognized as doctags\n              begin: /\\w+@/,\n              relevance: 0\n            },\n            {\n              className: 'doctag',\n              begin: '@[A-Za-z]+'\n            }\n          ]\n        }\n      ),\n      // relevance boost\n      {\n        begin: /import java\\.[a-z]+\\./,\n        keywords: \"import\",\n        relevance: 2\n      },\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      {\n        match: [\n          /\\b(?:class|interface|enum|extends|implements|new)/,\n          /\\s+/,\n          JAVA_IDENT_RE\n        ],\n        className: {\n          1: \"keyword\",\n          3: \"title.class\"\n        }\n      },\n      {\n        begin: [\n          JAVA_IDENT_RE,\n          /\\s+/,\n          JAVA_IDENT_RE,\n          /\\s+/,\n          /=/\n        ],\n        className: {\n          1: \"type\",\n          3: \"variable\",\n          5: \"operator\"\n        }\n      },\n      {\n        begin: [\n          /record/,\n          /\\s+/,\n          JAVA_IDENT_RE\n        ],\n        className: {\n          1: \"keyword\",\n          3: \"title.class\"\n        },\n        contains: [\n          PARAMS,\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      {\n        // Expression keywords prevent 'keyword Name(...)' from being\n        // recognized as a function definition\n        beginKeywords: 'new throw return else',\n        relevance: 0\n      },\n      {\n        begin: [\n          '(?:' + GENERIC_IDENT_RE + '\\\\s+)',\n          hljs.UNDERSCORE_IDENT_RE,\n          /\\s*(?=\\()/\n        ],\n        className: {\n          2: \"title.function\"\n        },\n        keywords: KEYWORDS,\n        contains: [\n          {\n            className: 'params',\n            begin: /\\(/,\n            end: /\\)/,\n            keywords: KEYWORDS,\n            relevance: 0,\n            contains: [\n              ANNOTATION,\n              hljs.APOS_STRING_MODE,\n              hljs.QUOTE_STRING_MODE,\n              NUMERIC,\n              hljs.C_BLOCK_COMMENT_MODE\n            ]\n          },\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      NUMERIC,\n      ANNOTATION\n    ]\n  };\n}\n\nmodule.exports = java;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["variants","begin","aliases","className","contains","relevance","name","endsParent","built_in","keyword","keywords","beginKeywords","type","match","illegal","literal","end"]],"~:compiled-at",1638904261588,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$highlight_DOT_js$lib$languages$java.js\",\n\"lineCount\":6,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/highlight_DOT_js/lib/languages/java.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$highlight_DOT_js$lib$languages$java\\\"] = function(global,require,module,exports) {\\n// https://docs.oracle.com/javase/specs/jls/se15/html/jls-3.html#jls-3.10\\nvar decimalDigits = '[0-9](_*[0-9])*';\\nvar frac = `\\\\\\\\.(${decimalDigits})`;\\nvar hexDigits = '[0-9a-fA-F](_*[0-9a-fA-F])*';\\nvar NUMERIC = {\\n  className: 'number',\\n  variants: [\\n    // DecimalFloatingPointLiteral\\n    // including ExponentPart\\n    { begin: `(\\\\\\\\b(${decimalDigits})((${frac})|\\\\\\\\.)?|(${frac}))` +\\n      `[eE][+-]?(${decimalDigits})[fFdD]?\\\\\\\\b` },\\n    // excluding ExponentPart\\n    { begin: `\\\\\\\\b(${decimalDigits})((${frac})[fFdD]?\\\\\\\\b|\\\\\\\\.([fFdD]\\\\\\\\b)?)` },\\n    { begin: `(${frac})[fFdD]?\\\\\\\\b` },\\n    { begin: `\\\\\\\\b(${decimalDigits})[fFdD]\\\\\\\\b` },\\n\\n    // HexadecimalFloatingPointLiteral\\n    { begin: `\\\\\\\\b0[xX]((${hexDigits})\\\\\\\\.?|(${hexDigits})?\\\\\\\\.(${hexDigits}))` +\\n      `[pP][+-]?(${decimalDigits})[fFdD]?\\\\\\\\b` },\\n\\n    // DecimalIntegerLiteral\\n    { begin: '\\\\\\\\b(0|[1-9](_*[0-9])*)[lL]?\\\\\\\\b' },\\n\\n    // HexIntegerLiteral\\n    { begin: `\\\\\\\\b0[xX](${hexDigits})[lL]?\\\\\\\\b` },\\n\\n    // OctalIntegerLiteral\\n    { begin: '\\\\\\\\b0(_*[0-7])*[lL]?\\\\\\\\b' },\\n\\n    // BinaryIntegerLiteral\\n    { begin: '\\\\\\\\b0[bB][01](_*[01])*[lL]?\\\\\\\\b' },\\n  ],\\n  relevance: 0\\n};\\n\\n/*\\nLanguage: Java\\nAuthor: Vsevolod Solovyov <vsevolod.solovyov@gmail.com>\\nCategory: common, enterprise\\nWebsite: https://www.java.com/\\n*/\\n\\n/**\\n * Allows recursive regex expressions to a given depth\\n *\\n * ie: recurRegex(\\\"(abc~~~)\\\", /~~~/g, 2) becomes:\\n * (abc(abc(abc)))\\n *\\n * @param {string} re\\n * @param {RegExp} substitution (should be a g mode regex)\\n * @param {number} depth\\n * @returns {string}``\\n */\\nfunction recurRegex(re, substitution, depth) {\\n  if (depth === -1) return \\\"\\\";\\n\\n  return re.replace(substitution, _ => {\\n    return recurRegex(re, substitution, depth - 1);\\n  });\\n}\\n\\n/** @type LanguageFn */\\nfunction java(hljs) {\\n  const JAVA_IDENT_RE = '[\\\\u00C0-\\\\u02B8a-zA-Z_$][\\\\u00C0-\\\\u02B8a-zA-Z_$0-9]*';\\n  const GENERIC_IDENT_RE = JAVA_IDENT_RE +\\n    recurRegex('(?:<' + JAVA_IDENT_RE + '~~~(?:\\\\\\\\s*,\\\\\\\\s*' + JAVA_IDENT_RE + '~~~)*>)?', /~~~/g, 2);\\n  const MAIN_KEYWORDS = [\\n    'synchronized',\\n    'abstract',\\n    'private',\\n    'var',\\n    'static',\\n    'if',\\n    'const ',\\n    'for',\\n    'while',\\n    'strictfp',\\n    'finally',\\n    'protected',\\n    'import',\\n    'native',\\n    'final',\\n    'void',\\n    'enum',\\n    'else',\\n    'break',\\n    'transient',\\n    'catch',\\n    'instanceof',\\n    'volatile',\\n    'case',\\n    'assert',\\n    'package',\\n    'default',\\n    'public',\\n    'try',\\n    'switch',\\n    'continue',\\n    'throws',\\n    'protected',\\n    'public',\\n    'private',\\n    'module',\\n    'requires',\\n    'exports',\\n    'do'\\n  ];\\n\\n  const BUILT_INS = [\\n    'super',\\n    'this'\\n  ];\\n\\n  const LITERALS = [\\n    'false',\\n    'true',\\n    'null'\\n  ];\\n\\n  const TYPES = [\\n    'char',\\n    'boolean',\\n    'long',\\n    'float',\\n    'int',\\n    'byte',\\n    'short',\\n    'double'\\n  ];\\n\\n  const KEYWORDS = {\\n    keyword: MAIN_KEYWORDS,\\n    literal: LITERALS,\\n    type: TYPES,\\n    built_in: BUILT_INS\\n  };\\n\\n  const ANNOTATION = {\\n    className: 'meta',\\n    begin: '@' + JAVA_IDENT_RE,\\n    contains: [\\n      {\\n        begin: /\\\\(/,\\n        end: /\\\\)/,\\n        contains: [ \\\"self\\\" ] // allow nested () inside our annotation\\n      }\\n    ]\\n  };\\n  const PARAMS = {\\n    className: 'params',\\n    begin: /\\\\(/,\\n    end: /\\\\)/,\\n    keywords: KEYWORDS,\\n    relevance: 0,\\n    contains: [\\n      hljs.C_BLOCK_COMMENT_MODE\\n    ],\\n    endsParent: true\\n  };\\n\\n  return {\\n    name: 'Java',\\n    aliases: [ 'jsp' ],\\n    keywords: KEYWORDS,\\n    illegal: /<\\\\/|#/,\\n    contains: [\\n      hljs.COMMENT(\\n        '/\\\\\\\\*\\\\\\\\*',\\n        '\\\\\\\\*/',\\n        {\\n          relevance: 0,\\n          contains: [\\n            {\\n              // eat up @'s in emails to prevent them to be recognized as doctags\\n              begin: /\\\\w+@/,\\n              relevance: 0\\n            },\\n            {\\n              className: 'doctag',\\n              begin: '@[A-Za-z]+'\\n            }\\n          ]\\n        }\\n      ),\\n      // relevance boost\\n      {\\n        begin: /import java\\\\.[a-z]+\\\\./,\\n        keywords: \\\"import\\\",\\n        relevance: 2\\n      },\\n      hljs.C_LINE_COMMENT_MODE,\\n      hljs.C_BLOCK_COMMENT_MODE,\\n      hljs.APOS_STRING_MODE,\\n      hljs.QUOTE_STRING_MODE,\\n      {\\n        match: [\\n          /\\\\b(?:class|interface|enum|extends|implements|new)/,\\n          /\\\\s+/,\\n          JAVA_IDENT_RE\\n        ],\\n        className: {\\n          1: \\\"keyword\\\",\\n          3: \\\"title.class\\\"\\n        }\\n      },\\n      {\\n        begin: [\\n          JAVA_IDENT_RE,\\n          /\\\\s+/,\\n          JAVA_IDENT_RE,\\n          /\\\\s+/,\\n          /=/\\n        ],\\n        className: {\\n          1: \\\"type\\\",\\n          3: \\\"variable\\\",\\n          5: \\\"operator\\\"\\n        }\\n      },\\n      {\\n        begin: [\\n          /record/,\\n          /\\\\s+/,\\n          JAVA_IDENT_RE\\n        ],\\n        className: {\\n          1: \\\"keyword\\\",\\n          3: \\\"title.class\\\"\\n        },\\n        contains: [\\n          PARAMS,\\n          hljs.C_LINE_COMMENT_MODE,\\n          hljs.C_BLOCK_COMMENT_MODE\\n        ]\\n      },\\n      {\\n        // Expression keywords prevent 'keyword Name(...)' from being\\n        // recognized as a function definition\\n        beginKeywords: 'new throw return else',\\n        relevance: 0\\n      },\\n      {\\n        begin: [\\n          '(?:' + GENERIC_IDENT_RE + '\\\\\\\\s+)',\\n          hljs.UNDERSCORE_IDENT_RE,\\n          /\\\\s*(?=\\\\()/\\n        ],\\n        className: {\\n          2: \\\"title.function\\\"\\n        },\\n        keywords: KEYWORDS,\\n        contains: [\\n          {\\n            className: 'params',\\n            begin: /\\\\(/,\\n            end: /\\\\)/,\\n            keywords: KEYWORDS,\\n            relevance: 0,\\n            contains: [\\n              ANNOTATION,\\n              hljs.APOS_STRING_MODE,\\n              hljs.QUOTE_STRING_MODE,\\n              NUMERIC,\\n              hljs.C_BLOCK_COMMENT_MODE\\n            ]\\n          },\\n          hljs.C_LINE_COMMENT_MODE,\\n          hljs.C_BLOCK_COMMENT_MODE\\n        ]\\n      },\\n      NUMERIC,\\n      ANNOTATION\\n    ]\\n  };\\n}\\n\\nmodule.exports = java;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"recurRegex\",\"re\",\"substitution\",\"depth\",\"replace\",\"_\",\"NUMERIC\",\"className\",\"variants\",\"begin\",\"relevance\",\"java\",\"hljs\",\"GENERIC_IDENT_RE\",\"JAVA_IDENT_RE\",\"KEYWORDS\",\"keyword\",\"MAIN_KEYWORDS\",\"literal\",\"LITERALS\",\"type\",\"TYPES\",\"built_in\",\"BUILT_INS\",\"ANNOTATION\",\"contains\",\"end\",\"PARAMS\",\"keywords\",\"C_BLOCK_COMMENT_MODE\",\"endsParent\",\"name\",\"aliases\",\"illegal\",\"COMMENT\",\"C_LINE_COMMENT_MODE\",\"APOS_STRING_MODE\",\"QUOTE_STRING_MODE\",\"match\",\"beginKeywords\",\"UNDERSCORE_IDENT_RE\"]\n}\n"]