["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/highlight_DOT_js/lib/languages/xml.js"],"~:js","shadow$provide.module$node_modules$highlight_DOT_js$lib$languages$xml=function(global,require,module,exports){function concat(...args){return args.map(x=>x?\"string\"===typeof x?x:x.source:null).join(\"\")}function stripOptionsFromArgs(args){const opts=args[args.length-1];return\"object\"===typeof opts&&opts.constructor===Object?(args.splice(args.length-1,1),opts):{}}function either(...args){return\"(\"+(stripOptionsFromArgs(args).capture?\"\":\"?:\")+args.map(x=>x?\"string\"===typeof x?x:x.source:null).join(\"|\")+\n\")\"}module.exports=function(hljs){const TAG_NAME_RE=concat(/[A-Z_]/,concat(\"(?:\",/[A-Z0-9_.-]*:/,\")?\"),/[A-Z0-9_.-]*/),XML_ENTITIES={className:\"symbol\",begin:/&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;/},XML_META_KEYWORDS={begin:/\\s/,contains:[{className:\"keyword\",begin:/#?[a-z_][a-z1-9_-]+/,illegal:/\\n/}]},XML_META_PAR_KEYWORDS=hljs.inherit(XML_META_KEYWORDS,{begin:/\\(/,end:/\\)/}),APOS_META_STRING_MODE=hljs.inherit(hljs.APOS_STRING_MODE,{className:\"string\"}),QUOTE_META_STRING_MODE=hljs.inherit(hljs.QUOTE_STRING_MODE,\n{className:\"string\"}),TAG_INTERNALS={endsWithParent:!0,illegal:/</,relevance:0,contains:[{className:\"attr\",begin:/[A-Za-z0-9._:-]+/,relevance:0},{begin:/=\\s*/,relevance:0,contains:[{className:\"string\",endsParent:!0,variants:[{begin:/\"/,end:/\"/,contains:[XML_ENTITIES]},{begin:/'/,end:/'/,contains:[XML_ENTITIES]},{begin:/[^\\s\"'=<>`]+/}]}]}]};return{name:\"HTML, XML\",aliases:\"html xhtml rss atom xjb xsd xsl plist wsf svg\".split(\" \"),case_insensitive:!0,contains:[{className:\"meta\",begin:/<![a-z]/,end:/>/,\nrelevance:10,contains:[XML_META_KEYWORDS,QUOTE_META_STRING_MODE,APOS_META_STRING_MODE,XML_META_PAR_KEYWORDS,{begin:/\\[/,end:/\\]/,contains:[{className:\"meta\",begin:/<![a-z]/,end:/>/,contains:[XML_META_KEYWORDS,XML_META_PAR_KEYWORDS,QUOTE_META_STRING_MODE,APOS_META_STRING_MODE]}]}]},hljs.COMMENT(/\\x3c!--/,/--\\x3e/,{relevance:10}),{begin:/<!\\[CDATA\\[/,end:/\\]\\]>/,relevance:10},XML_ENTITIES,{className:\"meta\",begin:/<\\?xml/,end:/\\?>/,relevance:10},{className:\"tag\",begin:/<style(?=\\s|>)/,end:/>/,keywords:{name:\"style\"},\ncontains:[TAG_INTERNALS],starts:{end:/<\\/style>/,returnEnd:!0,subLanguage:[\"css\",\"xml\"]}},{className:\"tag\",begin:/<script(?=\\s|>)/,end:/>/,keywords:{name:\"script\"},contains:[TAG_INTERNALS],starts:{end:/<\\/script>/,returnEnd:!0,subLanguage:[\"javascript\",\"handlebars\",\"xml\"]}},{className:\"tag\",begin:/<>|<\\/>/},{className:\"tag\",begin:concat(/</,concat(\"(?\\x3d\",concat(TAG_NAME_RE,either(/\\/>/,/>/,/\\s/)),\")\")),end:/\\/?>/,contains:[{className:\"name\",begin:TAG_NAME_RE,relevance:0,starts:TAG_INTERNALS}]},\n{className:\"tag\",begin:concat(/<\\//,concat(\"(?\\x3d\",concat(TAG_NAME_RE,/>/),\")\")),contains:[{className:\"name\",begin:TAG_NAME_RE,relevance:0},{begin:/>/,relevance:0,endsParent:!0}]}]}}}","~:source","shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$xml\"] = function(global,require,module,exports) {\n/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction optional(re) {\n  return concat('(?:', re, ')?');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\nfunction stripOptionsFromArgs(args) {\n  const opts = args[args.length - 1];\n\n  if (typeof opts === 'object' && opts.constructor === Object) {\n    args.splice(args.length - 1, 1);\n    return opts;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] } args\n * @returns {string}\n */\nfunction either(...args) {\n  const opts = stripOptionsFromArgs(args);\n  const joined = '(' +\n    (opts.capture ? \"\" : \"?:\") +\n    args.map((x) => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n\n/*\nLanguage: HTML, XML\nWebsite: https://www.w3.org/XML/\nCategory: common, web\nAudit: 2020\n*/\n\n/** @type LanguageFn */\nfunction xml(hljs) {\n  // Element names can contain letters, digits, hyphens, underscores, and periods\n  const TAG_NAME_RE = concat(/[A-Z_]/, optional(/[A-Z0-9_.-]*:/), /[A-Z0-9_.-]*/);\n  const XML_IDENT_RE = /[A-Za-z0-9._:-]+/;\n  const XML_ENTITIES = {\n    className: 'symbol',\n    begin: /&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;/\n  };\n  const XML_META_KEYWORDS = {\n    begin: /\\s/,\n    contains: [\n      {\n        className: 'keyword',\n        begin: /#?[a-z_][a-z1-9_-]+/,\n        illegal: /\\n/\n      }\n    ]\n  };\n  const XML_META_PAR_KEYWORDS = hljs.inherit(XML_META_KEYWORDS, {\n    begin: /\\(/,\n    end: /\\)/\n  });\n  const APOS_META_STRING_MODE = hljs.inherit(hljs.APOS_STRING_MODE, {\n    className: 'string'\n  });\n  const QUOTE_META_STRING_MODE = hljs.inherit(hljs.QUOTE_STRING_MODE, {\n    className: 'string'\n  });\n  const TAG_INTERNALS = {\n    endsWithParent: true,\n    illegal: /</,\n    relevance: 0,\n    contains: [\n      {\n        className: 'attr',\n        begin: XML_IDENT_RE,\n        relevance: 0\n      },\n      {\n        begin: /=\\s*/,\n        relevance: 0,\n        contains: [\n          {\n            className: 'string',\n            endsParent: true,\n            variants: [\n              {\n                begin: /\"/,\n                end: /\"/,\n                contains: [ XML_ENTITIES ]\n              },\n              {\n                begin: /'/,\n                end: /'/,\n                contains: [ XML_ENTITIES ]\n              },\n              {\n                begin: /[^\\s\"'=<>`]+/\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  };\n  return {\n    name: 'HTML, XML',\n    aliases: [\n      'html',\n      'xhtml',\n      'rss',\n      'atom',\n      'xjb',\n      'xsd',\n      'xsl',\n      'plist',\n      'wsf',\n      'svg'\n    ],\n    case_insensitive: true,\n    contains: [\n      {\n        className: 'meta',\n        begin: /<![a-z]/,\n        end: />/,\n        relevance: 10,\n        contains: [\n          XML_META_KEYWORDS,\n          QUOTE_META_STRING_MODE,\n          APOS_META_STRING_MODE,\n          XML_META_PAR_KEYWORDS,\n          {\n            begin: /\\[/,\n            end: /\\]/,\n            contains: [\n              {\n                className: 'meta',\n                begin: /<![a-z]/,\n                end: />/,\n                contains: [\n                  XML_META_KEYWORDS,\n                  XML_META_PAR_KEYWORDS,\n                  QUOTE_META_STRING_MODE,\n                  APOS_META_STRING_MODE\n                ]\n              }\n            ]\n          }\n        ]\n      },\n      hljs.COMMENT(\n        /<!--/,\n        /-->/,\n        {\n          relevance: 10\n        }\n      ),\n      {\n        begin: /<!\\[CDATA\\[/,\n        end: /\\]\\]>/,\n        relevance: 10\n      },\n      XML_ENTITIES,\n      {\n        className: 'meta',\n        begin: /<\\?xml/,\n        end: /\\?>/,\n        relevance: 10\n      },\n      {\n        className: 'tag',\n        /*\n        The lookahead pattern (?=...) ensures that 'begin' only matches\n        '<style' as a single word, followed by a whitespace or an\n        ending bracket.\n        */\n        begin: /<style(?=\\s|>)/,\n        end: />/,\n        keywords: {\n          name: 'style'\n        },\n        contains: [ TAG_INTERNALS ],\n        starts: {\n          end: /<\\/style>/,\n          returnEnd: true,\n          subLanguage: [\n            'css',\n            'xml'\n          ]\n        }\n      },\n      {\n        className: 'tag',\n        // See the comment in the <style tag about the lookahead pattern\n        begin: /<script(?=\\s|>)/,\n        end: />/,\n        keywords: {\n          name: 'script'\n        },\n        contains: [ TAG_INTERNALS ],\n        starts: {\n          end: /<\\/script>/,\n          returnEnd: true,\n          subLanguage: [\n            'javascript',\n            'handlebars',\n            'xml'\n          ]\n        }\n      },\n      // we need this for now for jSX\n      {\n        className: 'tag',\n        begin: /<>|<\\/>/\n      },\n      // open tag\n      {\n        className: 'tag',\n        begin: concat(\n          /</,\n          lookahead(concat(\n            TAG_NAME_RE,\n            // <tag/>\n            // <tag>\n            // <tag ...\n            either(/\\/>/, />/, /\\s/)\n          ))\n        ),\n        end: /\\/?>/,\n        contains: [\n          {\n            className: 'name',\n            begin: TAG_NAME_RE,\n            relevance: 0,\n            starts: TAG_INTERNALS\n          }\n        ]\n      },\n      // close tag\n      {\n        className: 'tag',\n        begin: concat(\n          /<\\//,\n          lookahead(concat(\n            TAG_NAME_RE, />/\n          ))\n        ),\n        contains: [\n          {\n            className: 'name',\n            begin: TAG_NAME_RE,\n            relevance: 0\n          },\n          {\n            begin: />/,\n            relevance: 0,\n            endsParent: true\n          }\n        ]\n      }\n    ]\n  };\n}\n\nmodule.exports = xml;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["case_insensitive","variants","begin","aliases","returnEnd","subLanguage","className","contains","relevance","name","endsParent","keywords","starts","illegal","endsWithParent","end"]],"~:compiled-at",1638904261465,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$highlight_DOT_js$lib$languages$xml.js\",\n\"lineCount\":6,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/highlight_DOT_js/lib/languages/xml.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$highlight_DOT_js$lib$languages$xml\\\"] = function(global,require,module,exports) {\\n/**\\n * @param {string} value\\n * @returns {RegExp}\\n * */\\n\\n/**\\n * @param {RegExp | string } re\\n * @returns {string}\\n */\\nfunction source(re) {\\n  if (!re) return null;\\n  if (typeof re === \\\"string\\\") return re;\\n\\n  return re.source;\\n}\\n\\n/**\\n * @param {RegExp | string } re\\n * @returns {string}\\n */\\nfunction lookahead(re) {\\n  return concat('(?=', re, ')');\\n}\\n\\n/**\\n * @param {RegExp | string } re\\n * @returns {string}\\n */\\nfunction optional(re) {\\n  return concat('(?:', re, ')?');\\n}\\n\\n/**\\n * @param {...(RegExp | string) } args\\n * @returns {string}\\n */\\nfunction concat(...args) {\\n  const joined = args.map((x) => source(x)).join(\\\"\\\");\\n  return joined;\\n}\\n\\nfunction stripOptionsFromArgs(args) {\\n  const opts = args[args.length - 1];\\n\\n  if (typeof opts === 'object' && opts.constructor === Object) {\\n    args.splice(args.length - 1, 1);\\n    return opts;\\n  } else {\\n    return {};\\n  }\\n}\\n\\n/**\\n * Any of the passed expresssions may match\\n *\\n * Creates a huge this | this | that | that match\\n * @param {(RegExp | string)[] } args\\n * @returns {string}\\n */\\nfunction either(...args) {\\n  const opts = stripOptionsFromArgs(args);\\n  const joined = '(' +\\n    (opts.capture ? \\\"\\\" : \\\"?:\\\") +\\n    args.map((x) => source(x)).join(\\\"|\\\") + \\\")\\\";\\n  return joined;\\n}\\n\\n/*\\nLanguage: HTML, XML\\nWebsite: https://www.w3.org/XML/\\nCategory: common, web\\nAudit: 2020\\n*/\\n\\n/** @type LanguageFn */\\nfunction xml(hljs) {\\n  // Element names can contain letters, digits, hyphens, underscores, and periods\\n  const TAG_NAME_RE = concat(/[A-Z_]/, optional(/[A-Z0-9_.-]*:/), /[A-Z0-9_.-]*/);\\n  const XML_IDENT_RE = /[A-Za-z0-9._:-]+/;\\n  const XML_ENTITIES = {\\n    className: 'symbol',\\n    begin: /&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;/\\n  };\\n  const XML_META_KEYWORDS = {\\n    begin: /\\\\s/,\\n    contains: [\\n      {\\n        className: 'keyword',\\n        begin: /#?[a-z_][a-z1-9_-]+/,\\n        illegal: /\\\\n/\\n      }\\n    ]\\n  };\\n  const XML_META_PAR_KEYWORDS = hljs.inherit(XML_META_KEYWORDS, {\\n    begin: /\\\\(/,\\n    end: /\\\\)/\\n  });\\n  const APOS_META_STRING_MODE = hljs.inherit(hljs.APOS_STRING_MODE, {\\n    className: 'string'\\n  });\\n  const QUOTE_META_STRING_MODE = hljs.inherit(hljs.QUOTE_STRING_MODE, {\\n    className: 'string'\\n  });\\n  const TAG_INTERNALS = {\\n    endsWithParent: true,\\n    illegal: /</,\\n    relevance: 0,\\n    contains: [\\n      {\\n        className: 'attr',\\n        begin: XML_IDENT_RE,\\n        relevance: 0\\n      },\\n      {\\n        begin: /=\\\\s*/,\\n        relevance: 0,\\n        contains: [\\n          {\\n            className: 'string',\\n            endsParent: true,\\n            variants: [\\n              {\\n                begin: /\\\"/,\\n                end: /\\\"/,\\n                contains: [ XML_ENTITIES ]\\n              },\\n              {\\n                begin: /'/,\\n                end: /'/,\\n                contains: [ XML_ENTITIES ]\\n              },\\n              {\\n                begin: /[^\\\\s\\\"'=<>`]+/\\n              }\\n            ]\\n          }\\n        ]\\n      }\\n    ]\\n  };\\n  return {\\n    name: 'HTML, XML',\\n    aliases: [\\n      'html',\\n      'xhtml',\\n      'rss',\\n      'atom',\\n      'xjb',\\n      'xsd',\\n      'xsl',\\n      'plist',\\n      'wsf',\\n      'svg'\\n    ],\\n    case_insensitive: true,\\n    contains: [\\n      {\\n        className: 'meta',\\n        begin: /<![a-z]/,\\n        end: />/,\\n        relevance: 10,\\n        contains: [\\n          XML_META_KEYWORDS,\\n          QUOTE_META_STRING_MODE,\\n          APOS_META_STRING_MODE,\\n          XML_META_PAR_KEYWORDS,\\n          {\\n            begin: /\\\\[/,\\n            end: /\\\\]/,\\n            contains: [\\n              {\\n                className: 'meta',\\n                begin: /<![a-z]/,\\n                end: />/,\\n                contains: [\\n                  XML_META_KEYWORDS,\\n                  XML_META_PAR_KEYWORDS,\\n                  QUOTE_META_STRING_MODE,\\n                  APOS_META_STRING_MODE\\n                ]\\n              }\\n            ]\\n          }\\n        ]\\n      },\\n      hljs.COMMENT(\\n        /\\u003c!--/,\\n        /--\\u003e/,\\n        {\\n          relevance: 10\\n        }\\n      ),\\n      {\\n        begin: /<!\\\\[CDATA\\\\[/,\\n        end: /\\\\]\\\\]>/,\\n        relevance: 10\\n      },\\n      XML_ENTITIES,\\n      {\\n        className: 'meta',\\n        begin: /<\\\\?xml/,\\n        end: /\\\\?>/,\\n        relevance: 10\\n      },\\n      {\\n        className: 'tag',\\n        /*\\n        The lookahead pattern (?=...) ensures that 'begin' only matches\\n        '<style' as a single word, followed by a whitespace or an\\n        ending bracket.\\n        */\\n        begin: /<style(?=\\\\s|>)/,\\n        end: />/,\\n        keywords: {\\n          name: 'style'\\n        },\\n        contains: [ TAG_INTERNALS ],\\n        starts: {\\n          end: /<\\\\/style>/,\\n          returnEnd: true,\\n          subLanguage: [\\n            'css',\\n            'xml'\\n          ]\\n        }\\n      },\\n      {\\n        className: 'tag',\\n        // See the comment in the <style tag about the lookahead pattern\\n        begin: /<script(?=\\\\s|>)/,\\n        end: />/,\\n        keywords: {\\n          name: 'script'\\n        },\\n        contains: [ TAG_INTERNALS ],\\n        starts: {\\n          end: /<\\\\/script>/,\\n          returnEnd: true,\\n          subLanguage: [\\n            'javascript',\\n            'handlebars',\\n            'xml'\\n          ]\\n        }\\n      },\\n      // we need this for now for jSX\\n      {\\n        className: 'tag',\\n        begin: /<>|<\\\\/>/\\n      },\\n      // open tag\\n      {\\n        className: 'tag',\\n        begin: concat(\\n          /</,\\n          lookahead(concat(\\n            TAG_NAME_RE,\\n            // <tag/>\\n            // <tag>\\n            // <tag ...\\n            either(/\\\\/>/, />/, /\\\\s/)\\n          ))\\n        ),\\n        end: /\\\\/?>/,\\n        contains: [\\n          {\\n            className: 'name',\\n            begin: TAG_NAME_RE,\\n            relevance: 0,\\n            starts: TAG_INTERNALS\\n          }\\n        ]\\n      },\\n      // close tag\\n      {\\n        className: 'tag',\\n        begin: concat(\\n          /<\\\\//,\\n          lookahead(concat(\\n            TAG_NAME_RE, />/\\n          ))\\n        ),\\n        contains: [\\n          {\\n            className: 'name',\\n            begin: TAG_NAME_RE,\\n            relevance: 0\\n          },\\n          {\\n            begin: />/,\\n            relevance: 0,\\n            endsParent: true\\n          }\\n        ]\\n      }\\n    ]\\n  };\\n}\\n\\nmodule.exports = xml;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"concat\",\"args\",\"map\",\"x\",\"source\",\"join\",\"joined\",\"stripOptionsFromArgs\",\"opts\",\"length\",\"constructor\",\"Object\",\"splice\",\"either\",\"capture\",\"xml\",\"hljs\",\"TAG_NAME_RE\",\"re\",\"XML_ENTITIES\",\"className\",\"begin\",\"XML_META_KEYWORDS\",\"contains\",\"illegal\",\"XML_META_PAR_KEYWORDS\",\"inherit\",\"end\",\"APOS_META_STRING_MODE\",\"APOS_STRING_MODE\",\"QUOTE_META_STRING_MODE\",\"QUOTE_STRING_MODE\",\"TAG_INTERNALS\",\"endsWithParent\",\"relevance\",\"XML_IDENT_RE\",\"endsParent\",\"variants\",\"name\",\"aliases\",\"case_insensitive\",\"COMMENT\",\"keywords\",\"starts\",\"returnEnd\",\"subLanguage\"]\n}\n"]