["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/highlight_DOT_js/lib/languages/json.js"],"~:js","shadow$provide.module$node_modules$highlight_DOT_js$lib$languages$json=function(global,require,module,exports){module.exports=function(hljs){return{name:\"JSON\",contains:[{className:\"attr\",begin:/\"(\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,relevance:1.01},{match:/[{}[\\],:]/,className:\"punctuation\",relevance:0},hljs.QUOTE_STRING_MODE,{beginKeywords:\"true false null\"},hljs.C_NUMBER_MODE,hljs.C_LINE_COMMENT_MODE,hljs.C_BLOCK_COMMENT_MODE],illegal:\"\\\\S\"}}}","~:source","shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$json\"] = function(global,require,module,exports) {\n/*\nLanguage: JSON\nDescription: JSON (JavaScript Object Notation) is a lightweight data-interchange format.\nAuthor: Ivan Sagalaev <maniac@softwaremaniacs.org>\nWebsite: http://www.json.org\nCategory: common, protocols, web\n*/\n\nfunction json(hljs) {\n  const ATTRIBUTE = {\n    className: 'attr',\n    begin: /\"(\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n    relevance: 1.01\n  };\n  const PUNCTUATION = {\n    match: /[{}[\\],:]/,\n    className: \"punctuation\",\n    relevance: 0\n  };\n  // normally we would rely on `keywords` for this but using a mode here allows us\n  // to use the very tight `illegal: \\S` rule later to flag any other character\n  // as illegal indicating that despite looking like JSON we do not truly have\n  // JSON and thus improve false-positively greatly since JSON will try and claim\n  // all sorts of JSON looking stuff\n  const LITERALS = {\n    beginKeywords: [\n      \"true\",\n      \"false\",\n      \"null\"\n    ].join(\" \")\n  };\n\n  return {\n    name: 'JSON',\n    contains: [\n      ATTRIBUTE,\n      PUNCTUATION,\n      hljs.QUOTE_STRING_MODE,\n      LITERALS,\n      hljs.C_NUMBER_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ],\n    illegal: '\\\\S'\n  };\n}\n\nmodule.exports = json;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["begin","className","contains","relevance","name","beginKeywords","match","illegal"]],"~:compiled-at",1638904261592,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$highlight_DOT_js$lib$languages$json.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,uDAAA,CAA4E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAgDpHD,MAAOC,CAAAA,OAAP,CAvCAC,QAAa,CAACC,IAAD,CAAO,CAwBlB,MAAO,CACLC,KAAM,MADD,CAELC,SAAU,CAzBMC,CAChBC,UAAW,MADKD,CAEhBE,MAAO,6BAFSF,CAGhBG,UAAW,IAHKH,CAyBN,CApBQI,CAClBC,MAAO,WADWD,CAElBH,UAAW,aAFOG,CAGlBD,UAAW,CAHOC,CAoBR,CAGRP,IAAKS,CAAAA,iBAHG,CAVKC,CACfC,cAGE,iBAJaD,CAUL,CAKRV,IAAKY,CAAAA,aALG,CAMRZ,IAAKa,CAAAA,mBANG,CAORb,IAAKc,CAAAA,oBAPG,CAFL,CAWLC,QAAS,KAXJ,CAxBW,CATgG;\",\n\"sources\":[\"node_modules/highlight_DOT_js/lib/languages/json.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$highlight_DOT_js$lib$languages$json\\\"] = function(global,require,module,exports) {\\n/*\\nLanguage: JSON\\nDescription: JSON (JavaScript Object Notation) is a lightweight data-interchange format.\\nAuthor: Ivan Sagalaev <maniac@softwaremaniacs.org>\\nWebsite: http://www.json.org\\nCategory: common, protocols, web\\n*/\\n\\nfunction json(hljs) {\\n  const ATTRIBUTE = {\\n    className: 'attr',\\n    begin: /\\\"(\\\\\\\\.|[^\\\\\\\\\\\"\\\\r\\\\n])*\\\"(?=\\\\s*:)/,\\n    relevance: 1.01\\n  };\\n  const PUNCTUATION = {\\n    match: /[{}[\\\\],:]/,\\n    className: \\\"punctuation\\\",\\n    relevance: 0\\n  };\\n  // normally we would rely on `keywords` for this but using a mode here allows us\\n  // to use the very tight `illegal: \\\\S` rule later to flag any other character\\n  // as illegal indicating that despite looking like JSON we do not truly have\\n  // JSON and thus improve false-positively greatly since JSON will try and claim\\n  // all sorts of JSON looking stuff\\n  const LITERALS = {\\n    beginKeywords: [\\n      \\\"true\\\",\\n      \\\"false\\\",\\n      \\\"null\\\"\\n    ].join(\\\" \\\")\\n  };\\n\\n  return {\\n    name: 'JSON',\\n    contains: [\\n      ATTRIBUTE,\\n      PUNCTUATION,\\n      hljs.QUOTE_STRING_MODE,\\n      LITERALS,\\n      hljs.C_NUMBER_MODE,\\n      hljs.C_LINE_COMMENT_MODE,\\n      hljs.C_BLOCK_COMMENT_MODE\\n    ],\\n    illegal: '\\\\\\\\S'\\n  };\\n}\\n\\nmodule.exports = json;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"json\",\"hljs\",\"name\",\"contains\",\"ATTRIBUTE\",\"className\",\"begin\",\"relevance\",\"PUNCTUATION\",\"match\",\"QUOTE_STRING_MODE\",\"LITERALS\",\"beginKeywords\",\"C_NUMBER_MODE\",\"C_LINE_COMMENT_MODE\",\"C_BLOCK_COMMENT_MODE\",\"illegal\"]\n}\n"]