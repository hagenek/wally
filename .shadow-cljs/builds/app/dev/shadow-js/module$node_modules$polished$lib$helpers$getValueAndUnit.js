["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/polished/lib/helpers/getValueAndUnit.js"],"~:js","shadow$provide.module$node_modules$polished$lib$helpers$getValueAndUnit=function(global,require,module,exports){exports.__esModule=!0;exports.default=void 0;var cssRegex=/^([+-]?(?:\\d+|\\d*\\.\\d+))([a-z]*|%)$/;exports.default=function(value){if(\"string\"!==typeof value)return[value,\"\"];var matchedValue=value.match(cssRegex);return matchedValue?[parseFloat(value),matchedValue[2]]:[value,void 0]};module.exports=exports.default}","~:source","shadow$provide[\"module$node_modules$polished$lib$helpers$getValueAndUnit\"] = function(global,require,module,exports) {\n\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\nvar cssRegex = /^([+-]?(?:\\d+|\\d*\\.\\d+))([a-z]*|%)$/;\n/**\n * Returns a given CSS value and its unit as elements of an array.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   '--dimension': getValueAndUnit('100px')[0]\n *   '--unit': getValueAndUnit('100px')[1]\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   --dimension: ${getValueAndUnit('100px')[0]}\n *   --unit: ${getValueAndUnit('100px')[1]}\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   '--dimension': 100\n *   '--unit': 'px'\n * }\n */\n\nfunction getValueAndUnit(value) {\n  if (typeof value !== 'string') return [value, ''];\n  var matchedValue = value.match(cssRegex);\n  if (matchedValue) return [parseFloat(value), matchedValue[2]];\n  return [value, undefined];\n}\n\nvar _default = getValueAndUnit;\nexports.default = _default;\nmodule.exports = exports.default;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["__esModule","default"]],"~:compiled-at",1638904261821,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$polished$lib$helpers$getValueAndUnit.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,wDAAA,CAA6E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGrHA,OAAQC,CAAAA,UAAR,CAAqB,CAAA,CACrBD,QAAQE,CAAAA,OAAR,CAAkB,IAAK,EACvB,KAAIC,SAAW,qCAiCfH,QAAQE,CAAAA,OAAR,CARAE,QAAwB,CAACC,KAAD,CAAQ,CAC9B,GAAqB,QAArB,GAAI,MAAOA,MAAX,CAA+B,MAAO,CAACA,KAAD,CAAQ,EAAR,CACtC,KAAIC,aAAeD,KAAME,CAAAA,KAAN,CAAYJ,QAAZ,CACnB,OAAIG,aAAJ,CAAyB,CAACE,UAAA,CAAWH,KAAX,CAAD,CAAoBC,YAAA,CAAa,CAAb,CAApB,CAAzB,CACO,CAACD,KAAD,CAAQI,IAAAA,EAAR,CAJuB,CAShCV,OAAOC,CAAAA,OAAP,CAAiBA,OAAQE,CAAAA,OAvC4F;\",\n\"sources\":[\"node_modules/polished/lib/helpers/getValueAndUnit.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$polished$lib$helpers$getValueAndUnit\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nexports.__esModule = true;\\nexports.default = void 0;\\nvar cssRegex = /^([+-]?(?:\\\\d+|\\\\d*\\\\.\\\\d+))([a-z]*|%)$/;\\n/**\\n * Returns a given CSS value and its unit as elements of an array.\\n *\\n * @example\\n * // Styles as object usage\\n * const styles = {\\n *   '--dimension': getValueAndUnit('100px')[0]\\n *   '--unit': getValueAndUnit('100px')[1]\\n * }\\n *\\n * // styled-components usage\\n * const div = styled.div`\\n *   --dimension: ${getValueAndUnit('100px')[0]}\\n *   --unit: ${getValueAndUnit('100px')[1]}\\n * `\\n *\\n * // CSS in JS Output\\n *\\n * element {\\n *   '--dimension': 100\\n *   '--unit': 'px'\\n * }\\n */\\n\\nfunction getValueAndUnit(value) {\\n  if (typeof value !== 'string') return [value, ''];\\n  var matchedValue = value.match(cssRegex);\\n  if (matchedValue) return [parseFloat(value), matchedValue[2]];\\n  return [value, undefined];\\n}\\n\\nvar _default = getValueAndUnit;\\nexports.default = _default;\\nmodule.exports = exports.default;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"__esModule\",\"default\",\"cssRegex\",\"getValueAndUnit\",\"value\",\"matchedValue\",\"match\",\"parseFloat\",\"undefined\"]\n}\n"]