["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/highlight_DOT_js/lib/languages/clean.js"],"~:js","shadow$provide.module$node_modules$highlight_DOT_js$lib$languages$clean=function(global,require,module,exports){module.exports=function(hljs){return{name:\"Clean\",aliases:[\"icl\",\"dcl\"],keywords:{keyword:\"if let in with where case of class instance otherwise implementation definition system module from import qualified as special code inline foreign export ccall stdcall generic derive infix infixl infixr\".split(\" \"),built_in:\"Int Real Char Bool\",literal:\"True False\"},contains:[hljs.C_LINE_COMMENT_MODE,\nhljs.C_BLOCK_COMMENT_MODE,hljs.APOS_STRING_MODE,hljs.QUOTE_STRING_MODE,hljs.C_NUMBER_MODE,{begin:\"-\\x3e|\\x3c-[|:]?|#!?|\\x3e\\x3e\\x3d|\\\\{\\\\||\\\\|\\\\}|:\\x3d\\x3d|\\x3d:|\\x3c\\x3e\"}]}}}","~:source","shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$clean\"] = function(global,require,module,exports) {\n/*\nLanguage: Clean\nAuthor: Camil Staps <info@camilstaps.nl>\nCategory: functional\nWebsite: http://clean.cs.ru.nl\n*/\n\n/** @type LanguageFn */\nfunction clean(hljs) {\n  const KEYWORDS = [\n    \"if\",\n    \"let\",\n    \"in\",\n    \"with\",\n    \"where\",\n    \"case\",\n    \"of\",\n    \"class\",\n    \"instance\",\n    \"otherwise\",\n    \"implementation\",\n    \"definition\",\n    \"system\",\n    \"module\",\n    \"from\",\n    \"import\",\n    \"qualified\",\n    \"as\",\n    \"special\",\n    \"code\",\n    \"inline\",\n    \"foreign\",\n    \"export\",\n    \"ccall\",\n    \"stdcall\",\n    \"generic\",\n    \"derive\",\n    \"infix\",\n    \"infixl\",\n    \"infixr\"\n  ];\n  return {\n    name: 'Clean',\n    aliases: [\n      'icl',\n      'dcl'\n    ],\n    keywords: {\n      keyword: KEYWORDS,\n      built_in:\n        'Int Real Char Bool',\n      literal:\n        'True False'\n    },\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_NUMBER_MODE,\n      { // relevance booster\n        begin: '->|<-[|:]?|#!?|>>=|\\\\{\\\\||\\\\|\\\\}|:==|=:|<>'\n      }\n    ]\n  };\n}\n\nmodule.exports = clean;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["begin","aliases","contains","name","built_in","keyword","keywords","literal"]],"~:compiled-at",1638904261480,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$highlight_DOT_js$lib$languages$clean.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,wDAAA,CAA6E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAoErHD,MAAOC,CAAAA,OAAP,CA3DAC,QAAc,CAACC,IAAD,CAAO,CAiCnB,MAAO,CACLC,KAAM,OADD,CAELC,QAAS,CACP,KADO,CAEP,KAFO,CAFJ,CAMLC,SAAU,CACRC,QAvCaC,4MAAAA,CAAAA,KAAAA,CAAAA,GAAAA,CAsCL,CAERC,SACE,oBAHM,CAIRC,QACE,YALM,CANL,CAaLC,SAAU,CACRR,IAAKS,CAAAA,mBADG;AAERT,IAAKU,CAAAA,oBAFG,CAGRV,IAAKW,CAAAA,gBAHG,CAIRX,IAAKY,CAAAA,iBAJG,CAKRZ,IAAKa,CAAAA,aALG,CAMR,CACEC,MAAO,0EADT,CANQ,CAbL,CAjCY,CATgG;\",\n\"sources\":[\"node_modules/highlight_DOT_js/lib/languages/clean.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$highlight_DOT_js$lib$languages$clean\\\"] = function(global,require,module,exports) {\\n/*\\nLanguage: Clean\\nAuthor: Camil Staps <info@camilstaps.nl>\\nCategory: functional\\nWebsite: http://clean.cs.ru.nl\\n*/\\n\\n/** @type LanguageFn */\\nfunction clean(hljs) {\\n  const KEYWORDS = [\\n    \\\"if\\\",\\n    \\\"let\\\",\\n    \\\"in\\\",\\n    \\\"with\\\",\\n    \\\"where\\\",\\n    \\\"case\\\",\\n    \\\"of\\\",\\n    \\\"class\\\",\\n    \\\"instance\\\",\\n    \\\"otherwise\\\",\\n    \\\"implementation\\\",\\n    \\\"definition\\\",\\n    \\\"system\\\",\\n    \\\"module\\\",\\n    \\\"from\\\",\\n    \\\"import\\\",\\n    \\\"qualified\\\",\\n    \\\"as\\\",\\n    \\\"special\\\",\\n    \\\"code\\\",\\n    \\\"inline\\\",\\n    \\\"foreign\\\",\\n    \\\"export\\\",\\n    \\\"ccall\\\",\\n    \\\"stdcall\\\",\\n    \\\"generic\\\",\\n    \\\"derive\\\",\\n    \\\"infix\\\",\\n    \\\"infixl\\\",\\n    \\\"infixr\\\"\\n  ];\\n  return {\\n    name: 'Clean',\\n    aliases: [\\n      'icl',\\n      'dcl'\\n    ],\\n    keywords: {\\n      keyword: KEYWORDS,\\n      built_in:\\n        'Int Real Char Bool',\\n      literal:\\n        'True False'\\n    },\\n    contains: [\\n      hljs.C_LINE_COMMENT_MODE,\\n      hljs.C_BLOCK_COMMENT_MODE,\\n      hljs.APOS_STRING_MODE,\\n      hljs.QUOTE_STRING_MODE,\\n      hljs.C_NUMBER_MODE,\\n      { // relevance booster\\n        begin: '->|<-[|:]?|#!?|>>=|\\\\\\\\{\\\\\\\\||\\\\\\\\|\\\\\\\\}|:==|=:|<>'\\n      }\\n    ]\\n  };\\n}\\n\\nmodule.exports = clean;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"clean\",\"hljs\",\"name\",\"aliases\",\"keywords\",\"keyword\",\"KEYWORDS\",\"built_in\",\"literal\",\"contains\",\"C_LINE_COMMENT_MODE\",\"C_BLOCK_COMMENT_MODE\",\"APOS_STRING_MODE\",\"QUOTE_STRING_MODE\",\"C_NUMBER_MODE\",\"begin\"]\n}\n"]