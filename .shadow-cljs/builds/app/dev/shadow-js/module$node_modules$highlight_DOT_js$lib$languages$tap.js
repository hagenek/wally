["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/highlight_DOT_js/lib/languages/tap.js"],"~:js","shadow$provide.module$node_modules$highlight_DOT_js$lib$languages$tap=function(global,require,module,exports){module.exports=function(hljs){return{name:\"Test Anything Protocol\",case_insensitive:!0,contains:[hljs.HASH_COMMENT_MODE,{className:\"meta\",variants:[{begin:\"^TAP version (\\\\d+)$\"},{begin:\"^1\\\\.\\\\.(\\\\d+)$\"}]},{begin:/---$/,end:\"\\\\.\\\\.\\\\.$\",subLanguage:\"yaml\",relevance:0},{className:\"number\",begin:\" (\\\\d+) \"},{className:\"symbol\",variants:[{begin:\"^ok\"},{begin:\"^not ok\"}]}]}}}","~:source","shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$tap\"] = function(global,require,module,exports) {\n/*\nLanguage: Test Anything Protocol\nDescription: TAP, the Test Anything Protocol, is a simple text-based interface between testing modules in a test harness.\nRequires: yaml.js\nAuthor: Sergey Bronnikov <sergeyb@bronevichok.ru>\nWebsite: https://testanything.org\n*/\n\nfunction tap(hljs) {\n  return {\n    name: 'Test Anything Protocol',\n    case_insensitive: true,\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      // version of format and total amount of testcases\n      {\n        className: 'meta',\n        variants: [\n          {\n            begin: '^TAP version (\\\\d+)$'\n          },\n          {\n            begin: '^1\\\\.\\\\.(\\\\d+)$'\n          }\n        ]\n      },\n      // YAML block\n      {\n        begin: /---$/,\n        end: '\\\\.\\\\.\\\\.$',\n        subLanguage: 'yaml',\n        relevance: 0\n      },\n      // testcase number\n      {\n        className: 'number',\n        begin: ' (\\\\d+) '\n      },\n      // testcase status and description\n      {\n        className: 'symbol',\n        variants: [\n          {\n            begin: '^ok'\n          },\n          {\n            begin: '^not ok'\n          }\n        ]\n      }\n    ]\n  };\n}\n\nmodule.exports = tap;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["case_insensitive","variants","begin","subLanguage","className","contains","relevance","name","end"]],"~:compiled-at",1638904261757,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$highlight_DOT_js$lib$languages$tap.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,sDAAA,CAA2E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAuDnHD,MAAOC,CAAAA,OAAP,CA9CAC,QAAY,CAACC,IAAD,CAAO,CACjB,MAAO,CACLC,KAAM,wBADD,CAELC,iBAAkB,CAAA,CAFb,CAGLC,SAAU,CACRH,IAAKI,CAAAA,iBADG,CAGR,CACEC,UAAW,MADb,CAEEC,SAAU,CACR,CACEC,MAAO,sBADT,CADQ,CAIR,CACEA,MAAO,iBADT,CAJQ,CAFZ,CAHQ,CAeR,CACEA,MAAO,MADT,CAEEC,IAAK,YAFP,CAGEC,YAAa,MAHf,CAIEC,UAAW,CAJb,CAfQ,CAsBR,CACEL,UAAW,QADb,CAEEE,MAAO,UAFT,CAtBQ,CA2BR,CACEF,UAAW,QADb,CAEEC,SAAU,CACR,CACEC,MAAO,KADT,CADQ,CAIR,CACEA,MAAO,SADT,CAJQ,CAFZ,CA3BQ,CAHL,CADU,CATgG;\",\n\"sources\":[\"node_modules/highlight_DOT_js/lib/languages/tap.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$highlight_DOT_js$lib$languages$tap\\\"] = function(global,require,module,exports) {\\n/*\\nLanguage: Test Anything Protocol\\nDescription: TAP, the Test Anything Protocol, is a simple text-based interface between testing modules in a test harness.\\nRequires: yaml.js\\nAuthor: Sergey Bronnikov <sergeyb@bronevichok.ru>\\nWebsite: https://testanything.org\\n*/\\n\\nfunction tap(hljs) {\\n  return {\\n    name: 'Test Anything Protocol',\\n    case_insensitive: true,\\n    contains: [\\n      hljs.HASH_COMMENT_MODE,\\n      // version of format and total amount of testcases\\n      {\\n        className: 'meta',\\n        variants: [\\n          {\\n            begin: '^TAP version (\\\\\\\\d+)$'\\n          },\\n          {\\n            begin: '^1\\\\\\\\.\\\\\\\\.(\\\\\\\\d+)$'\\n          }\\n        ]\\n      },\\n      // YAML block\\n      {\\n        begin: /---$/,\\n        end: '\\\\\\\\.\\\\\\\\.\\\\\\\\.$',\\n        subLanguage: 'yaml',\\n        relevance: 0\\n      },\\n      // testcase number\\n      {\\n        className: 'number',\\n        begin: ' (\\\\\\\\d+) '\\n      },\\n      // testcase status and description\\n      {\\n        className: 'symbol',\\n        variants: [\\n          {\\n            begin: '^ok'\\n          },\\n          {\\n            begin: '^not ok'\\n          }\\n        ]\\n      }\\n    ]\\n  };\\n}\\n\\nmodule.exports = tap;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"tap\",\"hljs\",\"name\",\"case_insensitive\",\"contains\",\"HASH_COMMENT_MODE\",\"className\",\"variants\",\"begin\",\"end\",\"subLanguage\",\"relevance\"]\n}\n"]