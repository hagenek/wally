["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/highlight_DOT_js/lib/languages/awk.js"],"~:js","shadow$provide.module$node_modules$highlight_DOT_js$lib$languages$awk=function(global,require,module,exports){module.exports=function(hljs){return{name:\"Awk\",keywords:{keyword:\"BEGIN END if else while do for in break continue delete next nextfile function func exit|10\"},contains:[{className:\"variable\",variants:[{begin:/\\$[\\w\\d#@][\\w\\d_]*/},{begin:/\\$\\{(.*?)\\}/}]},{className:\"string\",contains:[hljs.BACKSLASH_ESCAPE],variants:[{begin:/(u|b)?r?'''/,end:/'''/,relevance:10},{begin:/(u|b)?r?\"\"\"/,end:/\"\"\"/,\nrelevance:10},{begin:/(u|r|ur)'/,end:/'/,relevance:10},{begin:/(u|r|ur)\"/,end:/\"/,relevance:10},{begin:/(b|br)'/,end:/'/},{begin:/(b|br)\"/,end:/\"/},hljs.APOS_STRING_MODE,hljs.QUOTE_STRING_MODE]},hljs.REGEXP_MODE,hljs.HASH_COMMENT_MODE,hljs.NUMBER_MODE]}}}","~:source","shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$awk\"] = function(global,require,module,exports) {\n/*\nLanguage: Awk\nAuthor: Matthew Daly <matthewbdaly@gmail.com>\nWebsite: https://www.gnu.org/software/gawk/manual/gawk.html\nDescription: language definition for Awk scripts\n*/\n\n/** @type LanguageFn */\nfunction awk(hljs) {\n  const VARIABLE = {\n    className: 'variable',\n    variants: [\n      {\n        begin: /\\$[\\w\\d#@][\\w\\d_]*/\n      },\n      {\n        begin: /\\$\\{(.*?)\\}/\n      }\n    ]\n  };\n  const KEYWORDS = 'BEGIN END if else while do for in break continue delete next nextfile function func exit|10';\n  const STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE],\n    variants: [\n      {\n        begin: /(u|b)?r?'''/,\n        end: /'''/,\n        relevance: 10\n      },\n      {\n        begin: /(u|b)?r?\"\"\"/,\n        end: /\"\"\"/,\n        relevance: 10\n      },\n      {\n        begin: /(u|r|ur)'/,\n        end: /'/,\n        relevance: 10\n      },\n      {\n        begin: /(u|r|ur)\"/,\n        end: /\"/,\n        relevance: 10\n      },\n      {\n        begin: /(b|br)'/,\n        end: /'/\n      },\n      {\n        begin: /(b|br)\"/,\n        end: /\"/\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE\n    ]\n  };\n  return {\n    name: 'Awk',\n    keywords: {\n      keyword: KEYWORDS\n    },\n    contains: [\n      VARIABLE,\n      STRING,\n      hljs.REGEXP_MODE,\n      hljs.HASH_COMMENT_MODE,\n      hljs.NUMBER_MODE\n    ]\n  };\n}\n\nmodule.exports = awk;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["variants","begin","className","contains","relevance","name","keyword","keywords","end"]],"~:compiled-at",1638904261472,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$highlight_DOT_js$lib$languages$awk.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,sDAAA,CAA2E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAyEnHD,MAAOC,CAAAA,OAAP,CAhEAC,QAAY,CAACC,IAAD,CAAO,CAiDjB,MAAO,CACLC,KAAM,KADD,CAELC,SAAU,CACRC,QAxCaC,6FAuCL,CAFL,CAKLC,SAAU,CArDKC,CACfC,UAAW,UADID,CAEfE,SAAU,CACR,CACEC,MAAO,oBADT,CADQ,CAIR,CACEA,MAAO,aADT,CAJQ,CAFKH,CAqDL,CAzCGI,CACbH,UAAW,QADEG,CAEbL,SAAU,CAACL,IAAKW,CAAAA,gBAAN,CAFGD,CAGbF,SAAU,CACR,CACEC,MAAO,aADT,CAEEG,IAAK,KAFP,CAGEC,UAAW,EAHb,CADQ,CAMR,CACEJ,MAAO,aADT,CAEEG,IAAK,KAFP;AAGEC,UAAW,EAHb,CANQ,CAWR,CACEJ,MAAO,WADT,CAEEG,IAAK,GAFP,CAGEC,UAAW,EAHb,CAXQ,CAgBR,CACEJ,MAAO,WADT,CAEEG,IAAK,GAFP,CAGEC,UAAW,EAHb,CAhBQ,CAqBR,CACEJ,MAAO,SADT,CAEEG,IAAK,GAFP,CArBQ,CAyBR,CACEH,MAAO,SADT,CAEEG,IAAK,GAFP,CAzBQ,CA6BRZ,IAAKc,CAAAA,gBA7BG,CA8BRd,IAAKe,CAAAA,iBA9BG,CAHGL,CAyCH,CAGRV,IAAKgB,CAAAA,WAHG,CAIRhB,IAAKiB,CAAAA,iBAJG,CAKRjB,IAAKkB,CAAAA,WALG,CALL,CAjDU,CATgG;\",\n\"sources\":[\"node_modules/highlight_DOT_js/lib/languages/awk.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$highlight_DOT_js$lib$languages$awk\\\"] = function(global,require,module,exports) {\\n/*\\nLanguage: Awk\\nAuthor: Matthew Daly <matthewbdaly@gmail.com>\\nWebsite: https://www.gnu.org/software/gawk/manual/gawk.html\\nDescription: language definition for Awk scripts\\n*/\\n\\n/** @type LanguageFn */\\nfunction awk(hljs) {\\n  const VARIABLE = {\\n    className: 'variable',\\n    variants: [\\n      {\\n        begin: /\\\\$[\\\\w\\\\d#@][\\\\w\\\\d_]*/\\n      },\\n      {\\n        begin: /\\\\$\\\\{(.*?)\\\\}/\\n      }\\n    ]\\n  };\\n  const KEYWORDS = 'BEGIN END if else while do for in break continue delete next nextfile function func exit|10';\\n  const STRING = {\\n    className: 'string',\\n    contains: [hljs.BACKSLASH_ESCAPE],\\n    variants: [\\n      {\\n        begin: /(u|b)?r?'''/,\\n        end: /'''/,\\n        relevance: 10\\n      },\\n      {\\n        begin: /(u|b)?r?\\\"\\\"\\\"/,\\n        end: /\\\"\\\"\\\"/,\\n        relevance: 10\\n      },\\n      {\\n        begin: /(u|r|ur)'/,\\n        end: /'/,\\n        relevance: 10\\n      },\\n      {\\n        begin: /(u|r|ur)\\\"/,\\n        end: /\\\"/,\\n        relevance: 10\\n      },\\n      {\\n        begin: /(b|br)'/,\\n        end: /'/\\n      },\\n      {\\n        begin: /(b|br)\\\"/,\\n        end: /\\\"/\\n      },\\n      hljs.APOS_STRING_MODE,\\n      hljs.QUOTE_STRING_MODE\\n    ]\\n  };\\n  return {\\n    name: 'Awk',\\n    keywords: {\\n      keyword: KEYWORDS\\n    },\\n    contains: [\\n      VARIABLE,\\n      STRING,\\n      hljs.REGEXP_MODE,\\n      hljs.HASH_COMMENT_MODE,\\n      hljs.NUMBER_MODE\\n    ]\\n  };\\n}\\n\\nmodule.exports = awk;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"awk\",\"hljs\",\"name\",\"keywords\",\"keyword\",\"KEYWORDS\",\"contains\",\"VARIABLE\",\"className\",\"variants\",\"begin\",\"STRING\",\"BACKSLASH_ESCAPE\",\"end\",\"relevance\",\"APOS_STRING_MODE\",\"QUOTE_STRING_MODE\",\"REGEXP_MODE\",\"HASH_COMMENT_MODE\",\"NUMBER_MODE\"]\n}\n"]