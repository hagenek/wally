["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/highlight_DOT_js/lib/languages/powershell.js"],"~:js","shadow$provide.module$node_modules$highlight_DOT_js$lib$languages$powershell=function(global,require,module,exports){module.exports=function(hljs){const KEYWORDS={$pattern:/-?[A-z\\.\\-]+\\b/,keyword:\"if else foreach return do while until elseif begin for trap data dynamicparam end break throw param continue finally in switch exit filter try process catch hidden static parameter\",built_in:\"ac asnp cat cd CFS chdir clc clear clhy cli clp cls clv cnsn compare copy cp cpi cpp curl cvpa dbp del diff dir dnsn ebp echo|0 epal epcsv epsn erase etsn exsn fc fhx fl ft fw gal gbp gc gcb gci gcm gcs gdr gerr ghy gi gin gjb gl gm gmo gp gps gpv group gsn gsnp gsv gtz gu gv gwmi h history icm iex ihy ii ipal ipcsv ipmo ipsn irm ise iwmi iwr kill lp ls man md measure mi mount move mp mv nal ndr ni nmo npssc nsn nv ogv oh popd ps pushd pwd r rbp rcjb rcsn rd rdr ren ri rjb rm rmdir rmo rni rnp rp rsn rsnp rujb rv rvpa rwmi sajb sal saps sasv sbp sc scb select set shcm si sl sleep sls sort sp spjb spps spsv start stz sujb sv swmi tee trcm type wget where wjb write\"};\nvar BACKTICK_ESCAPE={begin:\"`[\\\\s\\\\S]\",relevance:0};const VAR={className:\"variable\",variants:[{begin:/\\$\\B/},{className:\"keyword\",begin:/\\$this/},{begin:/\\$[\\w\\d][\\w\\d_:]*/}]},QUOTE_STRING={className:\"string\",variants:[{begin:/\"/,end:/\"/},{begin:/@\"/,end:/^\"@/}],contains:[BACKTICK_ESCAPE,VAR,{className:\"variable\",begin:/\\$[A-z]/,end:/[^A-z]/}]},APOS_STRING={className:\"string\",variants:[{begin:/'/,end:/'/},{begin:/@'/,end:/^'@/}]},PS_COMMENT=hljs.inherit(hljs.COMMENT(null,null),{variants:[{begin:/#/,\nend:/$/},{begin:/<#/,end:/#>/}],contains:[{className:\"doctag\",variants:[{begin:/\\.(synopsis|description|example|inputs|outputs|notes|link|component|role|functionality)/},{begin:/\\.(parameter|forwardhelptargetname|forwardhelpcategory|remotehelprunspace|externalhelp)\\s+\\S+/}]}]}),CMDLETS={className:\"built_in\",variants:[{begin:\"(\".concat(\"Add|Clear|Close|Copy|Enter|Exit|Find|Format|Get|Hide|Join|Lock|Move|New|Open|Optimize|Pop|Push|Redo|Remove|Rename|Reset|Resize|Search|Select|Set|Show|Skip|Split|Step|Switch|Undo|Unlock|Watch|Backup|Checkpoint|Compare|Compress|Convert|ConvertFrom|ConvertTo|Dismount|Edit|Expand|Export|Group|Import|Initialize|Limit|Merge|Mount|Out|Publish|Restore|Save|Sync|Unpublish|Update|Approve|Assert|Build|Complete|Confirm|Deny|Deploy|Disable|Enable|Install|Invoke|Register|Request|Restart|Resume|Start|Stop|Submit|Suspend|Uninstall|Unregister|Wait|Debug|Measure|Ping|Repair|Resolve|Test|Trace|Connect|Disconnect|Read|Receive|Send|Write|Block|Grant|Protect|Revoke|Unblock|Unprotect|Use|ForEach|Sort|Tee|Where\",\n\")+(-)[\\\\w\\\\d]+\")}]},PS_CLASS={className:\"class\",beginKeywords:\"class enum\",end:/\\s*[{]/,excludeEnd:!0,relevance:0,contains:[hljs.TITLE_MODE]},PS_FUNCTION={className:\"function\",begin:/function\\s+/,end:/\\s*\\{|$/,excludeEnd:!0,returnBegin:!0,relevance:0,contains:[{begin:\"function\",relevance:0,className:\"keyword\"},{className:\"title\",begin:/\\w[\\w\\d]*((-)[\\w\\d]+)*/,relevance:0},{begin:/\\(/,end:/\\)/,className:\"params\",relevance:0,contains:[VAR]}]},PS_USING={begin:/using\\s/,end:/$/,returnBegin:!0,contains:[QUOTE_STRING,\nAPOS_STRING,{className:\"keyword\",begin:/(using|assembly|command|module|namespace|type)/}]},PS_ARGUMENTS={variants:[{className:\"operator\",begin:\"(\".concat(\"-and|-as|-band|-bnot|-bor|-bxor|-casesensitive|-ccontains|-ceq|-cge|-cgt|-cle|-clike|-clt|-cmatch|-cne|-cnotcontains|-cnotlike|-cnotmatch|-contains|-creplace|-csplit|-eq|-exact|-f|-file|-ge|-gt|-icontains|-ieq|-ige|-igt|-ile|-ilike|-ilt|-imatch|-in|-ine|-inotcontains|-inotlike|-inotmatch|-ireplace|-is|-isnot|-isplit|-join|-le|-like|-lt|-match|-ne|-not|-notcontains|-notin|-notlike|-notmatch|-or|-regex|-replace|-shl|-shr|-split|-wildcard|-xor\",\n\")\\\\b\")},{className:\"literal\",begin:/(-){1,2}[\\w\\d-]+/,relevance:0}]},PS_METHODS={className:\"function\",begin:/\\[.*\\]\\s*[\\w]+[ ]??\\(/,end:/$/,returnBegin:!0,relevance:0,contains:[{className:\"keyword\",begin:\"(\".concat(KEYWORDS.keyword.toString().replace(/\\s/g,\"|\"),\")\\\\b\"),endsParent:!0,relevance:0},hljs.inherit(hljs.TITLE_MODE,{endsParent:!0})]};hljs=[PS_METHODS,PS_COMMENT,BACKTICK_ESCAPE,hljs.NUMBER_MODE,QUOTE_STRING,APOS_STRING,CMDLETS,VAR,{className:\"literal\",begin:/\\$(null|true|false)\\b/},{className:\"selector-tag\",\nbegin:/@\\B/,relevance:0}];BACKTICK_ESCAPE={begin:/\\[/,end:/\\]/,excludeBegin:!0,excludeEnd:!0,relevance:0,contains:[].concat(\"self\",hljs,{begin:\"(string|char|byte|int|long|bool|decimal|single|double|DateTime|xml|array|hashtable|void)\",className:\"built_in\",relevance:0},{className:\"type\",begin:/[\\.\\w\\d]+/,relevance:0})};PS_METHODS.contains.unshift(BACKTICK_ESCAPE);return{name:\"PowerShell\",aliases:[\"pwsh\",\"ps\",\"ps1\"],case_insensitive:!0,keywords:KEYWORDS,contains:hljs.concat(PS_CLASS,PS_FUNCTION,PS_USING,\nPS_ARGUMENTS,BACKTICK_ESCAPE)}}}","~:source","shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$powershell\"] = function(global,require,module,exports) {\n/*\nLanguage: PowerShell\nDescription: PowerShell is a task-based command-line shell and scripting language built on .NET.\nAuthor: David Mohundro <david@mohundro.com>\nContributors: Nicholas Blumhardt <nblumhardt@nblumhardt.com>, Victor Zhou <OiCMudkips@users.noreply.github.com>, Nicolas Le Gall <contact@nlegall.fr>\nWebsite: https://docs.microsoft.com/en-us/powershell/\n*/\n\nfunction powershell(hljs) {\n  const TYPES = [\n    \"string\",\n    \"char\",\n    \"byte\",\n    \"int\",\n    \"long\",\n    \"bool\",\n    \"decimal\",\n    \"single\",\n    \"double\",\n    \"DateTime\",\n    \"xml\",\n    \"array\",\n    \"hashtable\",\n    \"void\"\n  ];\n\n  // https://docs.microsoft.com/en-us/powershell/scripting/developer/cmdlet/approved-verbs-for-windows-powershell-commands\n  const VALID_VERBS =\n    'Add|Clear|Close|Copy|Enter|Exit|Find|Format|Get|Hide|Join|Lock|' +\n    'Move|New|Open|Optimize|Pop|Push|Redo|Remove|Rename|Reset|Resize|' +\n    'Search|Select|Set|Show|Skip|Split|Step|Switch|Undo|Unlock|' +\n    'Watch|Backup|Checkpoint|Compare|Compress|Convert|ConvertFrom|' +\n    'ConvertTo|Dismount|Edit|Expand|Export|Group|Import|Initialize|' +\n    'Limit|Merge|Mount|Out|Publish|Restore|Save|Sync|Unpublish|Update|' +\n    'Approve|Assert|Build|Complete|Confirm|Deny|Deploy|Disable|Enable|Install|Invoke|' +\n    'Register|Request|Restart|Resume|Start|Stop|Submit|Suspend|Uninstall|' +\n    'Unregister|Wait|Debug|Measure|Ping|Repair|Resolve|Test|Trace|Connect|' +\n    'Disconnect|Read|Receive|Send|Write|Block|Grant|Protect|Revoke|Unblock|' +\n    'Unprotect|Use|ForEach|Sort|Tee|Where';\n\n  const COMPARISON_OPERATORS =\n    '-and|-as|-band|-bnot|-bor|-bxor|-casesensitive|-ccontains|-ceq|-cge|-cgt|' +\n    '-cle|-clike|-clt|-cmatch|-cne|-cnotcontains|-cnotlike|-cnotmatch|-contains|' +\n    '-creplace|-csplit|-eq|-exact|-f|-file|-ge|-gt|-icontains|-ieq|-ige|-igt|' +\n    '-ile|-ilike|-ilt|-imatch|-in|-ine|-inotcontains|-inotlike|-inotmatch|' +\n    '-ireplace|-is|-isnot|-isplit|-join|-le|-like|-lt|-match|-ne|-not|' +\n    '-notcontains|-notin|-notlike|-notmatch|-or|-regex|-replace|-shl|-shr|' +\n    '-split|-wildcard|-xor';\n\n  const KEYWORDS = {\n    $pattern: /-?[A-z\\.\\-]+\\b/,\n    keyword:\n      'if else foreach return do while until elseif begin for trap data dynamicparam ' +\n      'end break throw param continue finally in switch exit filter try process catch ' +\n      'hidden static parameter',\n    // \"echo\" relevance has been set to 0 to avoid auto-detect conflicts with shell transcripts\n    built_in:\n      'ac asnp cat cd CFS chdir clc clear clhy cli clp cls clv cnsn compare copy cp ' +\n      'cpi cpp curl cvpa dbp del diff dir dnsn ebp echo|0 epal epcsv epsn erase etsn exsn fc fhx ' +\n      'fl ft fw gal gbp gc gcb gci gcm gcs gdr gerr ghy gi gin gjb gl gm gmo gp gps gpv group ' +\n      'gsn gsnp gsv gtz gu gv gwmi h history icm iex ihy ii ipal ipcsv ipmo ipsn irm ise iwmi ' +\n      'iwr kill lp ls man md measure mi mount move mp mv nal ndr ni nmo npssc nsn nv ogv oh ' +\n      'popd ps pushd pwd r rbp rcjb rcsn rd rdr ren ri rjb rm rmdir rmo rni rnp rp rsn rsnp ' +\n      'rujb rv rvpa rwmi sajb sal saps sasv sbp sc scb select set shcm si sl sleep sls sort sp ' +\n      'spjb spps spsv start stz sujb sv swmi tee trcm type wget where wjb write'\n    // TODO: 'validate[A-Z]+' can't work in keywords\n  };\n\n  const TITLE_NAME_RE = /\\w[\\w\\d]*((-)[\\w\\d]+)*/;\n\n  const BACKTICK_ESCAPE = {\n    begin: '`[\\\\s\\\\S]',\n    relevance: 0\n  };\n\n  const VAR = {\n    className: 'variable',\n    variants: [\n      {\n        begin: /\\$\\B/\n      },\n      {\n        className: 'keyword',\n        begin: /\\$this/\n      },\n      {\n        begin: /\\$[\\w\\d][\\w\\d_:]*/\n      }\n    ]\n  };\n\n  const LITERAL = {\n    className: 'literal',\n    begin: /\\$(null|true|false)\\b/\n  };\n\n  const QUOTE_STRING = {\n    className: \"string\",\n    variants: [\n      {\n        begin: /\"/,\n        end: /\"/\n      },\n      {\n        begin: /@\"/,\n        end: /^\"@/\n      }\n    ],\n    contains: [\n      BACKTICK_ESCAPE,\n      VAR,\n      {\n        className: 'variable',\n        begin: /\\$[A-z]/,\n        end: /[^A-z]/\n      }\n    ]\n  };\n\n  const APOS_STRING = {\n    className: 'string',\n    variants: [\n      {\n        begin: /'/,\n        end: /'/\n      },\n      {\n        begin: /@'/,\n        end: /^'@/\n      }\n    ]\n  };\n\n  const PS_HELPTAGS = {\n    className: \"doctag\",\n    variants: [\n      /* no paramater help tags */\n      {\n        begin: /\\.(synopsis|description|example|inputs|outputs|notes|link|component|role|functionality)/\n      },\n      /* one parameter help tags */\n      {\n        begin: /\\.(parameter|forwardhelptargetname|forwardhelpcategory|remotehelprunspace|externalhelp)\\s+\\S+/\n      }\n    ]\n  };\n\n  const PS_COMMENT = hljs.inherit(\n    hljs.COMMENT(null, null),\n    {\n      variants: [\n        /* single-line comment */\n        {\n          begin: /#/,\n          end: /$/\n        },\n        /* multi-line comment */\n        {\n          begin: /<#/,\n          end: /#>/\n        }\n      ],\n      contains: [ PS_HELPTAGS ]\n    }\n  );\n\n  const CMDLETS = {\n    className: 'built_in',\n    variants: [\n      {\n        begin: '('.concat(VALID_VERBS, ')+(-)[\\\\w\\\\d]+')\n      }\n    ]\n  };\n\n  const PS_CLASS = {\n    className: 'class',\n    beginKeywords: 'class enum',\n    end: /\\s*[{]/,\n    excludeEnd: true,\n    relevance: 0,\n    contains: [ hljs.TITLE_MODE ]\n  };\n\n  const PS_FUNCTION = {\n    className: 'function',\n    begin: /function\\s+/,\n    end: /\\s*\\{|$/,\n    excludeEnd: true,\n    returnBegin: true,\n    relevance: 0,\n    contains: [\n      {\n        begin: \"function\",\n        relevance: 0,\n        className: \"keyword\"\n      },\n      {\n        className: \"title\",\n        begin: TITLE_NAME_RE,\n        relevance: 0\n      },\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        className: \"params\",\n        relevance: 0,\n        contains: [ VAR ]\n      }\n      // CMDLETS\n    ]\n  };\n\n  // Using statment, plus type, plus assembly name.\n  const PS_USING = {\n    begin: /using\\s/,\n    end: /$/,\n    returnBegin: true,\n    contains: [\n      QUOTE_STRING,\n      APOS_STRING,\n      {\n        className: 'keyword',\n        begin: /(using|assembly|command|module|namespace|type)/\n      }\n    ]\n  };\n\n  // Comperison operators & function named parameters.\n  const PS_ARGUMENTS = {\n    variants: [\n      // PS literals are pretty verbose so it's a good idea to accent them a bit.\n      {\n        className: 'operator',\n        begin: '('.concat(COMPARISON_OPERATORS, ')\\\\b')\n      },\n      {\n        className: 'literal',\n        begin: /(-){1,2}[\\w\\d-]+/,\n        relevance: 0\n      }\n    ]\n  };\n\n  const HASH_SIGNS = {\n    className: 'selector-tag',\n    begin: /@\\B/,\n    relevance: 0\n  };\n\n  // It's a very general rule so I'll narrow it a bit with some strict boundaries\n  // to avoid any possible false-positive collisions!\n  const PS_METHODS = {\n    className: 'function',\n    begin: /\\[.*\\]\\s*[\\w]+[ ]??\\(/,\n    end: /$/,\n    returnBegin: true,\n    relevance: 0,\n    contains: [\n      {\n        className: 'keyword',\n        begin: '('.concat(\n          KEYWORDS.keyword.toString().replace(/\\s/g, '|'\n          ), ')\\\\b'),\n        endsParent: true,\n        relevance: 0\n      },\n      hljs.inherit(hljs.TITLE_MODE, {\n        endsParent: true\n      })\n    ]\n  };\n\n  const GENTLEMANS_SET = [\n    // STATIC_MEMBER,\n    PS_METHODS,\n    PS_COMMENT,\n    BACKTICK_ESCAPE,\n    hljs.NUMBER_MODE,\n    QUOTE_STRING,\n    APOS_STRING,\n    // PS_NEW_OBJECT_TYPE,\n    CMDLETS,\n    VAR,\n    LITERAL,\n    HASH_SIGNS\n  ];\n\n  const PS_TYPE = {\n    begin: /\\[/,\n    end: /\\]/,\n    excludeBegin: true,\n    excludeEnd: true,\n    relevance: 0,\n    contains: [].concat(\n      'self',\n      GENTLEMANS_SET,\n      {\n        begin: \"(\" + TYPES.join(\"|\") + \")\",\n        className: \"built_in\",\n        relevance: 0\n      },\n      {\n        className: 'type',\n        begin: /[\\.\\w\\d]+/,\n        relevance: 0\n      }\n    )\n  };\n\n  PS_METHODS.contains.unshift(PS_TYPE);\n\n  return {\n    name: 'PowerShell',\n    aliases: [\n      \"pwsh\",\n      \"ps\",\n      \"ps1\"\n    ],\n    case_insensitive: true,\n    keywords: KEYWORDS,\n    contains: GENTLEMANS_SET.concat(\n      PS_CLASS,\n      PS_FUNCTION,\n      PS_USING,\n      PS_ARGUMENTS,\n      PS_TYPE\n    )\n  };\n}\n\nmodule.exports = powershell;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["case_insensitive","variants","excludeBegin","begin","aliases","className","contains","$pattern","relevance","returnBegin","name","endsParent","built_in","keyword","keywords","beginKeywords","excludeEnd","end"]],"~:compiled-at",1638904261700,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$highlight_DOT_js$lib$languages$powershell.js\",\n\"lineCount\":8,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/highlight_DOT_js/lib/languages/powershell.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$highlight_DOT_js$lib$languages$powershell\\\"] = function(global,require,module,exports) {\\n/*\\nLanguage: PowerShell\\nDescription: PowerShell is a task-based command-line shell and scripting language built on .NET.\\nAuthor: David Mohundro <david@mohundro.com>\\nContributors: Nicholas Blumhardt <nblumhardt@nblumhardt.com>, Victor Zhou <OiCMudkips@users.noreply.github.com>, Nicolas Le Gall <contact@nlegall.fr>\\nWebsite: https://docs.microsoft.com/en-us/powershell/\\n*/\\n\\nfunction powershell(hljs) {\\n  const TYPES = [\\n    \\\"string\\\",\\n    \\\"char\\\",\\n    \\\"byte\\\",\\n    \\\"int\\\",\\n    \\\"long\\\",\\n    \\\"bool\\\",\\n    \\\"decimal\\\",\\n    \\\"single\\\",\\n    \\\"double\\\",\\n    \\\"DateTime\\\",\\n    \\\"xml\\\",\\n    \\\"array\\\",\\n    \\\"hashtable\\\",\\n    \\\"void\\\"\\n  ];\\n\\n  // https://docs.microsoft.com/en-us/powershell/scripting/developer/cmdlet/approved-verbs-for-windows-powershell-commands\\n  const VALID_VERBS =\\n    'Add|Clear|Close|Copy|Enter|Exit|Find|Format|Get|Hide|Join|Lock|' +\\n    'Move|New|Open|Optimize|Pop|Push|Redo|Remove|Rename|Reset|Resize|' +\\n    'Search|Select|Set|Show|Skip|Split|Step|Switch|Undo|Unlock|' +\\n    'Watch|Backup|Checkpoint|Compare|Compress|Convert|ConvertFrom|' +\\n    'ConvertTo|Dismount|Edit|Expand|Export|Group|Import|Initialize|' +\\n    'Limit|Merge|Mount|Out|Publish|Restore|Save|Sync|Unpublish|Update|' +\\n    'Approve|Assert|Build|Complete|Confirm|Deny|Deploy|Disable|Enable|Install|Invoke|' +\\n    'Register|Request|Restart|Resume|Start|Stop|Submit|Suspend|Uninstall|' +\\n    'Unregister|Wait|Debug|Measure|Ping|Repair|Resolve|Test|Trace|Connect|' +\\n    'Disconnect|Read|Receive|Send|Write|Block|Grant|Protect|Revoke|Unblock|' +\\n    'Unprotect|Use|ForEach|Sort|Tee|Where';\\n\\n  const COMPARISON_OPERATORS =\\n    '-and|-as|-band|-bnot|-bor|-bxor|-casesensitive|-ccontains|-ceq|-cge|-cgt|' +\\n    '-cle|-clike|-clt|-cmatch|-cne|-cnotcontains|-cnotlike|-cnotmatch|-contains|' +\\n    '-creplace|-csplit|-eq|-exact|-f|-file|-ge|-gt|-icontains|-ieq|-ige|-igt|' +\\n    '-ile|-ilike|-ilt|-imatch|-in|-ine|-inotcontains|-inotlike|-inotmatch|' +\\n    '-ireplace|-is|-isnot|-isplit|-join|-le|-like|-lt|-match|-ne|-not|' +\\n    '-notcontains|-notin|-notlike|-notmatch|-or|-regex|-replace|-shl|-shr|' +\\n    '-split|-wildcard|-xor';\\n\\n  const KEYWORDS = {\\n    $pattern: /-?[A-z\\\\.\\\\-]+\\\\b/,\\n    keyword:\\n      'if else foreach return do while until elseif begin for trap data dynamicparam ' +\\n      'end break throw param continue finally in switch exit filter try process catch ' +\\n      'hidden static parameter',\\n    // \\\"echo\\\" relevance has been set to 0 to avoid auto-detect conflicts with shell transcripts\\n    built_in:\\n      'ac asnp cat cd CFS chdir clc clear clhy cli clp cls clv cnsn compare copy cp ' +\\n      'cpi cpp curl cvpa dbp del diff dir dnsn ebp echo|0 epal epcsv epsn erase etsn exsn fc fhx ' +\\n      'fl ft fw gal gbp gc gcb gci gcm gcs gdr gerr ghy gi gin gjb gl gm gmo gp gps gpv group ' +\\n      'gsn gsnp gsv gtz gu gv gwmi h history icm iex ihy ii ipal ipcsv ipmo ipsn irm ise iwmi ' +\\n      'iwr kill lp ls man md measure mi mount move mp mv nal ndr ni nmo npssc nsn nv ogv oh ' +\\n      'popd ps pushd pwd r rbp rcjb rcsn rd rdr ren ri rjb rm rmdir rmo rni rnp rp rsn rsnp ' +\\n      'rujb rv rvpa rwmi sajb sal saps sasv sbp sc scb select set shcm si sl sleep sls sort sp ' +\\n      'spjb spps spsv start stz sujb sv swmi tee trcm type wget where wjb write'\\n    // TODO: 'validate[A-Z]+' can't work in keywords\\n  };\\n\\n  const TITLE_NAME_RE = /\\\\w[\\\\w\\\\d]*((-)[\\\\w\\\\d]+)*/;\\n\\n  const BACKTICK_ESCAPE = {\\n    begin: '`[\\\\\\\\s\\\\\\\\S]',\\n    relevance: 0\\n  };\\n\\n  const VAR = {\\n    className: 'variable',\\n    variants: [\\n      {\\n        begin: /\\\\$\\\\B/\\n      },\\n      {\\n        className: 'keyword',\\n        begin: /\\\\$this/\\n      },\\n      {\\n        begin: /\\\\$[\\\\w\\\\d][\\\\w\\\\d_:]*/\\n      }\\n    ]\\n  };\\n\\n  const LITERAL = {\\n    className: 'literal',\\n    begin: /\\\\$(null|true|false)\\\\b/\\n  };\\n\\n  const QUOTE_STRING = {\\n    className: \\\"string\\\",\\n    variants: [\\n      {\\n        begin: /\\\"/,\\n        end: /\\\"/\\n      },\\n      {\\n        begin: /@\\\"/,\\n        end: /^\\\"@/\\n      }\\n    ],\\n    contains: [\\n      BACKTICK_ESCAPE,\\n      VAR,\\n      {\\n        className: 'variable',\\n        begin: /\\\\$[A-z]/,\\n        end: /[^A-z]/\\n      }\\n    ]\\n  };\\n\\n  const APOS_STRING = {\\n    className: 'string',\\n    variants: [\\n      {\\n        begin: /'/,\\n        end: /'/\\n      },\\n      {\\n        begin: /@'/,\\n        end: /^'@/\\n      }\\n    ]\\n  };\\n\\n  const PS_HELPTAGS = {\\n    className: \\\"doctag\\\",\\n    variants: [\\n      /* no paramater help tags */\\n      {\\n        begin: /\\\\.(synopsis|description|example|inputs|outputs|notes|link|component|role|functionality)/\\n      },\\n      /* one parameter help tags */\\n      {\\n        begin: /\\\\.(parameter|forwardhelptargetname|forwardhelpcategory|remotehelprunspace|externalhelp)\\\\s+\\\\S+/\\n      }\\n    ]\\n  };\\n\\n  const PS_COMMENT = hljs.inherit(\\n    hljs.COMMENT(null, null),\\n    {\\n      variants: [\\n        /* single-line comment */\\n        {\\n          begin: /#/,\\n          end: /$/\\n        },\\n        /* multi-line comment */\\n        {\\n          begin: /<#/,\\n          end: /#>/\\n        }\\n      ],\\n      contains: [ PS_HELPTAGS ]\\n    }\\n  );\\n\\n  const CMDLETS = {\\n    className: 'built_in',\\n    variants: [\\n      {\\n        begin: '('.concat(VALID_VERBS, ')+(-)[\\\\\\\\w\\\\\\\\d]+')\\n      }\\n    ]\\n  };\\n\\n  const PS_CLASS = {\\n    className: 'class',\\n    beginKeywords: 'class enum',\\n    end: /\\\\s*[{]/,\\n    excludeEnd: true,\\n    relevance: 0,\\n    contains: [ hljs.TITLE_MODE ]\\n  };\\n\\n  const PS_FUNCTION = {\\n    className: 'function',\\n    begin: /function\\\\s+/,\\n    end: /\\\\s*\\\\{|$/,\\n    excludeEnd: true,\\n    returnBegin: true,\\n    relevance: 0,\\n    contains: [\\n      {\\n        begin: \\\"function\\\",\\n        relevance: 0,\\n        className: \\\"keyword\\\"\\n      },\\n      {\\n        className: \\\"title\\\",\\n        begin: TITLE_NAME_RE,\\n        relevance: 0\\n      },\\n      {\\n        begin: /\\\\(/,\\n        end: /\\\\)/,\\n        className: \\\"params\\\",\\n        relevance: 0,\\n        contains: [ VAR ]\\n      }\\n      // CMDLETS\\n    ]\\n  };\\n\\n  // Using statment, plus type, plus assembly name.\\n  const PS_USING = {\\n    begin: /using\\\\s/,\\n    end: /$/,\\n    returnBegin: true,\\n    contains: [\\n      QUOTE_STRING,\\n      APOS_STRING,\\n      {\\n        className: 'keyword',\\n        begin: /(using|assembly|command|module|namespace|type)/\\n      }\\n    ]\\n  };\\n\\n  // Comperison operators & function named parameters.\\n  const PS_ARGUMENTS = {\\n    variants: [\\n      // PS literals are pretty verbose so it's a good idea to accent them a bit.\\n      {\\n        className: 'operator',\\n        begin: '('.concat(COMPARISON_OPERATORS, ')\\\\\\\\b')\\n      },\\n      {\\n        className: 'literal',\\n        begin: /(-){1,2}[\\\\w\\\\d-]+/,\\n        relevance: 0\\n      }\\n    ]\\n  };\\n\\n  const HASH_SIGNS = {\\n    className: 'selector-tag',\\n    begin: /@\\\\B/,\\n    relevance: 0\\n  };\\n\\n  // It's a very general rule so I'll narrow it a bit with some strict boundaries\\n  // to avoid any possible false-positive collisions!\\n  const PS_METHODS = {\\n    className: 'function',\\n    begin: /\\\\[.*\\\\]\\\\s*[\\\\w]+[ ]??\\\\(/,\\n    end: /$/,\\n    returnBegin: true,\\n    relevance: 0,\\n    contains: [\\n      {\\n        className: 'keyword',\\n        begin: '('.concat(\\n          KEYWORDS.keyword.toString().replace(/\\\\s/g, '|'\\n          ), ')\\\\\\\\b'),\\n        endsParent: true,\\n        relevance: 0\\n      },\\n      hljs.inherit(hljs.TITLE_MODE, {\\n        endsParent: true\\n      })\\n    ]\\n  };\\n\\n  const GENTLEMANS_SET = [\\n    // STATIC_MEMBER,\\n    PS_METHODS,\\n    PS_COMMENT,\\n    BACKTICK_ESCAPE,\\n    hljs.NUMBER_MODE,\\n    QUOTE_STRING,\\n    APOS_STRING,\\n    // PS_NEW_OBJECT_TYPE,\\n    CMDLETS,\\n    VAR,\\n    LITERAL,\\n    HASH_SIGNS\\n  ];\\n\\n  const PS_TYPE = {\\n    begin: /\\\\[/,\\n    end: /\\\\]/,\\n    excludeBegin: true,\\n    excludeEnd: true,\\n    relevance: 0,\\n    contains: [].concat(\\n      'self',\\n      GENTLEMANS_SET,\\n      {\\n        begin: \\\"(\\\" + TYPES.join(\\\"|\\\") + \\\")\\\",\\n        className: \\\"built_in\\\",\\n        relevance: 0\\n      },\\n      {\\n        className: 'type',\\n        begin: /[\\\\.\\\\w\\\\d]+/,\\n        relevance: 0\\n      }\\n    )\\n  };\\n\\n  PS_METHODS.contains.unshift(PS_TYPE);\\n\\n  return {\\n    name: 'PowerShell',\\n    aliases: [\\n      \\\"pwsh\\\",\\n      \\\"ps\\\",\\n      \\\"ps1\\\"\\n    ],\\n    case_insensitive: true,\\n    keywords: KEYWORDS,\\n    contains: GENTLEMANS_SET.concat(\\n      PS_CLASS,\\n      PS_FUNCTION,\\n      PS_USING,\\n      PS_ARGUMENTS,\\n      PS_TYPE\\n    )\\n  };\\n}\\n\\nmodule.exports = powershell;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"powershell\",\"hljs\",\"KEYWORDS\",\"$pattern\",\"keyword\",\"built_in\",\"BACKTICK_ESCAPE\",\"begin\",\"relevance\",\"VAR\",\"className\",\"variants\",\"QUOTE_STRING\",\"end\",\"contains\",\"APOS_STRING\",\"PS_COMMENT\",\"inherit\",\"COMMENT\",\"PS_HELPTAGS\",\"CMDLETS\",\"concat\",\"VALID_VERBS\",\"PS_CLASS\",\"beginKeywords\",\"excludeEnd\",\"TITLE_MODE\",\"PS_FUNCTION\",\"returnBegin\",\"TITLE_NAME_RE\",\"PS_USING\",\"PS_ARGUMENTS\",\"COMPARISON_OPERATORS\",\"PS_METHODS\",\"toString\",\"replace\",\"endsParent\",\"GENTLEMANS_SET\",\"NUMBER_MODE\",\"LITERAL\",\"HASH_SIGNS\",\"PS_TYPE\",\"excludeBegin\",\"unshift\",\"name\",\"aliases\",\"case_insensitive\",\"keywords\"]\n}\n"]