["^ ","~:resource-id",["~:shadow.build.classpath/resource","goog/positioning/abstractposition.js"],"~:js","goog.provide(\"goog.positioning.AbstractPosition\");\ngoog.requireType(\"goog.math.Box\");\ngoog.requireType(\"goog.math.Size\");\ngoog.requireType(\"goog.positioning.Corner\");\ngoog.positioning.AbstractPosition = function() {\n};\ngoog.positioning.AbstractPosition.prototype.reposition = function(movableElement, corner, opt_margin, opt_preferredSize) {\n};\n","~:source","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Abstract base class for positioning implementations.\n */\n\ngoog.provide('goog.positioning.AbstractPosition');\n\ngoog.requireType('goog.math.Box');\ngoog.requireType('goog.math.Size');\ngoog.requireType('goog.positioning.Corner');\n\n\n\n/**\n * Abstract position object. Encapsulates position and overflow handling.\n *\n * @constructor\n */\ngoog.positioning.AbstractPosition = function() {};\n\n\n/**\n * Repositions the element. Abstract method, should be overloaded.\n *\n * @param {Element} movableElement Element to position.\n * @param {goog.positioning.Corner} corner Corner of the movable element that\n *     should be positioned adjacent to the anchored element.\n * @param {goog.math.Box=} opt_margin A margin specified in pixels.\n * @param {goog.math.Size=} opt_preferredSize PreferredSize of the\n *     movableElement.\n */\ngoog.positioning.AbstractPosition.prototype.reposition = function(\n    movableElement, corner, opt_margin, opt_preferredSize) {};\n","~:compiled-at",1638904245596,"~:source-map-json","{\n\"version\":3,\n\"file\":\"goog.positioning.abstractposition.js\",\n\"lineCount\":9,\n\"mappings\":\"AAUAA,IAAKC,CAAAA,OAAL,CAAa,mCAAb,CAAA;AAEAD,IAAKE,CAAAA,WAAL,CAAiB,eAAjB,CAAA;AACAF,IAAKE,CAAAA,WAAL,CAAiB,gBAAjB,CAAA;AACAF,IAAKE,CAAAA,WAAL,CAAiB,yBAAjB,CAAA;AASAF,IAAKG,CAAAA,WAAYC,CAAAA,gBAAjB,GAAoCC,QAAQ,EAAG;CAA/C;AAaAL,IAAKG,CAAAA,WAAYC,CAAAA,gBAAiBE,CAAAA,SAAUC,CAAAA,UAA5C,GAAyDC,QAAQ,CAC7DC,cAD6D,EAC7CC,MAD6C,EACrCC,UADqC,EACzBC,iBADyB,CACN;CAD3D;;\",\n\"sources\":[\"goog/positioning/abstractposition.js\"],\n\"sourcesContent\":[\"/**\\n * @license\\n * Copyright The Closure Library Authors.\\n * SPDX-License-Identifier: Apache-2.0\\n */\\n\\n/**\\n * @fileoverview Abstract base class for positioning implementations.\\n */\\n\\ngoog.provide('goog.positioning.AbstractPosition');\\n\\ngoog.requireType('goog.math.Box');\\ngoog.requireType('goog.math.Size');\\ngoog.requireType('goog.positioning.Corner');\\n\\n\\n\\n/**\\n * Abstract position object. Encapsulates position and overflow handling.\\n *\\n * @constructor\\n */\\ngoog.positioning.AbstractPosition = function() {};\\n\\n\\n/**\\n * Repositions the element. Abstract method, should be overloaded.\\n *\\n * @param {Element} movableElement Element to position.\\n * @param {goog.positioning.Corner} corner Corner of the movable element that\\n *     should be positioned adjacent to the anchored element.\\n * @param {goog.math.Box=} opt_margin A margin specified in pixels.\\n * @param {goog.math.Size=} opt_preferredSize PreferredSize of the\\n *     movableElement.\\n */\\ngoog.positioning.AbstractPosition.prototype.reposition = function(\\n    movableElement, corner, opt_margin, opt_preferredSize) {};\\n\"],\n\"names\":[\"goog\",\"provide\",\"requireType\",\"positioning\",\"AbstractPosition\",\"goog.positioning.AbstractPosition\",\"prototype\",\"reposition\",\"goog.positioning.AbstractPosition.prototype.reposition\",\"movableElement\",\"corner\",\"opt_margin\",\"opt_preferredSize\"]\n}\n"]