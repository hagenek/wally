{
"version":3,
"file":"module$node_modules$reakit_utils$lib$removeItemFromArray.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,wDAAA,CAA6E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGrHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CAEA,KAAIC,qBAAuBN,OAAA,CAAQ,2DAAR,CAuB3BE,QAAQK,CAAAA,mBAAR,CALAA,QAA4B,CAACC,KAAD,CAAQC,IAAR,CAAc,CACpCC,IAAAA,CAAQF,KAAMG,CAAAA,OAAN,CAAcF,IAAd,CACZ,OAAOH,qBAAqBA,CAAAA,oBAArB,CAA0CE,KAA1C,CAAiDE,IAAjD,CAFiC,CAvB2E;",
"sources":["node_modules/reakit-utils/lib/removeItemFromArray.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$reakit_utils$lib$removeItemFromArray\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar removeIndexFromArray = require('./removeIndexFromArray.js');\n\n/**\n * Immutably removes an item from an array.\n *\n * @example\n * import { removeItemFromArray } from \"reakit-utils\";\n *\n * removeItemFromArray([\"a\", \"b\", \"c\"], \"b\"); // [\"a\", \"c\"]\n *\n * // This only works by reference\n * const obj = {};\n * removeItemFromArray([obj], {}); // [obj]\n * removeItemFromArray([obj], obj); // []\n *\n * @returns {Array} A new array without the passed item.\n */\n\nfunction removeItemFromArray(array, item) {\n  var index = array.indexOf(item);\n  return removeIndexFromArray.removeIndexFromArray(array, index);\n}\n\nexports.removeItemFromArray = removeItemFromArray;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","removeIndexFromArray","removeItemFromArray","array","item","index","indexOf"]
}
