shadow$provide.module$node_modules$polished$lib$color$mix=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i],key;for(key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target};return _extends.apply(this,arguments)}exports.__esModule=!0;exports.default=void 0;global=
_interopRequireDefault(require("module$node_modules$polished$lib$internalHelpers$_curry"));var _rgba=_interopRequireDefault(require("module$node_modules$polished$lib$color$rgba")),_parseToRgb=_interopRequireDefault(require("module$node_modules$polished$lib$color$parseToRgb"));require=(0,global.default)(function(weight,color,otherColor){color=(0,_parseToRgb.default)(color);color=_extends({},color,{alpha:"number"===typeof color.alpha?color.alpha:1});otherColor=(0,_parseToRgb.default)(otherColor);otherColor=
_extends({},otherColor,{alpha:"number"===typeof otherColor.alpha?otherColor.alpha:1});var alphaDelta=color.alpha-otherColor.alpha,x=2*parseFloat(weight)-1;alphaDelta=((-1===x*alphaDelta?x:x+alphaDelta)/(1+x*alphaDelta)+1)/2;x=1-alphaDelta;weight={red:Math.floor(color.red*alphaDelta+otherColor.red*x),green:Math.floor(color.green*alphaDelta+otherColor.green*x),blue:Math.floor(color.blue*alphaDelta+otherColor.blue*x),alpha:color.alpha+(otherColor.alpha-color.alpha)*(parseFloat(weight)/1)};return(0,_rgba.default)(weight)});
exports.default=require;module.exports=exports.default}
//# sourceMappingURL=module$node_modules$polished$lib$color$mix.js.map
