{
"version":3,
"file":"module$node_modules$polished$lib$shorthands$animation.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,qDAAA,CAA0E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGlHA,OAAQC,CAAAA,UAAR,CAAqB,CAAA,CACrBD,QAAQE,CAAAA,OAAR,CAAkB,IAAK,EAmEvBF,QAAQE,CAAAA,OAAR,CA7BAC,QAAkB,EAAG,CACnB,IADmB,IACVC,KAAOC,SAAUC,CAAAA,MADP,CACeC,KAAWC,KAAJ,CAAUJ,IAAV,CADtB,CACuCK,KAAO,CAAjE,CAAoEA,IAApE,CAA2EL,IAA3E,CAAiFK,IAAA,EAAjF,CACEF,IAAA,CAAKE,IAAL,CAAA,CAAaJ,SAAA,CAAUI,IAAV,CAIf,KAAIC,UAAYF,KAAMG,CAAAA,OAAN,CAAcJ,IAAA,CAAK,CAAL,CAAd,CAEhB,IAAI,CAACG,SAAL,EAAgC,CAAhC,CAAkBH,IAAKD,CAAAA,MAAvB,CACE,KAAUM,MAAJ,CAAU,qHAAV,CAAN,CAcF,MAAO,CACLT,UAZSI,IAAKM,CAAAA,GAAL,CAAS,QAAS,CAACC,GAAD,CAAM,CACjC,GAAIJ,SAAJ;AAAiB,CAACF,KAAMG,CAAAA,OAAN,CAAcG,GAAd,CAAlB,EAAwC,CAACJ,SAAzC,EAAsDF,KAAMG,CAAAA,OAAN,CAAcG,GAAd,CAAtD,CACE,KAAUF,MAAJ,CAAU,4MAAV,CAAN,CAGF,GAAIJ,KAAMG,CAAAA,OAAN,CAAcG,GAAd,CAAJ,EAAuC,CAAvC,CAA0BA,GAAIR,CAAAA,MAA9B,CACE,KAAUM,MAAJ,CAAU,8HAAV,CAAN,CAGF,MAAOJ,MAAMG,CAAAA,OAAN,CAAcG,GAAd,CAAA,CAAqBA,GAAIC,CAAAA,IAAJ,CAAS,GAAT,CAArB,CAAqCD,GATX,CAAxB,CAURC,CAAAA,IAVQC,CAUH,IAVGA,CAWJ,CAvBY,CA8BrBjB;MAAOC,CAAAA,OAAP,CAAiBA,OAAQE,CAAAA,OAxEyF;",
"sources":["node_modules/polished/lib/shorthands/animation.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$polished$lib$shorthands$animation\"] = function(global,require,module,exports) {\n\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\n/**\n * Shorthand for easily setting the animation property. Allows either multiple arrays with animations\n * or a single animation spread over the arguments.\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...animation(['rotate', '1s', 'ease-in-out'], ['colorchange', '2s'])\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${animation(['rotate', '1s', 'ease-in-out'], ['colorchange', '2s'])}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'animation': 'rotate 1s ease-in-out, colorchange 2s'\n * }\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...animation('rotate', '1s', 'ease-in-out')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${animation('rotate', '1s', 'ease-in-out')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'animation': 'rotate 1s ease-in-out'\n * }\n */\nfunction animation() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  // Allow single or multiple animations passed\n  var multiMode = Array.isArray(args[0]);\n\n  if (!multiMode && args.length > 8) {\n    throw new Error('The animation shorthand only takes 8 arguments. See the specification for more information: http://mdn.io/animation');\n  }\n\n  var code = args.map(function (arg) {\n    if (multiMode && !Array.isArray(arg) || !multiMode && Array.isArray(arg)) {\n      throw new Error(\"To pass multiple animations please supply them in arrays, e.g. animation(['rotate', '2s'], ['move', '1s'])\\nTo pass a single animation please supply them in simple values, e.g. animation('rotate', '2s')\");\n    }\n\n    if (Array.isArray(arg) && arg.length > 8) {\n      throw new Error('The animation shorthand arrays can only have 8 elements. See the specification for more information: http://mdn.io/animation');\n    }\n\n    return Array.isArray(arg) ? arg.join(' ') : arg;\n  }).join(', ');\n  return {\n    animation: code\n  };\n}\n\nvar _default = animation;\nexports.default = _default;\nmodule.exports = exports.default;\n};"],
"names":["shadow$provide","global","require","module","exports","__esModule","default","animation","_len","arguments","length","args","Array","_key","multiMode","isArray","Error","map","arg","join","code"]
}
