{
"version":3,
"file":"module$node_modules$polished$lib$mixins$ellipsis.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,gDAAA,CAAqE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG7GA,OAAQC,CAAAA,UAAR,CAAqB,CAAA,CACrBD,QAAQE,CAAAA,OAAR,CAAkB,IAAK,EA2CvBF,QAAQE,CAAAA,OAAR,CAhBAC,QAAiB,CAACC,KAAD,CAAQ,CACT,IAAK,EAAnB,GAAIA,KAAJ,GACEA,KADF,CACU,MADV,CAIA,OAAO,CACLC,QAAS,cADJ,CAELC,SAAUF,KAFL,CAGLG,SAAU,QAHL,CAILC,aAAc,UAJT,CAKLC,WAAY,QALP,CAMLC,SAAU,QANL,CALgB,CAiBzBX,OAAOC,CAAAA,OAAP,CAAiBA,OAAQE,CAAAA,OAhDoF;",
"sources":["node_modules/polished/lib/mixins/ellipsis.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$polished$lib$mixins$ellipsis\"] = function(global,require,module,exports) {\n\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\n/**\n * CSS to represent truncated text with an ellipsis.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...ellipsis('250px')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${ellipsis('250px')}\n * `\n *\n * // CSS as JS Output\n *\n * div: {\n *   'display': 'inline-block',\n *   'maxWidth': '250px',\n *   'overflow': 'hidden',\n *   'textOverflow': 'ellipsis',\n *   'whiteSpace': 'nowrap',\n *   'wordWrap': 'normal'\n * }\n */\nfunction ellipsis(width) {\n  if (width === void 0) {\n    width = '100%';\n  }\n\n  return {\n    display: 'inline-block',\n    maxWidth: width,\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    wordWrap: 'normal'\n  };\n}\n\nvar _default = ellipsis;\nexports.default = _default;\nmodule.exports = exports.default;\n};"],
"names":["shadow$provide","global","require","module","exports","__esModule","default","ellipsis","width","display","maxWidth","overflow","textOverflow","whiteSpace","wordWrap"]
}
