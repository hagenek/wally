{
"version":3,
"file":"module$node_modules$reakit_warning$lib$useWarning.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,iDAAA,CAAsE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG9GC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CAEAL,QAAA,CAAQ,8CAAR,CACA,KAAIM,QAAUN,OAAA,CAAQ,gDAAR,CAAd,CACIO,MAAQP,OAAA,CAAQ,iCAAR,CADZ,CAEIQ,SAAWR,OAAA,CAAQ,+CAAR,CAyBfE,QAAQO,CAAAA,UAAR,CAdAA,QAAmB,CAACC,SAAD,CAAY,CAC7B,IAD6B,IACpBC,KAAOC,SAAUC,CAAAA,MADG,CACKC,SAAeC,KAAJ,CAAiB,CAAP,CAAAJ,IAAA,CAAWA,IAAX,CAAkB,CAAlB,CAAsB,CAAhC,CADhB;AACoDK,KAAO,CAAxF,CAA2FA,IAA3F,CAAkGL,IAAlG,CAAwGK,IAAA,EAAxG,CACEF,QAAA,CAASE,IAAT,CAAgB,CAAhB,CAAA,CAAqBJ,SAAA,CAAUI,IAAV,CAIrBT,MAAMU,CAAAA,SAAN,CAAgB,QAAS,EAAG,CACcX,OAAQA,CAAAA,OAAQY,CAAAA,KAAhB,CAAsB,IAAK,EAA3B,CAA8B,CAACR,SAAD,CAAYS,CAAAA,MAAZ,CAAmBL,QAASM,CAAAA,GAAT,CAAa,QAAS,CAACC,OAAD,CAAU,CACvH,MAhBCb,SAASA,CAAAA,QAAT,CAgBkBa,OAhBlB,CAgBM,EAhBoB,SAgBpB,EAAYA,QAAZ,CAAuBA,OAAQC,CAAAA,OAA/B,CAAyCD,OADuE,CAAhC,CAAnB,CAA9B,CADd,CAA5B,CAIG,CAACX,SAAD,CAJH,CAN2B,CAnB+E;",
"sources":["node_modules/reakit-warning/lib/useWarning.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$reakit_warning$lib$useWarning\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nrequire('reakit-utils/flatten');\nvar warning = require('./warning.js');\nvar React = require('react');\nvar isObject = require('reakit-utils/isObject');\n\nfunction isRefObject(ref) {\n  return isObject.isObject(ref) && \"current\" in ref;\n}\n/**\n * Logs `messages` to the console using `console.warn` based on a `condition`.\n * This should be used inside components.\n */\n\n\nfunction useWarning(condition) {\n  for (var _len = arguments.length, messages = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    messages[_key - 1] = arguments[_key];\n  }\n\n  if (process.env.NODE_ENV !== \"production\") {\n    React.useEffect(function () {\n      process.env.NODE_ENV !== \"production\" ? warning.warning.apply(void 0, [condition].concat(messages.map(function (message) {\n        return isRefObject(message) ? message.current : message;\n      }))) : void 0;\n    }, [condition]);\n  }\n}\n\nexports.useWarning = useWarning;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","warning","React","isObject","useWarning","condition","_len","arguments","length","messages","Array","_key","useEffect","apply","concat","map","message","current"]
}
