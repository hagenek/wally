{
"version":3,
"file":"module$node_modules$reakit_warning$lib$warning.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,8CAAA,CAAmE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG3GC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CAEA,KAAIC,QAAUN,OAAA,CAAQ,8CAAR,CAsCdE,QAAQK,CAAAA,OAAR,CA1BAA,QAAgB,CAACC,SAAD,CAAY,CAExB,IAAIC,QAEJ,IAAKD,SAAL,CAAA,CAEA,IALyC,IAKhCE,KAAOC,SAAUC,CAAAA,MALe,CAKPC,SAAeC,KAAJ,CAAiB,CAAP,CAAAJ,IAAA,CAAWA,IAAX,CAAkB,CAAlB,CAAsB,CAAhC,CALJ,CAKwCK,KAAO,CAAxF,CAA2FA,IAA3F,CAAkGL,IAAlG,CAAwGK,IAAA,EAAxG,CACEF,QAAA,CAASE,IAAT,CAAgB,CAAhB,CAAA,CAAqBJ,SAAA,CAAUI,IAAV,CAGnBC,KAAAA,CAAQV,OAAQA,CAAAA,OAAR,CAAgBO,QAASI,CAAAA,GAAT,CAAa,QAAS,CAACC,OAAD,CAAU,CAC1D,MAAO,CAACA,OAAD,CAAU,IAAV,CADmD,CAAhC,CAAhB,CAISC,EAApBV,QAAoBU,CAATC,OAASD,EAAAA,IAAKE,CAAAA,KAA1B,CAAgCZ,QAAhC;AAA0CO,IAAMM,CAAAA,KAAN,CAAY,CAAZ,CAAe,EAAf,CAA1C,CAKA,IAAI,CACF,KAAMC,MAAA,CAAMP,IAAMQ,CAAAA,IAAN,CAAW,EAAX,CAAN,CAAN,CADE,CAEF,MAAOC,CAAP,CAAU,EAjBZ,CAJwB,CAjB+E;",
"sources":["node_modules/reakit-warning/lib/warning.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$reakit_warning$lib$warning\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar flatten = require('reakit-utils/flatten');\n\n/**\n * Logs `messages` to the console using `console.warn` based on a `condition`.\n *\n * @example\n * import { warning } from \"reakit-warning\";\n *\n * warning(true, \"a\", \"b\"); // console.warn(\"a\", \"\\n\", \"b\")\n * warning(false, \"a\", \"b\"); // does nothing\n */\n\nfunction warning(condition) {\n  if (process.env.NODE_ENV !== \"production\") {\n    var _console;\n\n    if (!condition) return;\n\n    for (var _len = arguments.length, messages = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      messages[_key - 1] = arguments[_key];\n    }\n\n    var warns = flatten.flatten(messages.map(function (message) {\n      return [message, \"\\n\"];\n    })); // eslint-disable-next-line no-console\n\n    (_console = console).warn.apply(_console, warns.slice(0, -1)); // Throwing an error and catching it immediately to improve debugging\n    // A consumer can use 'pause on caught exceptions'\n    // https://github.com/facebook/react/issues/4216\n\n\n    try {\n      throw Error(warns.join(\"\"));\n    } catch (x) {// do nothing\n    }\n  }\n}\n\nexports.warning = warning;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","flatten","warning","condition","_console","_len","arguments","length","messages","Array","_key","warns","map","message","warn","console","apply","slice","Error","join","x"]
}
