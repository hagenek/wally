shadow$provide.module$node_modules$deepmerge$dist$umd=function(global$jscomp$0,require,module,exports){(function(global,factory){"object"===typeof exports&&"undefined"!==typeof module?module.exports=factory():"function"===typeof define&&define.amd?define(factory):(global=global||self,global.deepmerge=factory())})(this,function(){function cloneUnlessOtherwiseSpecified(value,options){return!1!==options.clone&&options.isMergeableObject(value)?deepmerge(Array.isArray(value)?[]:{},value,options):value}
function defaultArrayMerge(target,source,options){return target.concat(source).map(function(element){return cloneUnlessOtherwiseSpecified(element,options)})}function getEnumerableOwnPropertySymbols(target){return Object.getOwnPropertySymbols?Object.getOwnPropertySymbols(target).filter(function(symbol){return target.propertyIsEnumerable(symbol)}):[]}function getKeys(target){return Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))}function mergeObject(target,source,options){var destination=
{};options.isMergeableObject(target)&&getKeys(target).forEach(function(key){destination[key]=cloneUnlessOtherwiseSpecified(target[key],options)});getKeys(source).forEach(function(key){if(options.isMergeableObject(source[key])&&target[key]){if(options.customMerge){var JSCompiler_inline_result=options.customMerge(key);JSCompiler_inline_result="function"===typeof JSCompiler_inline_result?JSCompiler_inline_result:deepmerge}else JSCompiler_inline_result=deepmerge;destination[key]=JSCompiler_inline_result(target[key],
source[key],options)}else destination[key]=cloneUnlessOtherwiseSpecified(source[key],options)});return destination}function deepmerge(target,source,options){options=options||{};options.arrayMerge=options.arrayMerge||defaultArrayMerge;options.isMergeableObject=options.isMergeableObject||isMergeableObject;var sourceIsArray=Array.isArray(source),targetIsArray=Array.isArray(target);return sourceIsArray!==targetIsArray?cloneUnlessOtherwiseSpecified(source,options):sourceIsArray?options.arrayMerge(target,
source,options):mergeObject(target,source,options)}var isMergeableObject=function(value){var JSCompiler_temp;if(JSCompiler_temp=!!value&&"object"===typeof value)JSCompiler_temp=Object.prototype.toString.call(value),JSCompiler_temp=!("[object RegExp]"===JSCompiler_temp||"[object Date]"===JSCompiler_temp||value.$$typeof===REACT_ELEMENT_TYPE);return JSCompiler_temp},REACT_ELEMENT_TYPE="function"===typeof Symbol&&Symbol.for?Symbol.for("react.element"):60103;deepmerge.all=function(array,options){if(!Array.isArray(array))throw Error("first argument should be an array");
return array.reduce(function(prev,next){return deepmerge(prev,next,options)},{})};return deepmerge})}
//# sourceMappingURL=module$node_modules$deepmerge$dist$umd.js.map
