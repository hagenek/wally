{
"version":3,
"file":"module$node_modules$polished$lib$mixins$triangle.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/polished/lib/mixins/triangle.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$polished$lib$mixins$triangle\"] = function(global,require,module,exports) {\n\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _borderColor =\n/*#__PURE__*/\n_interopRequireDefault(\n/*#__PURE__*/\nrequire(\"../shorthands/borderColor\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nvar getBorderWidth = function getBorderWidth(pointingDirection, height, width) {\n  switch (pointingDirection) {\n    case 'top':\n      return \"0 \" + width[0] / 2 + width[1] + \" \" + height[0] + height[1] + \" \" + width[0] / 2 + width[1];\n\n    case 'left':\n      return \"\" + height[0] / 2 + height[1] + \" \" + width[0] + width[1] + \" \" + height[0] / 2 + height[1] + \" 0\";\n\n    case 'bottom':\n      return \"\" + height[0] + height[1] + \" \" + width[0] / 2 + width[1] + \" 0 \" + width[0] / 2 + width[1];\n\n    case 'right':\n      return \"\" + height[0] / 2 + height[1] + \" 0 \" + height[0] / 2 + height[1] + \" \" + width[0] + width[1];\n\n    default:\n      throw new Error(\"Passed invalid argument to triangle, please pass correct pointingDirection e.g. 'right'.\");\n  }\n}; // needed for border-color\n\n\nvar reverseDirection = ['bottom', 'left', 'top', 'right'];\nvar NUMBER_AND_FLOAT = /(\\d*\\.?\\d*)/;\n/**\n * CSS to represent triangle with any pointing direction with an optional background color. Accepts number or px values for height and width.\n *\n * @example\n * // Styles as object usage\n *\n * const styles = {\n *   ...triangle({ pointingDirection: 'right', width: '100px', height: '100px', foregroundColor: 'red' })\n * }\n *\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${triangle({ pointingDirection: 'right', width: '100px', height: '100px', foregroundColor: 'red' })}\n *\n *\n * // CSS as JS Output\n *\n * div: {\n *  'borderColor': 'transparent',\n *  'borderLeftColor': 'red !important',\n *  'borderStyle': 'solid',\n *  'borderWidth': '50px 0 50px 100px',\n *  'height': '0',\n *  'width': '0',\n * }\n */\n\nfunction triangle(_ref) {\n  var pointingDirection = _ref.pointingDirection,\n      height = _ref.height,\n      width = _ref.width,\n      foregroundColor = _ref.foregroundColor,\n      _ref$backgroundColor = _ref.backgroundColor,\n      backgroundColor = _ref$backgroundColor === void 0 ? 'transparent' : _ref$backgroundColor;\n  var widthAndUnit = [parseFloat(width), String(width).replace(NUMBER_AND_FLOAT, '') || 'px'];\n  var heightAndUnit = [parseFloat(height), String(height).replace(NUMBER_AND_FLOAT, '') || 'px'];\n\n  if (isNaN(heightAndUnit[0]) || isNaN(widthAndUnit[0])) {\n    throw new Error('Passed an invalid value to `height` or `width`. Please provide a pixel based unit');\n  }\n\n  var reverseDirectionIndex = reverseDirection.indexOf(pointingDirection);\n  return _extends({\n    width: '0',\n    height: '0',\n    borderWidth: getBorderWidth(pointingDirection, heightAndUnit, widthAndUnit),\n    borderStyle: 'solid'\n  }, _borderColor.default.apply(void 0, Array.from({\n    length: 4\n  }).map(function (_, index) {\n    return index === reverseDirectionIndex ? foregroundColor : backgroundColor;\n  })));\n}\n\nvar _default = triangle;\nexports.default = _default;\nmodule.exports = exports.default;\n};"],
"names":["shadow$provide","global","require","module","exports","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","__esModule","default","_borderColor","_interopRequireDefault","obj","reverseDirection","NUMBER_AND_FLOAT","triangle","_ref","pointingDirection","height","width","foregroundColor","_ref$backgroundColor","backgroundColor","widthAndUnit","parseFloat","String","replace","heightAndUnit","isNaN","Error","reverseDirectionIndex","indexOf","borderWidth","borderStyle","Array","from","map","_","index"]
}
