shadow$provide.module$node_modules$reakit$lib$Checkbox$Checkbox=function(global,require,module,exports){function useIndeterminateState(ref,options){React.useEffect(function(){var element=ref.current;element?"indeterminate"===options.state?element.indeterminate=!0:element.indeterminate&&(element.indeterminate=!1):reakitWarning.warning("indeterminate"===options.state,"Can't set indeterminate state because `ref` wasn't passed to component.","See https://reakit.io/docs/checkbox/#indeterminate-state")},
[options.state,ref])}Object.defineProperty(exports,"__esModule",{value:!0});var _rollupPluginBabelHelpers=require("module$node_modules$reakit$lib$_rollupPluginBabelHelpers_8f9a8751");global=require("module$node_modules$reakit_system$lib$createComponent");module=require("module$node_modules$reakit_system$lib$createHook");require("module$node_modules$reakit_utils$lib$shallowEqual");var React=require("module$node_modules$react$index"),useForkRef=require("module$node_modules$reakit_utils$lib$useForkRef");
require("module$node_modules$reakit_utils$lib$isButton");var reakitWarning=require("module$node_modules$reakit_warning$lib$index"),useLiveRef=require("module$node_modules$reakit_utils$lib$useLiveRef");require("module$node_modules$reakit_utils$lib$isSelfTarget");require("module$node_modules$reakit_utils$lib$useIsomorphicEffect");require("module$node_modules$reakit_utils$lib$hasFocusWithin");require("module$node_modules$reakit_utils$lib$isPortalEvent");require("module$node_modules$reakit_utils$lib$dom");
require("module$node_modules$reakit_utils$lib$tabbable");require("module$node_modules$reakit$lib$Role$Role");require("module$node_modules$reakit$lib$Tabbable$Tabbable");var Clickable_Clickable=require("module$node_modules$reakit$lib$Clickable$Clickable"),removeIndexFromArray=require("module$node_modules$reakit_utils$lib$removeIndexFromArray"),createEvent=require("module$node_modules$reakit_utils$lib$createEvent");require=[].concat(["state","setState"],["value","checked"]);require=module.createHook({name:"Checkbox",
compose:Clickable_Clickable.useClickable,keys:require,useOptions:function(_ref,_ref2){var value=_ref2.value,checked=_ref2.checked;_ref2=_ref.unstable_clickOnEnter;_ref2=void 0===_ref2?!1:_ref2;_ref=_rollupPluginBabelHelpers._objectWithoutPropertiesLoose(_ref,["unstable_clickOnEnter"]);var JSCompiler_temp_const=_rollupPluginBabelHelpers._objectSpread2;checked=_rollupPluginBabelHelpers._objectSpread2({checked},_ref);checked="undefined"!==typeof checked.checked?checked.checked:"undefined"===typeof checked.value?
!!checked.state:-1!==(Array.isArray(checked.state)?checked.state:[]).indexOf(checked.value);return JSCompiler_temp_const.call(_rollupPluginBabelHelpers,{unstable_clickOnEnter:_ref2,value,checked},_ref)},useProps:function(options,_ref3){var htmlRef=_ref3.ref,htmlOnChange=_ref3.onChange,htmlOnClick=_ref3.onClick;_ref3=_rollupPluginBabelHelpers._objectWithoutPropertiesLoose(_ref3,["ref","onChange","onClick"]);var ref=React.useRef(null),_React$useState=React.useState(!0),isNativeCheckbox=_React$useState[0],
setIsNativeCheckbox=_React$useState[1],onChangeRef=useLiveRef.useLiveRef(htmlOnChange),onClickRef=useLiveRef.useLiveRef(htmlOnClick);React.useEffect(function(){var element=ref.current;element?"INPUT"===element.tagName&&"checkbox"===element.type||setIsNativeCheckbox(!1):reakitWarning.warning(!0,"Can't determine whether the element is a native checkbox because `ref` wasn't passed to the component","See https://reakit.io/docs/checkbox")},[]);useIndeterminateState(ref,options);var onChange=React.useCallback(function(event){var element=
event.currentTarget;options.disabled?(event.stopPropagation(),event.preventDefault()):(onChangeRef.current&&(isNativeCheckbox||(element.checked=!element.checked),onChangeRef.current(event)),options.setState&&("undefined"===typeof options.value?options.setState(!options.checked):(event=Array.isArray(options.state)?options.state:[],element=event.indexOf(options.value),-1===element?options.setState([].concat(event,[options.value])):options.setState(removeIndexFromArray.removeIndexFromArray(event,element)))))},
[options.disabled,isNativeCheckbox,options.setState,options.value,options.checked,options.state]);htmlOnChange=React.useCallback(function(event){var _onClickRef$current;null===(_onClickRef$current=onClickRef.current)||void 0===_onClickRef$current?void 0:_onClickRef$current.call(onClickRef,event);event.defaultPrevented||isNativeCheckbox||(event=event.currentTarget,_onClickRef$current=createEvent.createEvent(event,"change"),Object.defineProperties(_onClickRef$current,{type:{value:"change"},target:{value:event},
currentTarget:{value:event}}),null===onChange||void 0===onChange?void 0:onChange(_onClickRef$current))},[isNativeCheckbox,onChange]);return _rollupPluginBabelHelpers._objectSpread2({ref:useForkRef.useForkRef(ref,htmlRef),role:isNativeCheckbox?void 0:"checkbox",type:isNativeCheckbox?"checkbox":void 0,value:isNativeCheckbox?options.value:void 0,checked:options.checked,"aria-checked":"indeterminate"===options.state?"mixed":options.checked,onChange,onClick:htmlOnChange},_ref3)}});global=global.createComponent({as:"input",
memo:!0,useHook:require});exports.Checkbox=global;exports.useCheckbox=require}
//# sourceMappingURL=module$node_modules$reakit$lib$Checkbox$Checkbox.js.map
