{
"version":3,
"file":"module$node_modules$polished$lib$internalHelpers$_hslToRgb.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,0DAAA,CAA+E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAUvHC,QAASA,aAAY,CAACC,GAAD,CAAMC,KAAN,CAAaC,IAAb,CAAmB,CACtC,MAJOC,KAAKC,CAAAA,KAAL,CAAmB,GAAnB,CAIWJ,GAJX,CAIP,CAAyB,GAAzB,CAJOG,IAAKC,CAAAA,KAAL,CAAmB,GAAnB,CAImCH,KAJnC,CAIP,CAAmD,GAAnD,CAJOE,IAAKC,CAAAA,KAAL,CAAmB,GAAnB,CAI6DF,IAJ7D,CAG+B,CAPxCJ,OAAQO,CAAAA,UAAR,CAAqB,CAAA,CACrBP,QAAQQ,CAAAA,OAAR,CAAkB,IAAK,EAwDvBR,QAAQQ,CAAAA,OAAR,CA9CAC,QAAiB,CAACC,GAAD,CAAMC,UAAN,CAAkBC,SAAlB,CAA6BC,OAA7B,CAAsC,CACrC,IAAK,EAArB,GAAIA,OAAJ,GACEA,OADF,CACYZ,YADZ,CAIA,IAAmB,CAAnB,GAAIU,UAAJ,CAEE,MAAOE,QAAA,CAAQD,SAAR,CAAmBA,SAAnB,CAA8BA,SAA9B,CAILE,IAAAA,CAAWJ,GAAXI,CAAiB,GAAjBA,CAAuB,EAC3B,KAAIC,QAAU,CAAVA,CAAcV,IAAKW,CAAAA,GAAL,CAAS,CAAT,CAAaJ,SAAb,CAAyB,CAAzB,CAAdG,EAA6CJ,UAAjD;AACIM,gBAAkBF,MAAlBE,EAA4B,CAA5BA,CAAgCZ,IAAKW,CAAAA,GAAL,CAASF,GAAT,CAAoB,CAApB,CAAwB,CAAxB,CAAhCG,CADJ,CAGId,MADAD,UACAC,CADM,CAFV,CAIIC,KAAO,CAEK,EAAhB,EAAIU,GAAJ,EAAgC,CAAhC,CAAqBA,GAArB,EACEZ,UACA,CADMa,MACN,CAAAZ,KAAA,CAAQc,eAFV,EAGuB,CAAhB,EAAIH,GAAJ,EAAgC,CAAhC,CAAqBA,GAArB,EACLZ,UACA,CADMe,eACN,CAAAd,KAAA,CAAQY,MAFH,EAGgB,CAAhB,EAAID,GAAJ,EAAgC,CAAhC,CAAqBA,GAArB,EACLX,KACA,CADQY,MACR,CAAAX,IAAA,CAAOa,eAFF,EAGgB,CAAhB,EAAIH,GAAJ,EAAgC,CAAhC,CAAqBA,GAArB,EACLX,KACA,CADQc,eACR,CAAAb,IAAA,CAAOW,MAFF,EAGgB,CAAhB,EAAID,GAAJ,EAAgC,CAAhC,CAAqBA,GAArB,EACLZ,UACA,CADMe,eACN,CAAAb,IAAA,CAAOW,MAFF,EAGgB,CAHhB,EAGID,GAHJ,EAGgC,CAHhC,CAGqBA,GAHrB,GAILZ,UACA,CADMa,MACN,CAAAX,IAAA,CAAOa,eALF,CAQqBL,UAAxBM,EAAoCH,MAApCG,CAA6C,CAIjD,OAAOL,QAAA,CAHQX,UAGR,CAHcgB,SAGd,CAFUf,KAEV,CAFkBe,SAElB,CADSd,IACT,CADgBc,SAChB,CA1C8C,CA+CvDnB,OAAOC,CAAAA,OAAP,CAAiBA,OAAQQ,CAAAA,OA7D8F;",
"sources":["node_modules/polished/lib/internalHelpers/_hslToRgb.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$polished$lib$internalHelpers$_hslToRgb\"] = function(global,require,module,exports) {\n\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nfunction colorToInt(color) {\n  return Math.round(color * 255);\n}\n\nfunction convertToInt(red, green, blue) {\n  return colorToInt(red) + \",\" + colorToInt(green) + \",\" + colorToInt(blue);\n}\n\nfunction hslToRgb(hue, saturation, lightness, convert) {\n  if (convert === void 0) {\n    convert = convertToInt;\n  }\n\n  if (saturation === 0) {\n    // achromatic\n    return convert(lightness, lightness, lightness);\n  } // formular from https://en.wikipedia.org/wiki/HSL_and_HSV\n\n\n  var huePrime = hue % 360 / 60;\n  var chroma = (1 - Math.abs(2 * lightness - 1)) * saturation;\n  var secondComponent = chroma * (1 - Math.abs(huePrime % 2 - 1));\n  var red = 0;\n  var green = 0;\n  var blue = 0;\n\n  if (huePrime >= 0 && huePrime < 1) {\n    red = chroma;\n    green = secondComponent;\n  } else if (huePrime >= 1 && huePrime < 2) {\n    red = secondComponent;\n    green = chroma;\n  } else if (huePrime >= 2 && huePrime < 3) {\n    green = chroma;\n    blue = secondComponent;\n  } else if (huePrime >= 3 && huePrime < 4) {\n    green = secondComponent;\n    blue = chroma;\n  } else if (huePrime >= 4 && huePrime < 5) {\n    red = secondComponent;\n    blue = chroma;\n  } else if (huePrime >= 5 && huePrime < 6) {\n    red = chroma;\n    blue = secondComponent;\n  }\n\n  var lightnessModification = lightness - chroma / 2;\n  var finalRed = red + lightnessModification;\n  var finalGreen = green + lightnessModification;\n  var finalBlue = blue + lightnessModification;\n  return convert(finalRed, finalGreen, finalBlue);\n}\n\nvar _default = hslToRgb;\nexports.default = _default;\nmodule.exports = exports.default;\n};"],
"names":["shadow$provide","global","require","module","exports","convertToInt","red","green","blue","Math","round","__esModule","default","hslToRgb","hue","saturation","lightness","convert","huePrime","chroma","abs","secondComponent","lightnessModification"]
}
