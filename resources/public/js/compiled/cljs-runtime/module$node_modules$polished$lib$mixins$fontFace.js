shadow$provide.module$node_modules$polished$lib$mixins$fontFace=function(global,require,module,exports){function generateFileReferences(fontFilePath,fileFormats){return fileFormats.map(function(format){return'url("'+fontFilePath+"."+format+'")'}).join(", ")}function generateLocalReferences(localFonts){return localFonts.map(function(font){return'local("'+font+'")'}).join(", ")}exports.__esModule=!0;exports.default=void 0;exports.default=function(_ref){var fontFamily=_ref.fontFamily,fontFilePath=_ref.fontFilePath,
fontStretch=_ref.fontStretch,fontStyle=_ref.fontStyle,fontVariant=_ref.fontVariant,fontWeight=_ref.fontWeight,_ref$fileFormats=_ref.fileFormats,fileFormats=void 0===_ref$fileFormats?["eot","woff2","woff","ttf","svg"]:_ref$fileFormats,localFonts=_ref.localFonts;_ref$fileFormats=_ref.unicodeRange;var fontDisplay=_ref.fontDisplay,fontVariationSettings=_ref.fontVariationSettings;_ref=_ref.fontFeatureSettings;if(!fontFamily)throw Error("fontFace expects a name of a font-family.");if(!fontFilePath&&!localFonts)throw Error("fontFace expects either the path to the font file(s) or a name of a local copy.");
if(localFonts&&!Array.isArray(localFonts))throw Error("fontFace expects localFonts to be an array.");if(!Array.isArray(fileFormats))throw Error("fontFace expects fileFormats to be an array.");var fontReferences=[];localFonts&&fontReferences.push(generateLocalReferences(localFonts));fontFilePath&&fontReferences.push(generateFileReferences(fontFilePath,fileFormats));fontFilePath=fontReferences.join(", ");return JSON.parse(JSON.stringify({"@font-face":{fontFamily,src:fontFilePath,unicodeRange:_ref$fileFormats,
fontStretch,fontStyle,fontVariant,fontWeight,fontDisplay,fontVariationSettings,fontFeatureSettings:_ref}}))};module.exports=exports.default}
//# sourceMappingURL=module$node_modules$polished$lib$mixins$fontFace.js.map
