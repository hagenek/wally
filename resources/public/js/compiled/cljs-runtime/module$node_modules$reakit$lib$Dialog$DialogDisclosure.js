shadow$provide.module$node_modules$reakit$lib$Dialog$DialogDisclosure=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});var _rollupPluginBabelHelpers=require("module$node_modules$reakit$lib$_rollupPluginBabelHelpers_8f9a8751");global=require("module$node_modules$reakit_system$lib$createComponent");module=require("module$node_modules$reakit_system$lib$createHook");require("module$node_modules$reakit_utils$lib$shallowEqual");var React=require("module$node_modules$react$index"),
useForkRef=require("module$node_modules$reakit_utils$lib$useForkRef");require("module$node_modules$reakit_utils$lib$isButton");var reakitWarning=require("module$node_modules$reakit_warning$lib$index"),useLiveRef=require("module$node_modules$reakit_utils$lib$useLiveRef");require("module$node_modules$reakit_utils$lib$isSelfTarget");var useIsomorphicEffect=require("module$node_modules$reakit_utils$lib$useIsomorphicEffect");require("module$node_modules$reakit_utils$lib$hasFocusWithin");require("module$node_modules$reakit_utils$lib$isPortalEvent");
require("module$node_modules$reakit_utils$lib$dom");require("module$node_modules$reakit_utils$lib$tabbable");require("module$node_modules$reakit$lib$Role$Role");require("module$node_modules$reakit$lib$Tabbable$Tabbable");require("module$node_modules$reakit$lib$Clickable$Clickable");require("module$node_modules$reakit$lib$Button$Button");require("module$node_modules$reakit$lib$__keys_f41a441b");var __keys=require("module$node_modules$reakit$lib$__keys_0c8e6398");require=require("module$node_modules$reakit$lib$Disclosure$Disclosure");
require=module.createHook({name:"DialogDisclosure",compose:require.useDisclosure,keys:__keys.DIALOG_DISCLOSURE_KEYS,useProps:function(options,_ref){var htmlRef=_ref.ref,htmlOnClick=_ref.onClick;_ref=_rollupPluginBabelHelpers._objectWithoutPropertiesLoose(_ref,["ref","onClick"]);var ref=React.useRef(null),onClickRef=useLiveRef.useLiveRef(htmlOnClick),_React$useState=React.useState(!1);htmlOnClick=_React$useState[0];var setExpanded=_React$useState[1],disclosureRef=options.unstable_disclosureRef;useIsomorphicEffect.useIsomorphicEffect(function(){var element=
ref.current;reakitWarning.warning(!element,"Can't determine whether the element is the current disclosure because `ref` wasn't passed to the component","See https://reakit.io/docs/dialog");disclosureRef&&!disclosureRef.current&&(disclosureRef.current=element);element=!(null!==disclosureRef&&void 0!==disclosureRef&&disclosureRef.current)||disclosureRef.current===element;setExpanded(!!options.visible&&element)},[options.visible,disclosureRef]);_React$useState=React.useCallback(function(event){var _onClickRef$current;
null===(_onClickRef$current=onClickRef.current)||void 0===_onClickRef$current?void 0:_onClickRef$current.call(onClickRef,event);!event.defaultPrevented&&disclosureRef&&(disclosureRef.current=event.currentTarget)},[disclosureRef]);return _rollupPluginBabelHelpers._objectSpread2({ref:useForkRef.useForkRef(ref,htmlRef),"aria-haspopup":"dialog","aria-expanded":htmlOnClick,onClick:_React$useState},_ref)}});global=global.createComponent({as:"button",memo:!0,useHook:require});exports.DialogDisclosure=global;
exports.useDialogDisclosure=require}
//# sourceMappingURL=module$node_modules$reakit$lib$Dialog$DialogDisclosure.js.map
