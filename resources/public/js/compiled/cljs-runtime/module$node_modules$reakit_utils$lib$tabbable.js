shadow$provide.module$node_modules$reakit_utils$lib$tabbable=function(global,require,module,exports){function isFocusable(element){var JSCompiler_temp;if(JSCompiler_temp=matches.matches(element,"input:not([type\x3d'hidden']):not([disabled]), select:not([disabled]), textarea:not([disabled]), a[href], button:not([disabled]), [tabindex], iframe, object, embed, area[href], audio[controls], video[controls], [contenteditable]:not([contenteditable\x3d'false'])"))JSCompiler_temp=0<element.offsetWidth||0<
element.offsetHeight||0<element.getClientRects().length;return JSCompiler_temp}function isTabbable(element){var JSCompiler_temp;if(JSCompiler_temp=isFocusable(element))JSCompiler_temp=!(0>parseInt(element.getAttribute("tabindex")||"0",10));return JSCompiler_temp}function getAllFocusableIn(container){var allFocusable=Array.from(container.querySelectorAll("input:not([type\x3d'hidden']):not([disabled]), select:not([disabled]), textarea:not([disabled]), a[href], button:not([disabled]), [tabindex], iframe, object, embed, area[href], audio[controls], video[controls], [contenteditable]:not([contenteditable\x3d'false'])"));
allFocusable.unshift(container);return allFocusable.filter(isFocusable)}function getAllTabbableIn(container,fallbackToFocusable){var allFocusable=Array.from(container.querySelectorAll("input:not([type\x3d'hidden']):not([disabled]), select:not([disabled]), textarea:not([disabled]), a[href], button:not([disabled]), [tabindex], iframe, object, embed, area[href], audio[controls], video[controls], [contenteditable]:not([contenteditable\x3d'false'])")),allTabbable=allFocusable.filter(isTabbable);isTabbable(container)&&
allTabbable.unshift(container);return!allTabbable.length&&fallbackToFocusable?allFocusable:allTabbable}Object.defineProperty(exports,"__esModule",{value:!0});require("module$node_modules$reakit_utils$lib$getDocument");var matches=require("module$node_modules$reakit_utils$lib$matches"),closest=require("module$node_modules$reakit_utils$lib$closest"),getActiveElement=require("module$node_modules$reakit_utils$lib$getActiveElement");exports.getAllFocusableIn=getAllFocusableIn;exports.getAllTabbableIn=
getAllTabbableIn;exports.getClosestFocusable=function(element){for(;element&&!isFocusable(element);)element=closest.closest(element,"input:not([type\x3d'hidden']):not([disabled]), select:not([disabled]), textarea:not([disabled]), a[href], button:not([disabled]), [tabindex], iframe, object, embed, area[href], audio[controls], video[controls], [contenteditable]:not([contenteditable\x3d'false'])");return element};exports.getFirstFocusableIn=function(container){return getAllFocusableIn(container)[0]||
null};exports.getFirstTabbableIn=function(container,fallbackToFocusable){return getAllTabbableIn(container,fallbackToFocusable)[0]||null};exports.getLastTabbableIn=function(container,fallbackToFocusable){container=getAllTabbableIn(container,fallbackToFocusable);return container[container.length-1]||null};exports.getNextTabbableIn=function(container,fallbackToFocusable){var activeElement=getActiveElement.getActiveElement(container);container=getAllFocusableIn(container);activeElement=container.indexOf(activeElement);
activeElement=container.slice(activeElement+1);return activeElement.find(isTabbable)||container.find(isTabbable)||(fallbackToFocusable?activeElement[0]:null)};exports.getPreviousTabbableIn=function(container,fallbackToFocusable){var activeElement=getActiveElement.getActiveElement(container);container=getAllFocusableIn(container).reverse();activeElement=container.indexOf(activeElement);activeElement=container.slice(activeElement+1);return activeElement.find(isTabbable)||container.find(isTabbable)||
(fallbackToFocusable?activeElement[0]:null)};exports.isFocusable=isFocusable;exports.isTabbable=isTabbable}
//# sourceMappingURL=module$node_modules$reakit_utils$lib$tabbable.js.map
