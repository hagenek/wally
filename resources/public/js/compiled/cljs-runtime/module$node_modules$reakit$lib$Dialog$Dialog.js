shadow$provide.module$node_modules$reakit$lib$Dialog$Dialog=function(global,require,module,exports){function useDisclosureRef(dialogRef,options){var ref=React.useRef(null),animating=!(!options.animated||!options.animating);React.useEffect(function(){if(!options.visible&&!animating){var onFocus=function(event){event=event.target;"focus"in event&&(ref.current=event,options.unstable_disclosureRef&&(options.unstable_disclosureRef.current=event))},document=getDocument.getDocument(dialogRef.current);document.addEventListener("focusin",
onFocus);return function(){return document.removeEventListener("focusin",onFocus)}}},[options.visible,animating,options.unstable_disclosureRef,dialogRef]);React.useEffect(function(){var _options$unstable_dis;if(options.visible&&!animating){var onMouseDown=function(event){var element=event.currentTarget;isButton.isButton(element)&&(event.preventDefault(),element.focus())},disclosure=(null===(_options$unstable_dis=options.unstable_disclosureRef)||void 0===_options$unstable_dis?void 0:_options$unstable_dis.current)||
ref.current;null===disclosure||void 0===disclosure?void 0:disclosure.addEventListener("mousedown",onMouseDown);return function(){return null===disclosure||void 0===disclosure?void 0:disclosure.removeEventListener("mousedown",onMouseDown)}}},[options.visible,animating,options.unstable_disclosureRef]);return options.unstable_disclosureRef||ref}function usePreventBodyScroll(targetRef,options){var shouldPrevent=!(!options.preventBodyScroll||!options.visible);React.useEffect(function(){var element=targetRef.current;
if(element&&shouldPrevent)return bodyScrollLock.disableBodyScroll(element,{reserveScrollBarGap:!0}),function(){return bodyScrollLock.enableBodyScroll(element)}},[targetRef,shouldPrevent])}function useFocusOnShow(dialogRef,nestedDialogs,options){var initialFocusRef=options.unstable_initialFocusRef,shouldFocus=options.visible&&options.unstable_autoFocusOnShow,animating=!(!options.animated||!options.animating);useUpdateEffect.useUpdateEffect(function(){var dialog=dialogRef.current;reakitWarning.warning(!!shouldFocus&&
!dialog,"[reakit/Dialog]","Can't set initial focus on dialog because `ref` wasn't passed to the dialog element.","See https://reakit.io/docs/dialog");if(shouldFocus&&dialog&&!animating&&!nestedDialogs.some(function(child){return child.current&&!child.current.hidden}))if(null!==initialFocusRef&&void 0!==initialFocusRef&&initialFocusRef.current)initialFocusRef.current.focus({preventScroll:!0});else{var tabbable$1=tabbable.getFirstTabbableIn(dialog,!0),isActive=function(){return hasFocusWithin.hasFocusWithin(dialog)};
tabbable$1?ensureFocus.ensureFocus(tabbable$1,{preventScroll:!0,isActive}):(ensureFocus.ensureFocus(dialog,{preventScroll:!0,isActive}),reakitWarning.warning(void 0===dialog.tabIndex||0>dialog.tabIndex,"It's recommended to have at least one tabbable element inside dialog. The dialog element has been automatically focused.","If this is the intended behavior, pass `tabIndex\x3d{0}` to the dialog element to disable this warning.","See https://reakit.io/docs/dialog/#initial-focus",dialog))}},[dialogRef,
shouldFocus,animating,nestedDialogs,initialFocusRef])}function usePortalRef(dialogRef,options){var portalRef=React.useRef(null);React.useEffect(function(){var dialog=dialogRef.current;dialog&&options.visible&&(portalRef.current=closest.closest(dialog,Portal_Portal.Portal.__selector))},[dialogRef,options.visible]);return portalRef}function useFocusTrap(dialogRef,visibleModals,options){var portalRef=usePortalRef(dialogRef,options),shouldTrap=options.visible&&options.modal,beforeElement=React.useRef(null),
afterElement=React.useRef(null);React.useEffect(function(){if(shouldTrap){var portal=portalRef.current;if(portal){if(!beforeElement.current){var document=getDocument.getDocument(portal);beforeElement.current=document.createElement("div");beforeElement.current.className="__reakit-focus-trap";beforeElement.current.tabIndex=0;beforeElement.current.style.position="fixed";beforeElement.current.setAttribute("aria-hidden","true")}afterElement.current||(afterElement.current=beforeElement.current.cloneNode());
portal.insertAdjacentElement("beforebegin",beforeElement.current);portal.insertAdjacentElement("afterend",afterElement.current);return function(){if(beforeElement.current){var element=beforeElement.current;null!=element.parentNode&&element.parentNode.removeChild(element)}afterElement.current&&(element=afterElement.current,null!=element.parentNode&&element.parentNode.removeChild(element))}}reakitWarning.warning(!0,"Can't trap focus within modal dialog because either `ref` wasn't passed to component or the component wasn't rendered within a portal",
"See https://reakit.io/docs/dialog")}},[portalRef,shouldTrap]);React.useEffect(function(){var before=beforeElement.current,after=afterElement.current;if(shouldTrap&&before&&after){var handleFocus=function(event){var dialog=dialogRef.current;dialog&&!visibleModals.length&&(event.preventDefault(),(event=event.target===after?tabbable.getFirstTabbableIn(dialog):tabbable.getLastTabbableIn(dialog))?event.focus():dialog.focus())};before.addEventListener("focus",handleFocus);after.addEventListener("focus",
handleFocus);return function(){before.removeEventListener("focus",handleFocus);after.removeEventListener("focus",handleFocus)}}},[dialogRef,visibleModals,shouldTrap])}function useFocusOnHide(dialogRef,disclosureRef,options){var shouldFocus=options.unstable_autoFocusOnHide&&!options.visible,animating=!(!options.animated||!options.animating);useUpdateEffect.useUpdateEffect(function(){var _options$unstable_fin,JSCompiler_temp;if(JSCompiler_temp=shouldFocus)if(JSCompiler_temp=!animating){if(JSCompiler_temp=
dialogRef.current){var activeElement=getActiveElement.getActiveElement(JSCompiler_temp);JSCompiler_temp=!activeElement||contains.contains(JSCompiler_temp,activeElement)?!1:tabbable.isTabbable(activeElement)||"true"===activeElement.getAttribute("data-dialog")?!0:!1}else JSCompiler_temp=!1;JSCompiler_temp=!JSCompiler_temp}if(JSCompiler_temp)if(JSCompiler_temp=(null===(_options$unstable_fin=options.unstable_finalFocusRef)||void 0===_options$unstable_fin?void 0:_options$unstable_fin.current)||disclosureRef.current){if(JSCompiler_temp.id&&
(_options$unstable_fin=getDocument.getDocument(JSCompiler_temp).querySelector("[aria-activedescendant\x3d'"+JSCompiler_temp.id+"']"))){ensureFocus.ensureFocus(_options$unstable_fin);return}ensureFocus.ensureFocus(JSCompiler_temp)}else reakitWarning.warning(!0,"Can't return focus after closing dialog. Either render a disclosure component or provide a `unstable_finalFocusRef` prop.","See https://reakit.io/docs/dialog",dialogRef.current)},[shouldFocus,animating,dialogRef,disclosureRef])}function useNestedDialogs(dialogRef,
options){var context=React.useContext(DialogContext),_React$useState=React.useState([]),dialogs=_React$useState[0],setDialogs=_React$useState[1],_React$useState2=React.useState(dialogs);_React$useState=_React$useState2[0];var setVisibleModals=_React$useState2[1],addDialog=React.useCallback(function(ref){var _context$addDialog;null===(_context$addDialog=context.addDialog)||void 0===_context$addDialog?void 0:_context$addDialog.call(context,ref);setDialogs(function(prevDialogs){return[].concat(prevDialogs,
[ref])})},[context.addDialog]),removeDialog=React.useCallback(function(ref){var _context$removeDialog;null===(_context$removeDialog=context.removeDialog)||void 0===_context$removeDialog?void 0:_context$removeDialog.call(context,ref);setDialogs(function(prevDialogs){return removeItemFromArray.removeItemFromArray(prevDialogs,ref)})},[context.removeDialog]),showDialog=React.useCallback(function(ref){var _context$showDialog;null===(_context$showDialog=context.showDialog)||void 0===_context$showDialog?
void 0:_context$showDialog.call(context,ref);setVisibleModals(function(prevDialogs){return[].concat(prevDialogs,[ref])})},[context.showDialog]),hideDialog=React.useCallback(function(ref){var _context$hideDialog;null===(_context$hideDialog=context.hideDialog)||void 0===_context$hideDialog?void 0:_context$hideDialog.call(context,ref);setVisibleModals(function(prevDialogs){return removeItemFromArray.removeItemFromArray(prevDialogs,ref)})},[context.hideDialog]);React.useEffect(function(){var _context$addDialog2;
if(!options.unstable_orphan)return null===(_context$addDialog2=context.addDialog)||void 0===_context$addDialog2?void 0:_context$addDialog2.call(context,dialogRef),function(){var _context$removeDialog2;null===(_context$removeDialog2=context.removeDialog)||void 0===_context$removeDialog2?void 0:_context$removeDialog2.call(context,dialogRef)}},[options.unstable_orphan,context.addDialog,dialogRef,context.removeDialog]);React.useEffect(function(){var _context$showDialog2;if(!options.unstable_orphan&&options.modal&&
options.visible)return null===(_context$showDialog2=context.showDialog)||void 0===_context$showDialog2?void 0:_context$showDialog2.call(context,dialogRef),function(){var _context$hideDialog2;null===(_context$hideDialog2=context.hideDialog)||void 0===_context$hideDialog2?void 0:_context$hideDialog2.call(context,dialogRef)}},[options.unstable_orphan,options.modal,options.visible,context.showDialog,dialogRef,context.hideDialog]);React.useEffect(function(){if(!1===context.visible&&options.visible&&!options.unstable_orphan){var _options$hide;
null===(_options$hide=options.hide)||void 0===_options$hide?void 0:_options$hide.call(options)}},[context.visible,options.visible,options.hide,options.unstable_orphan]);var providerValue=React.useMemo(function(){return{visible:options.visible,addDialog,removeDialog,showDialog,hideDialog}},[options.visible,addDialog,removeDialog,showDialog,hideDialog]);_React$useState2=React.useCallback(function(element){return React.createElement(DialogContext.Provider,{value:providerValue},element)},[providerValue]);
return{dialogs,visibleModals:_React$useState,wrap:_React$useState2}}function dialogContains(target){return function(dialogRef){dialogRef=dialogRef.current;return dialogRef?contains.contains(dialogRef,target)?!0:(dialogRef=getDocument.getDocument(dialogRef).querySelector('[data-dialog-ref\x3d"'+dialogRef.id+'"]'))?contains.contains(dialogRef,target):!1:!1}}function useEventListenerOutside(containerRef,disclosureRef,nestedDialogs,eventType,listener,shouldListen,capture){var listenerRef=useLiveRef.useLiveRef(listener);
React.useEffect(function(){if(shouldListen){var onEvent=function(event){if(listenerRef.current){var container=containerRef.current,disclosure=disclosureRef.current,target=event.target;if(container){var JSCompiler_inline_result=getDocument.getDocument(target);JSCompiler_inline_result="HTML"===target.tagName?!0:contains.contains(JSCompiler_inline_result.body,target);if(JSCompiler_inline_result&&!(contains.contains(container,target)||disclosure&&contains.contains(disclosure,target))){var _element$classList;
(null===(_element$classList=target.classList)||void 0===_element$classList?0:_element$classList.contains("__reakit-focus-trap"))||nestedDialogs.some(dialogContains(target))||listenerRef.current(event)}}else reakitWarning.warning(!0,"Can't detect events outside dialog because `ref` wasn't passed to component.","See https://reakit.io/docs/dialog")}},document=getDocument.getDocument(containerRef.current);document.addEventListener(eventType,onEvent,capture);return function(){return document.removeEventListener(eventType,
onEvent,capture)}}},[containerRef,disclosureRef,nestedDialogs,eventType,shouldListen,listenerRef])}function useMouseDownRef(dialogRef,options){var mouseDownRef=React.useRef();React.useEffect(function(){if(options.visible&&options.hideOnClickOutside){var document=getDocument.getDocument(dialogRef.current),onMouseDown=function(event){mouseDownRef.current=event.target};document.addEventListener("mousedown",onMouseDown);return function(){return document.removeEventListener("mousedown",onMouseDown)}}},
[options.visible,options.hideOnClickOutside,dialogRef]);return mouseDownRef}function useHideOnClickOutside(dialogRef,disclosureRef,nestedDialogs,options){var mouseDownRef=useMouseDownRef(dialogRef,options);useEventListenerOutside(dialogRef,disclosureRef,nestedDialogs,"click",function(event){if(mouseDownRef.current===event.target){var _options$hide;null===(_options$hide=options.hide)||void 0===_options$hide?void 0:_options$hide.call(options)}},options.visible&&options.hideOnClickOutside);useEventListenerOutside(dialogRef,
disclosureRef,nestedDialogs,"focusin",function(event){var document=getDocument.getDocument(dialogRef.current);if(event.target!==document&&event.target!==document.body){var _options$hide2;null===(_options$hide2=options.hide)||void 0===_options$hide2?void 0:_options$hide2.call(options)}},options.visible&&options.hideOnClickOutside)}function useDisableHoverOutside(portalRef,nestedDialogs,options){var useEvent=function(eventType){return useEventListenerOutside(portalRef,{current:null},nestedDialogs,eventType,
function(event){event.stopPropagation();event.preventDefault()},options.visible&&options.modal,!0)};useEvent("mouseover");useEvent("mousemove");useEvent("mouseout")}function useFocusOnChildUnmount(dialogRef,options){React.useEffect(function(){var dialog=dialogRef.current;if(options.visible&&dialog){var observer=new MutationObserver(function(mutations){if(mutations[0].target===dialog){mutations=getDocument.getDocument(dialog);var activeElement=getActiveElement.getActiveElement(dialog);(activeElement===
mutations.body||isEmpty.isEmpty(activeElement))&&dialog.focus()}});observer.observe(dialog,{childList:!0,subtree:!0});return function(){observer.disconnect()}}},[options.visible,dialogRef])}function isActualElement(element){return element&&element.tagName&&"HTML"!==element.tagName&&element!==getDocument.getDocument(element).body}function useFocusOnBlur(dialogRef,options){var _React$useReducer=React.useReducer(function(n){return n+1},0),blurred=_React$useReducer[0],scheduleFocus=_React$useReducer[1];
useIsomorphicEffect.useIsomorphicEffect(function(){var dialog=dialogRef.current;options.visible&&blurred&&!isActualElement(getActiveElement.getActiveElement(dialog))&&(reakitWarning.warning(!dialog,"Can't focus dialog after a nested element got blurred because `ref` wasn't passed to the component","See https://reakit.io/docs/dialog"),null===dialog||void 0===dialog?void 0:dialog.focus())},[blurred,dialogRef]);return React.useCallback(function(event){options.visible&&(event=getNextActiveElementOnBlur.getNextActiveElementOnBlur(event),
isActualElement(event)||scheduleFocus())},[options.visible])}Object.defineProperty(exports,"__esModule",{value:!0});var _rollupPluginBabelHelpers=require("module$node_modules$reakit$lib$_rollupPluginBabelHelpers_8f9a8751");global=require("module$node_modules$reakit_system$lib$createComponent");module=require("module$node_modules$reakit_system$lib$createHook");require("module$node_modules$reakit_utils$lib$shallowEqual");var React=require("module$node_modules$react$index"),useForkRef=require("module$node_modules$reakit_utils$lib$useForkRef"),
isButton=require("module$node_modules$reakit_utils$lib$isButton"),reakitWarning=require("module$node_modules$reakit_warning$lib$index"),useLiveRef=require("module$node_modules$reakit_utils$lib$useLiveRef");require("module$node_modules$reakit_utils$lib$isSelfTarget");var useIsomorphicEffect=require("module$node_modules$reakit_utils$lib$useIsomorphicEffect"),hasFocusWithin=require("module$node_modules$reakit_utils$lib$hasFocusWithin"),tabbable=require("module$node_modules$reakit_utils$lib$tabbable");
require("module$node_modules$reakit$lib$Role$Role");var useUpdateEffect=require("module$node_modules$reakit_utils$lib$useUpdateEffect"),useCreateElement=require("module$node_modules$reakit_system$lib$useCreateElement"),getDocument=require("module$node_modules$reakit_utils$lib$getDocument");require("module$node_modules$reakit_utils$lib$canUseDOM");var getNextActiveElementOnBlur=require("module$node_modules$reakit_utils$lib$getNextActiveElementOnBlur"),ensureFocus=require("module$node_modules$reakit_utils$lib$ensureFocus");
require("module$node_modules$reakit$lib$__keys_f41a441b");var Disclosure_DisclosureContent=require("module$node_modules$reakit$lib$Disclosure$DisclosureContent");require("module$node_modules$react_dom$index");var Portal_Portal=require("module$node_modules$reakit$lib$Portal$Portal"),removeItemFromArray=require("module$node_modules$reakit_utils$lib$removeItemFromArray"),MenuContext=require("module$node_modules$reakit$lib$MenuContext_2d32bb3e"),bodyScrollLock=require("module$node_modules$body_scroll_lock$lib$bodyScrollLock_min"),
closest=require("module$node_modules$reakit_utils$lib$closest"),getActiveElement=require("module$node_modules$reakit_utils$lib$getActiveElement"),contains=require("module$node_modules$reakit_utils$lib$contains"),DialogBackdropContext=require("module$node_modules$reakit$lib$DialogBackdropContext_b43e21d7"),isEmpty=require("module$node_modules$reakit_utils$lib$isEmpty");require=require("module$node_modules$reakit$lib$__keys_0c8e6398");var DialogContext=React.createContext({});require=module.createHook({name:"Dialog",
compose:Disclosure_DisclosureContent.useDisclosureContent,keys:require.DIALOG_KEYS,useOptions:function(_ref){var _ref$modal=_ref.modal;_ref$modal=void 0===_ref$modal?!0:_ref$modal;var _ref$hideOnEsc=_ref.hideOnEsc;_ref$hideOnEsc=void 0===_ref$hideOnEsc?!0:_ref$hideOnEsc;var _ref$hideOnClickOutsi=_ref.hideOnClickOutside;_ref$hideOnClickOutsi=void 0===_ref$hideOnClickOutsi?!0:_ref$hideOnClickOutsi;var _ref$preventBodyScrol=_ref.preventBodyScroll;_ref$preventBodyScrol=void 0===_ref$preventBodyScrol?
_ref$modal:_ref$preventBodyScrol;var _ref$unstable_autoFoc=_ref.unstable_autoFocusOnShow;_ref$unstable_autoFoc=void 0===_ref$unstable_autoFoc?!0:_ref$unstable_autoFoc;var _ref$unstable_autoFoc2=_ref.unstable_autoFocusOnHide;_ref$unstable_autoFoc2=void 0===_ref$unstable_autoFoc2?!0:_ref$unstable_autoFoc2;var unstable_orphan=_ref.unstable_orphan;_ref=_rollupPluginBabelHelpers._objectWithoutPropertiesLoose(_ref,"modal hideOnEsc hideOnClickOutside preventBodyScroll unstable_autoFocusOnShow unstable_autoFocusOnHide unstable_orphan".split(" "));
return _rollupPluginBabelHelpers._objectSpread2({modal:_ref$modal,hideOnEsc:_ref$hideOnEsc,hideOnClickOutside:_ref$hideOnClickOutsi,preventBodyScroll:_ref$modal&&_ref$preventBodyScrol,unstable_autoFocusOnShow:_ref$unstable_autoFoc,unstable_autoFocusOnHide:_ref$unstable_autoFoc2,unstable_orphan:_ref$modal&&unstable_orphan},_ref)},useProps:function(options,_ref2){var htmlRef=_ref2.ref,htmlOnKeyDown=_ref2.onKeyDown,htmlOnBlur=_ref2.onBlur,htmlWrapElement=_ref2.wrapElement,tabIndex=_ref2.tabIndex;_ref2=
_rollupPluginBabelHelpers._objectWithoutPropertiesLoose(_ref2,["ref","onKeyDown","onBlur","wrapElement","tabIndex"]);var dialog=React.useRef(null),backdrop=React.useContext(DialogBackdropContext.DialogBackdropContext),hasBackdrop=backdrop&&backdrop===options.baseId;backdrop=useDisclosureRef(dialog,options);var onKeyDownRef=useLiveRef.useLiveRef(htmlOnKeyDown),onBlurRef=useLiveRef.useLiveRef(htmlOnBlur),focusOnBlur=useFocusOnBlur(dialog,options);htmlOnKeyDown=useNestedDialogs(dialog,options);htmlOnBlur=
htmlOnKeyDown.dialogs;var visibleModals=htmlOnKeyDown.visibleModals,wrap=htmlOnKeyDown.wrap;htmlOnKeyDown=options.modal&&!visibleModals.length?!0:void 0;usePreventBodyScroll(dialog,options);useFocusTrap(dialog,visibleModals,options);useFocusOnChildUnmount(dialog,options);useFocusOnShow(dialog,htmlOnBlur,options);useFocusOnHide(dialog,backdrop,options);useHideOnClickOutside(dialog,backdrop,htmlOnBlur,options);useDisableHoverOutside(dialog,htmlOnBlur,options);backdrop=React.useCallback(function(event){var _onKeyDownRef$current;
null===(_onKeyDownRef$current=onKeyDownRef.current)||void 0===_onKeyDownRef$current?void 0:_onKeyDownRef$current.call(onKeyDownRef,event);!event.defaultPrevented&&"Escape"===event.key&&options.hideOnEsc&&(options.hide?(event.stopPropagation(),options.hide()):reakitWarning.warning(!0,"`hideOnEsc` prop is truthy, but `hide` prop wasn't provided.","See https://reakit.io/docs/dialog",dialog.current))},[options.hideOnEsc,options.hide]);htmlOnBlur=React.useCallback(function(event){var _onBlurRef$current;
null===(_onBlurRef$current=onBlurRef.current)||void 0===_onBlurRef$current?void 0:_onBlurRef$current.call(onBlurRef,event);focusOnBlur(event)},[focusOnBlur]);visibleModals=React.useCallback(function(element){element=wrap(element);options.modal&&!hasBackdrop&&(element=React.createElement(Portal_Portal.Portal,null,element));htmlWrapElement&&(element=htmlWrapElement(element));return React.createElement(MenuContext.MenuContext.Provider,{value:null},element)},[wrap,options.modal,hasBackdrop,htmlWrapElement]);
return _rollupPluginBabelHelpers._objectSpread2({ref:useForkRef.useForkRef(dialog,htmlRef),role:"dialog",tabIndex:null!=tabIndex?tabIndex:-1,"aria-modal":htmlOnKeyDown,"data-dialog":!0,onKeyDown:backdrop,onBlur:htmlOnBlur,wrapElement:visibleModals},_ref2)}});global=global.createComponent({as:"div",useHook:require,useCreateElement:function(type,props,children){reakitWarning.useWarning(!props["aria-label"]&&!props["aria-labelledby"],"You should provide either `aria-label` or `aria-labelledby` props.",
"See https://reakit.io/docs/dialog");return useCreateElement.useCreateElement(type,props,children)}});exports.Dialog=global;exports.useDialog=require}
//# sourceMappingURL=module$node_modules$reakit$lib$Dialog$Dialog.js.map
