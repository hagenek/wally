{
"version":3,
"file":"module$node_modules$reakit_utils$lib$getWindow.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,8CAAA,CAAmE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG3GC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CAEA,KAAIC,YAAcN,OAAA,CAAQ,kDAAR,CASlB,IAAI,CACF,IAAAO,QAAUC,MADR,CAEF,MAAOC,CAAP,CAAU,EAgBZP,OAAQQ,CAAAA,SAAR,CARAA,QAAkB,CAACC,OAAD,CAAU,CAC1B,MAAKA,QAAL,CAIOL,WAAYA,CAAAA,WAAZ,CAAwBK,OAAxB,CAAiCC,CAAAA,WAJxC,EAIuDL,OAJvD,CACSA,OAFiB,CAxB+E;",
"sources":["node_modules/reakit-utils/lib/getWindow.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$reakit_utils$lib$getWindow\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar getDocument = require('./getDocument.js');\n\n// Thanks to Fluent UI for doing the [research on IE11 memory leak](https://github.com/microsoft/fluentui/pull/9010#issuecomment-490768427)\n\nvar _window; // Note: Accessing \"window\" in IE11 is somewhat expensive, and calling \"typeof window\"\n// hits a memory leak, whereas aliasing it and calling \"typeof _window\" does not.\n// Caching the window value at the file scope lets us minimize the impact.\n\n\ntry {\n  _window = window;\n} catch (e) {\n  /* no-op */\n}\n/**\n * Returns `element.ownerDocument.defaultView || window`.\n */\n\n\nfunction getWindow(element) {\n  if (!element) {\n    return _window;\n  }\n\n  return getDocument.getDocument(element).defaultView || _window;\n}\n\nexports.getWindow = getWindow;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","getDocument","_window","window","e","getWindow","element","defaultView"]
}
