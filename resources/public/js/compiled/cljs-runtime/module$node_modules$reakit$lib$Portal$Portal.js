shadow$provide.module$node_modules$reakit$lib$Portal$Portal=function(global,require,module,exports){function Portal(_ref){_ref=_ref.children;var context=React.useContext(PortalContext)||(canUseDOM.canUseDOM?document.body:null),hostNode=React.useState(function(){if(canUseDOM.canUseDOM){var element=document.createElement("div");element.className=Portal.__className;return element}return null})[0];useIsomorphicEffect.useIsomorphicEffect(function(){if(hostNode&&context)return context.appendChild(hostNode),
function(){context.removeChild(hostNode)}},[hostNode,context]);return hostNode?ReactDOM.createPortal(React.createElement(PortalContext.Provider,{value:hostNode},_ref),hostNode):null}Object.defineProperty(exports,"__esModule",{value:!0});var React=require("module$node_modules$react$index"),useIsomorphicEffect=require("module$node_modules$reakit_utils$lib$useIsomorphicEffect"),canUseDOM=require("module$node_modules$reakit_utils$lib$canUseDOM"),ReactDOM=require("module$node_modules$react_dom$index"),
PortalContext=React.createContext(canUseDOM.canUseDOM?document.body:null);Portal.__className="__reakit-portal";Portal.__selector="."+Portal.__className;exports.Portal=Portal;exports.PortalContext=PortalContext}
//# sourceMappingURL=module$node_modules$reakit$lib$Portal$Portal.js.map
