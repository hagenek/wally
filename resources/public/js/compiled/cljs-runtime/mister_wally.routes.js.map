{"version":3,"sources":["mister_wally/routes.cljs"],"mappings":";AAOA,GAAA,QAAAA,yCAAAC,gDAAAC;AAAA;AAAA,AAAA,6BAAA,iBAAAC,6BAAA,AAAAC,6CAAA,xHAAUS;IAAVR,6BAAA,AAAAD,6CAAA;IAAAE,6BAAA,AAAAF,6CAAA;IAAAG,iCAAA,AAAAH,6CAAA;IAAAI,0BAAA,AAAAC,4CAAA,mCAAA,gEAAA,iBAAAC,eAAA;AAAA,AAAA,QAAAA,6CAAAA,+CAAAA;;AAAA,AAAA,YAAAC,kBAAA,AAAAC,+CAAA,sBAAA,6BAAA,4DAAAJ,wBAAAL,2BAAAE,2BAAAC,2BAAAC,xLAAiBO;;;AACjB,AAAAD,uEAAA,4DAAA;AAAA,AAAA,0FAAA,mDAAA;;AAEA,AAAKE,6BACH,6CAAA,mFAAA,IAAA,2CAAA,GAAA,oDAAA,QAAA,uDAAA,QAAA,7SAACX;AAMH,4BAAA,5BAAMY,gEACHC;AADH,AAEE,6BAAA,AAAAC,tBAACC,sCAAkBJ,4BAAOE;;AAE5B,AAAA,8BAAA,sCAAAG,pEAAMM;AAAN,AAAA,IAAAL,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAK,iEAAAF;;;AAAA,AAAA,CAAA,mEAAA,nEAAME,8EACDI;AADL,AAEE,OAACC,8CAAMC,mBAAc,6CAAA,mFAAA,AAAAd,hIAACe,gJAAOlB,oCAAQe;;;AAFvC,CAAA,sDAAA,tDAAMJ;;AAAN;AAAA,CAAA,gDAAA,WAAAC,3DAAMD;AAAN,AAAA,IAAAE,qBAAA;AAAA,AAAA,OAAAA,wDAAA,AAAAC,cAAAF;;;AAAA,AAIA,+BAAA,/BAAMO,sEACHC;AADH,AAEE,IAAMC,QAAM,AAACC,gDAAQ,iHAAA,hHAAK,AAACC,eAAK,AAAA,yFAAUH;AAA1C,AACE,8BAAA,mFAAA,1GAACI,4NAA6CH;;AAElD,GAAA,QAAApC,yCAAAC,gDAAAuC;AAAA;AAAA,AAAA,AAASC,8BACP,AAACC,iBAAYR,6BAASlB;;AAExB,qCAAA,rCAAM2B,kFACHC;AADH,AAEE,OAAkBH,6EAAQ,AAACI,mHAAQD;;AAErC,kCAAA,lCAAME;AAAN,AAEE,OAAcL;;AAEhB,qBAAA,rBAACM,iFAEC,WAAKH;AAAL,AACE,OAACD,mCAAUC","names":["js/mister-wally","js/mister-wally.routes","js/mister-wally.routes.panels","method-table__4701__auto__","cljs.core.atom","prefer-table__4702__auto__","method-cache__4703__auto__","cached-hierarchy__4704__auto__","hierarchy__4705__auto__","cljs.core.get","fexpr__47341","cljs.core/MultiFn","cljs.core.symbol","mister-wally.routes/panels","cljs.core/identity","mister-wally.routes/routes","mister-wally.routes/parse","url","cljs.core/deref","bidi.bidi/match-route","var_args","args__4824__auto__","len__4818__auto__","i__4819__auto__","argseq__4825__auto__","cljs.core/IndexedSeq","mister-wally.routes/url-for","seq47342","self__4806__auto__","cljs.core/seq","args","cljs.core.apply","bidi.bidi/path-for","cljs.core.into","mister-wally.routes/dispatch","route","panel","cljs.core.keyword","cljs.core/name","re-frame.core/dispatch","js/mister-wally.routes.history","mister-wally.routes/history","pushy.core/pushy","mister-wally.routes/navigate!","handler","mister_wally.routes.url_for","mister-wally.routes/start!","re-frame.core/reg-fx"],"sourcesContent":["(ns mister-wally.routes\n  (:require\n   [bidi.bidi :as bidi]\n   [pushy.core :as pushy]\n   [re-frame.core :as re-frame]\n   [mister-wally.events :as events]))\n\n(defmulti panels identity)\n(defmethod panels :default [] [:div \"No panel found for this route.\"])\n\n(def routes\n  (atom\n    [\"/\" {\"\"      :home\n          \"about\" :about\n          \"login\" :login\n          }]))\n\n(defn parse\n  [url]\n  (bidi/match-route @routes url))\n\n(defn url-for\n  [& args]\n  (apply bidi/path-for (into [@routes] args)))\n\n(defn dispatch\n  [route]\n  (let [panel (keyword (str (name (:handler route)) \"-panel\"))]\n    (re-frame/dispatch [::events/set-active-panel panel])))\n\n(defonce history\n  (pushy/pushy dispatch parse))\n\n(defn navigate!\n  [handler]\n  (pushy/set-token! history (url-for handler)))\n\n(defn start!\n  []\n  (pushy/start! history))\n\n(re-frame/reg-fx\n  :navigate\n  (fn [handler]\n    (navigate! handler)))\n"]}