{
"version":3,
"file":"module$node_modules$polished$lib$shorthands$border.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,kDAAA,CAAuE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG/GA,OAAQC,CAAAA,UAAR,CAAqB,CAAA,CACrBD,QAAQE,CAAAA,OAAR,CAAkB,IAAK,EAEvB,KAAIC,kBAMJC,QAA+B,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIJ,CAAAA,UAAX,CAAwBI,GAAxB,CAA8B,CAAEH,QAASG,GAAX,CAAvC,CAJrC,CAEAP,OAAA,CAAQ,oEAAR,CAFA,CAFA,CAQIQ,QAAU,CAAC,KAAD,CAAQ,OAAR,CAAiB,QAAjB,CAA2B,MAA3B,CA8DdN,QAAQE,CAAAA,OAAR,CApBAK,QAAe,CAACC,WAAD,CAAc,CAC3B,IAD2B,IAClBC,KAAOC,SAAUC,CAAAA,MADC,CACOC,OAAaC,KAAJ,CAAiB,CAAP,CAAAJ,IAAA,CAAWA,IAAX,CAAkB,CAAlB,CAAsB,CAAhC,CADhB,CACoDK,KAAO,CAAtF,CAAyFA,IAAzF,CAAgGL,IAAhG,CAAsGK,IAAA,EAAtG,CACEF,MAAA,CAAOE,IAAP,CAAc,CAAd,CAAA,CAAmBJ,SAAA,CAAUI,IAAV,CAGrB;GAA2B,QAA3B,GAAI,MAAON,YAAX,EAAuE,CAAvE,EAAuCF,OAAQS,CAAAA,OAAR,CAAgBP,WAAhB,CAAvC,CAA0E,CACxE,IAAIQ,IAEJ,OAAOA,KAAA,CAAO,EAAP,CAAWA,IAAA,CAAK,QAAL,CAAgB,CAAC,CAAA,CAAGb,iBAAkBD,CAAAA,OAAtB,EAA+BM,WAA/B,CAAhB,CAA8D,OAA9D,CAAX,CAAoFI,MAAA,CAAO,CAAP,CAApF,CAA+FI,IAAA,CAAK,QAAL,CAAgB,CAAC,CAAA,CAAGb,iBAAkBD,CAAAA,OAAtB,EAA+BM,WAA/B,CAAhB,CAA8D,OAA9D,CAA/F,CAAwKI,MAAA,CAAO,CAAP,CAAxK,CAAmLI,IAAA,CAAK,QAAL,CAAgB,CAAC,CAAA,CAAGb,iBAAkBD,CAAAA,OAAtB,EAA+BM,WAA/B,CAAhB,CAA8D,OAA9D,CAAnL,CAA4PI,MAAA,CAAO,CAAP,CAA5P,CAAuQI,IAHtM,CAKxEJ,MAAOK,CAAAA,OAAP,CAAeT,WAAf,CACA,OAAO,CACLU,YAAaN,MAAA,CAAO,CAAP,CADR,CAELO,YAAaP,MAAA,CAAO,CAAP,CAFR,CAGLQ,YAAaR,MAAA,CAAO,CAAP,CAHR,CAXkB,CAqB7Bb,OAAOC,CAAAA,OAAP,CAAiBA,OAAQE,CAAAA,OA7EsF;",
"sources":["node_modules/polished/lib/shorthands/border.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$polished$lib$shorthands$border\"] = function(global,require,module,exports) {\n\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _capitalizeString =\n/*#__PURE__*/\n_interopRequireDefault(\n/*#__PURE__*/\nrequire(\"../internalHelpers/_capitalizeString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar sideMap = ['top', 'right', 'bottom', 'left'];\n/**\n * Shorthand for the border property that splits out individual properties for use with tools like Fela and Styletron. A side keyword can optionally be passed to target only one side's border properties.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...border('1px', 'solid', 'red')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${border('1px', 'solid', 'red')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'borderColor': 'red',\n *   'borderStyle': 'solid',\n *   'borderWidth': `1px`,\n * }\n *\n * // Styles as object usage\n * const styles = {\n *   ...border('top', '1px', 'solid', 'red')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${border('top', '1px', 'solid', 'red')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'borderTopColor': 'red',\n *   'borderTopStyle': 'solid',\n *   'borderTopWidth': `1px`,\n * }\n */\n\nfunction border(sideKeyword) {\n  for (var _len = arguments.length, values = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    values[_key - 1] = arguments[_key];\n  }\n\n  if (typeof sideKeyword === 'string' && sideMap.indexOf(sideKeyword) >= 0) {\n    var _ref;\n\n    return _ref = {}, _ref[\"border\" + (0, _capitalizeString.default)(sideKeyword) + \"Width\"] = values[0], _ref[\"border\" + (0, _capitalizeString.default)(sideKeyword) + \"Style\"] = values[1], _ref[\"border\" + (0, _capitalizeString.default)(sideKeyword) + \"Color\"] = values[2], _ref;\n  } else {\n    values.unshift(sideKeyword);\n    return {\n      borderWidth: values[0],\n      borderStyle: values[1],\n      borderColor: values[2]\n    };\n  }\n}\n\nvar _default = border;\nexports.default = _default;\nmodule.exports = exports.default;\n};"],
"names":["shadow$provide","global","require","module","exports","__esModule","default","_capitalizeString","_interopRequireDefault","obj","sideMap","border","sideKeyword","_len","arguments","length","values","Array","_key","indexOf","_ref","unshift","borderWidth","borderStyle","borderColor"]
}
